{"CNPS-1352": {"assignee": null, "created": "2019-12-05T11:31:09+11:00", "creator": "sarkers1", "description": "During the Artifactory Alpine-linux plugin deployment in production [https://jira.service.anz/browse/CNPS-1300],\u00a0we discover, \"inactiveServerCleaner\" exists in production environment which is not part of Artifactory Image.\r\nOur initial assumption, this plugin is deployed manually to artifactory prod persistence volume. Moreover, the current deployment version of this plugin in prod artifactory is out of date and not working.\r\n\r\nFollowing things need to investigate regarding this plugin:\r\n * Is this plugin part of artifactory image?\r\n * Do we need this plugin?\r\n * If we need this plugin then use the current version of this plugin to make this work.\r\nMore Info:\u00a0[https://github.com/jfrog/artifactory-user-plugins/tree/master/ha/inactiveServerCleaner]\r\nFix Changes:-\u00a0[https://github.com/jfrog/artifactory-user-plugins/commit/ceecd92db53e9e8302939290a29b40228024e467]\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1352", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Backlog", "summary": "Investigate Artifactory Plugin inactiveServerCleaner in Production", "updated": "2019-12-05T11:38:41+11:00", "estimate": 2.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1351": {"assignee": "agrawad", "created": "2019-12-04T12:06:07+11:00", "creator": "agrawad", "description": "While on support, Joel Wood advised that Artifactory is asking for authentication for list the tag for docker repo.\r\n\r\nSo basically, he should be able to run:\r\n\r\ncurl -X GET [https://omni.artifactory.gcp.anz/v2/alpine/tags/list]\r\n\r\nto get the tag\u00a0\r\n\r\nBut the above command results in:\r\n\r\n{\"errors\":[\\\\{\"code\":\"UNAUTHORIZED\",\"message\":\"authentication required\",\"detail\":null}\r\n\r\n]}", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1351", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story in Progress", "summary": "Artifactory requiring authentication for Docker tag list ", "updated": "2019-12-05T12:30:12+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1350": {"assignee": "dugalp", "created": "2019-12-03T14:17:21+11:00", "creator": "dugalp", "description": "From: \"Choo, Hwan-Yi\" <hwan-yi.choo@anz.com>\r\nDate: Monday, 2 December 2019 at 4:58 pm\r\nTo: \"Dugal, Patrick\" <Patrick.Dugal@anz.com>, \"Black, Matthew\" <Matthew.Black@anz.com>\r\nCc: \"Sharma, Prachika\" <Prachika.Sharma@anz.com>, \"Gan, Ern\" <SengErn.Gan@anz.com>\r\nSubject: Bamboo agent time not in sync with server.\r\n\r\nHi Patrick/Matt, \r\n \r\ncan you please assist with this Bamboo agent error?\r\nhttps://bamboo.service.anz/browse/EMA-SEAA-SA-10/log\r\n02-Dec-2019 16:25:32 Agent machine time is lower than the server machine time, please synchronize them.\r\n \r\nRegrads,\r\nHwan-Yi\r\n", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1350", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Done", "summary": "Bamboo agent time not in sync with server for Employee Experience developer", "updated": "2019-12-03T15:26:17+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1349": {"assignee": "dugalp", "created": "2019-12-03T13:30:44+11:00", "creator": "dugalp", "description": "[~marabeap] requested to restore the repo anzx/newrelic_deploy which requires site admin.\r\n\r\n", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1349", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Done", "summary": "Restore repo in GHE for ANZx/ABT user", "updated": "2019-12-03T13:33:14+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1348": {"assignee": "hidera", "created": "2019-12-03T09:24:16+11:00", "creator": "hidera", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1348", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "upgrade Artifactory to v6.16.0 due to security issue.", "updated": "2019-12-03T11:17:15+11:00", "estimate": 3.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1347": {"assignee": null, "created": "2019-12-02T16:05:07+11:00", "creator": "hidera", "description": "Need to remove 'csp_buildbot' which is a user, but we aren't allowed to have non-human users in Artifactory.\r\n\r\n\u00a0\r\n\r\nWill need to transition user to utilising access-tokens, and ultimately delete the csp_buildbot user.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1347", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Backlog", "summary": "Remove artifactory user, and generate access token for csp_buildbot user.", "updated": "2019-12-02T16:07:32+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1346": {"assignee": "hidera", "created": "2019-11-29T10:32:08+11:00", "creator": "hidera", "description": "Upgrade Artifactory to v6.15.0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1346", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Upgrade Artifactory to v6.15.0", "updated": "2019-11-29T15:21:35+11:00", "estimate": 1.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1345": {"assignee": "headenj1", "created": "2019-11-28T11:12:17+11:00", "creator": "headenj1", "description": "A new version of gitsync code was written to cater for multiple status messages being posted back to GHE by cloudbuild.\r\nThis will  release to canary build to confirm it does not break functionality", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1345", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "In Release", "summary": "gitsync code release", "updated": "2019-11-28T15:46:31+11:00", "estimate": 2.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1344": {"assignee": "headenj1", "created": "2019-11-27T11:05:16+11:00", "creator": "headenj1", "description": "DCX use spinnaker to deploy to firebase. they do not have a kubernetes cluster.\r\nWhenever they enable application permissions the automated triggers which use pubsub stop working", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1344", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Application permissions preventing pubsub triggers working", "updated": "2019-11-28T11:01:09+11:00", "estimate": 12.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1343": {"assignee": null, "created": "2019-11-26T11:01:07+11:00", "creator": "hidera", "description": "Bamboo terraform for our main eng-accel-infra repo, keeps complaining about us still using \"region\" instead of \"location\".\r\n\r\n\u00a0\r\n\r\nWe should update our terraform, so the warnings go away.\r\n\r\n\u00a0\r\n\r\nRelevant commit (there may be others, can check changelog for gcp terraform provider)\r\n\r\n\u00a0\r\n\r\n[https://github.com/terraform-providers/terraform-provider-google/pull/3114/commits/b28e71f6086e101ce515308c3b96db99576836f4]\r\n{code:java}\r\nWarning: google_container_cluster.cluster: \"region\": [DEPRECATED] Use location instead\r\n\r\n\r\nWarning: google_container_node_pool.default_node_pool: \"region\": [DEPRECATED] use location instead\r\n\r\n\r\nWarning: google_container_node_pool.node_pool: \"region\": [DEPRECATED] use location instead\r\n\r\n\r\nWarning: google_container_node_pool.spinnaker_pool: \"region\": [DEPRECATED] use location instead\r\n\r\nWarning: google_container_cluster.cluster: \"region\": [DEPRECATED] Use location instead\r\n\r\n\r\nWarning: google_container_node_pool.default_node_pool: \"region\": [DEPRECATED] use location instead\r\n\r\n\r\nWarning: google_container_node_pool.node_pool: \"region\": [DEPRECATED] use location instead\r\n\r\n\r\nWarning: google_container_node_pool.spinnaker_pool: \"region\": [DEPRECATED] use location instead\r\n{code}", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1343", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Backlog", "summary": "Update eng-accel-infra terraform to use location and stop deprecation warnings", "updated": "2019-11-26T11:01:13+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1342": {"assignee": "kuzhinjr", "created": "2019-11-22T15:33:12+11:00", "creator": "kuzhinjr", "description": "Raymond(HE) Xu has requested for remote repository :\u00a0https://mcr.microsoft.com\r\n\r\nWill require whitelisting.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1342", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "kuzhinjr", "status": "Story Done", "summary": "Artifactory Remote Repo for mcr.microsoft.com", "updated": "2019-11-28T11:29:06+11:00", "estimate": 2.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1340": {"assignee": null, "created": "2019-11-20T16:26:51+11:00", "creator": "vadrevus", "description": "Test existing functionality of spinnaker :\r\n* Run demo pipeline.\r\n* Create new spin config accounts.\r\n* Check pipeline history.\r\n* Check infrastructure tab. ", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1340", "labels": [], "lastViewed": "2019-11-22T09:44:45.337000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Spinnaker post upgrade testing", "updated": "2019-11-20T16:26:52+11:00", "estimate": 8.0, "epic_ref": "CLS-512", "epic_name": "", "diff_to_upstream": []}, "CNPS-1339": {"assignee": null, "created": "2019-11-20T16:11:09+11:00", "creator": "headenj1", "description": "update Spinnaker version in Prod to 1.17.x \r\n\r\nAcceptance criteria: \r\nSpinnaker version is updated \r\nAll tests pass\r\nDocumentation is updated\r\nImages/ HelmChart / BOM are updated", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1339", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "Update Spinnaker version in Prod", "updated": "2019-11-28T10:37:08+11:00", "estimate": 3.0, "epic_ref": "CLS-512", "epic_name": "", "diff_to_upstream": []}, "CNPS-1338": {"assignee": null, "created": "2019-11-20T16:10:31+11:00", "creator": "headenj1", "description": "update Spinnaker version in Stg to 1.17.x \r\n\r\nAcceptance criteria: \r\nSpinnaker version is updated \r\nAll tests pass\r\nDocumentation is updated\r\nImages/ HelmChart / BOM are updated", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1338", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "Update Spinnaker version in Stg", "updated": "2019-11-28T10:36:53+11:00", "estimate": 3.0, "epic_ref": "CLS-512", "epic_name": "", "diff_to_upstream": []}, "CNPS-1337": {"assignee": "macdonl4", "created": "2019-11-20T16:09:46+11:00", "creator": "headenj1", "description": "update Spinnaker version to 1.17.x\r\n\r\nAcceptance criteria: \r\n Spinnaker version is updated \r\n All tests pass\r\n Documentation is updated\r\n Images/ HelmChart / BOM are updated", "fixVersions": ["PI6"], "issuetype": "Story", "key": "CNPS-1337", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story in Progress", "summary": "Update Spinnaker version", "updated": "2019-12-02T13:30:04+11:00", "estimate": 3.0, "epic_ref": "CLS-512", "epic_name": "", "diff_to_upstream": []}, "CNPS-1336": {"assignee": null, "created": "2019-11-20T16:02:53+11:00", "creator": "vadrevus", "description": "Test GCB accounts have RBAC enabled and working as per feature updates in Spinnaker 1.17  after the upgrade.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1336", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Test GCB accounts with RBAC", "updated": "2019-11-20T16:03:26+11:00", "estimate": 5.0, "epic_ref": "CLS-512", "epic_name": "", "diff_to_upstream": []}, "CNPS-1335": {"assignee": null, "created": "2019-11-20T15:37:14+11:00", "creator": "agrawad", "description": "The Dynamic Accounts feature was released in Spinnaker version 1.16, this will allow us to add or modify accounts without needing to reload the whole configuration. There are other cards to implement this feature.\r\n\r\nThis card is to create the documentation including the architecture diagram for the solution.\r\n\r\nA/C\r\n * Solution diagram.\r\n * Showcase to the team.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1335", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Backlog", "summary": "Spinnaker: Documentation on how dynamic accounts work", "updated": "2019-11-21T11:09:17+11:00", "estimate": 1.0, "epic_ref": "CLS-506", "epic_name": "", "diff_to_upstream": []}, "CNPS-1334": {"assignee": "macdonl4", "created": "2019-11-20T15:28:16+11:00", "creator": "vadrevus", "description": "* Upgrade halyard to 1.17. \r\n* This release introduces a role based authentication for GCB accounts similar to other CI systems like Jenkins.\r\n* Update bom file for spinnaker.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1334", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story in Progress", "summary": "Halyard upgrade to 1.17", "updated": "2019-12-02T13:29:16+11:00", "estimate": 3.0, "epic_ref": "CLS-512", "epic_name": "", "diff_to_upstream": []}, "CNPS-1333": {"assignee": null, "created": "2019-11-20T13:18:43+11:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1333", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Assurance Squad access to publish & test Sentinel policies in TFE", "updated": "2019-11-20T13:19:00+11:00", "estimate": 1.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1332": {"assignee": null, "created": "2019-11-20T10:46:23+11:00", "creator": "headenj1", "description": "Spinnaker installation should not rely on artifactory to get installed. This card is to update the installation process to instruct spinnaker to get its helm chart from gcs instead of Artifactory\r\n\r\nAcceptance Criteria:\r\nSpinnaker installation is updated to reference helm chart in gcs\r\nInstallation is successful\r\nDocumentation is updated", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1332", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Backlog", "summary": "Update Spinnaker installation to get Helm chart from GCS", "updated": "2019-11-21T11:41:51+11:00", "estimate": 2.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1331": {"assignee": null, "created": "2019-11-20T10:29:02+11:00", "creator": "headenj1", "description": "Any time that Spinnaker gets updated it should trigger a refresh of the microservice images in  gcr\r\n\r\nAcceptance Criteria: \r\ndocumentation for update of Spinnaker includes steps to refresh images \r\ndocumentation for update of Spinnaker includes steps to confirm all images have been refreshed\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1331", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Backlog", "summary": "Update Spinnaker documentation to refresh gcr images", "updated": "2019-11-21T11:41:44+11:00", "estimate": 1.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1330": {"assignee": null, "created": "2019-11-20T10:24:16+11:00", "creator": "headenj1", "description": "Spinnaker requires that each microservice images are available outside of artifactory to remove dependency.\r\nSpinnaker also requires a copy of the bill of materials (BOM) available in GCS bucket\r\nSpinnaker also requires a copy of the helm chart - this is to be stored in GCS bucket\r\n\r\nAcceptance criteria:\r\nAll images referenced by a particular release are parsed from the bom file and uploaded to gcr\r\nScript should be able to verify that all images are uploaded to the correct location\r\nScript should also upload the BOM file in the relevant bucket\r\nScript should also upload the helm chart in relevant bucket", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1330", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Backlog", "summary": "Create Script to upload spinnaker BOM images to gcr ", "updated": "2019-11-21T11:41:36+11:00", "estimate": 3.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1329": {"assignee": "agrawad", "created": "2019-11-20T09:53:59+11:00", "creator": "agrawad", "description": "we have been receiving a number of high cpu alerts Cloud driver pod. First alert was around 3:35 PM yesterday (20/11/2019)\r\n\r\nalert example:\r\n\r\nCPU limit utilization for spin-clouddriver-f5b4f8f88-5ct6b clouddriver pod is above the threshold of 0.75.\r\n\r\n\u00a0\r\n\r\nAfter few minutes, a resolved message is received. No impact on Spinnaker reported thus far.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1329", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "High CPU alert on CloudDriver Pods", "updated": "2019-12-03T08:57:57+11:00", "estimate": 1.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1328": {"assignee": null, "created": "2019-11-19T22:27:18+11:00", "creator": "agarwas2", "description": "Using roadmap information from Google document future state of the cloud build private worker pool\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1328", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "SPIKE: Document future state of cloud build private worker pool", "updated": "2019-11-22T11:56:24+11:00", "estimate": 3.0, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1327": {"assignee": null, "created": "2019-11-19T22:18:49+11:00", "creator": "agarwas2", "description": "Dependnecy on CNA", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1327", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Document position on internet access from cloud build worker pool", "updated": "2019-11-21T11:53:06+11:00", "estimate": 3.0, "epic_ref": "CLS-494", "epic_name": "", "diff_to_upstream": []}, "CNPS-1326": {"assignee": null, "created": "2019-11-19T22:16:54+11:00", "creator": "agarwas2", "description": "Specifically\r\n\r\n\u00a0\r\n\r\nsonarqube\r\n\r\nartifactory on prem\r\n\r\nGHE\r\n\r\nTFE", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1326", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Determine access to on prem services from cloud build worker pool", "updated": "2019-11-21T11:52:44+11:00", "estimate": 5.0, "epic_ref": "CLS-494", "epic_name": "", "diff_to_upstream": []}, "CNPS-1325": {"assignee": null, "created": "2019-11-19T22:14:46+11:00", "creator": "agarwas2", "description": "Create arch diagram of current cloud build worker pool setup and connectivity to artifactory to accompany current state documentation", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1325", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Document current state of cloud build ", "updated": "2019-11-21T11:52:37+11:00", "estimate": 2.0, "epic_ref": "CLS-494", "epic_name": "", "diff_to_upstream": []}, "CNPS-1324": {"assignee": null, "created": "2019-11-19T22:10:45+11:00", "creator": "hidera", "description": "Currently building cloud-builder container image used to deploy artifactory\u00a0 relies upon\u00a0 artifactory remote repos for things like ubuntu packages.\r\n\r\n\u00a0\r\n\r\nWe are removing reliance upon artifactory to deploy artifactory.\r\n\r\nThus we may want to remove reliance upon artifactory for building of the cloud-builder image used by artifactory.\r\n\r\n\u00a0\r\n\r\nOptions:\r\n * build within cloudbuild utilising new squid proxy whitelist\r\n * build\u00a0 as bamboo job with general internet access available", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1324", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Backlog", "summary": "Build artifactory cloud-builder without relying upon artifactory", "updated": "2019-11-21T11:41:19+11:00", "estimate": 1.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1323": {"assignee": null, "created": "2019-11-19T22:05:50+11:00", "creator": "hidera", "description": "When we deploy artifactory we depend\u00a0 upon prod artifactory to pull helm charts authored via jfrog via github remote repo.\u00a0\r\n\r\n\u00a0\r\n\r\nWe want\u00a0 to deploy artifactory without reliance upon artifactory.\r\n\r\n\u00a0\r\n\r\nWe\u00a0 want to push these images to GCP bucket.\r\n\r\nOptions:\r\n * download tarball and push to bucket via laptop\r\n * within cloudbuild utilising new squid proxy whitelist\r\n * bamboo job", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1323", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Backlog", "summary": "Deploy artifactory without helm charts coming via artifactory", "updated": "2019-11-21T11:41:12+11:00", "estimate": 1.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1322": {"assignee": null, "created": "2019-11-19T22:02:19+11:00", "creator": "hidera", "description": "When we deploy artifactory we depend\u00a0 upon prod artifactory to pull container images via remote repositories.\r\n\r\n\u00a0\r\n\r\nSpecifically jmx & jfrog container images.\r\n\r\n\u00a0\r\n\r\nWe want\u00a0 to deploy artifactory without reliance upon artifactory.\r\n\r\n\u00a0\r\n\r\nWe\u00a0 want to push these images to GCR.\r\n\r\nOptions:\r\n * docker push and pull from laptop\r\n * within cloudbuild utilising new squid proxy whitelist\r\n * bamboo job", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1322", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Backlog", "summary": "Deploy artifactory without containers coming via artifactory", "updated": "2019-11-21T11:41:06+11:00", "estimate": 2.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1321": {"assignee": null, "created": "2019-11-19T15:56:05+11:00", "creator": "agarwas2", "description": "Create a terraform module that simplifies onboarding of a new project. Possibly explore enabling cloud build API and allowing use of cloud build worker pool by default for all projects as part of the project module. \r\n\r\nDocument onboarding process for new customers", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1321", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Cloud build onboarding", "updated": "2019-11-21T11:52:30+11:00", "estimate": 3.0, "epic_ref": "CLS-494", "epic_name": "", "diff_to_upstream": []}, "CNPS-1320": {"assignee": null, "created": "2019-11-19T15:37:19+11:00", "creator": "vadrevus", "description": "Create a pipeline in spinnaker to deploy the Artifactory deploy trigger in cloud build.\r\nThis trigger runs the cloud build file : https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/helm-charts/spinnaker-v3/cloudbuild.yaml.\r\n\r\nSpinnaker version 1.18.0 will support pre configured cloud build triggers. This feature can be utilised to invoke the existing [ARTIFACTORY] Deploy artifactory using helm trigger.\r\n\r\nReferences : https://github.com/spinnaker/spinnaker/issues/5076.\r\n\r\nThis ticket requires the upgrade of spinnaker to version 1.18.0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1320", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Pipeline to deploy Artifactory using Spinnaker", "updated": "2019-11-21T11:40:37+11:00", "estimate": 5.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1319": {"assignee": null, "created": "2019-11-19T14:53:59+11:00", "creator": "vadrevus", "description": "Create a GCB service account for engx to trigger cloud build triggers from spinnaker stages and read the response. Instructions listed here:\r\nhttps://www.spinnaker.io/setup/ci/gcb/#google-cloud-build\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1319", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Create GCB service account for engx", "updated": "2019-11-21T11:40:30+11:00", "estimate": 2.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1318": {"assignee": null, "created": "2019-11-19T14:18:01+11:00", "creator": "vadrevus", "description": "As a platform engineer, I should be able to deploy Spinnaker without any dependencies on Artifactory being available.\r\n\r\nUpdates needed:\r\nUpdate cloudbuild in https://github.service.anz/ex/spin-config/blob/master/cloudbuild.yaml \r\nand https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/helm-charts/spinnaker-v3/cloudbuild.yaml\r\nto push the docker image to project's private gcr and use the gcr image. ", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1318", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Update spinnaker cloud build to remove artifactory dependencies", "updated": "2019-11-21T11:40:23+11:00", "estimate": 3.0, "epic_ref": "CLS-592", "epic_name": "", "diff_to_upstream": []}, "CNPS-1317": {"assignee": null, "created": "2019-11-19T12:09:07+11:00", "creator": "vadrevus", "description": "As a user , I would like to run a script that generates the search configuration for my artifactory search with the following input parameters:\r\nrepo-name, base-url\r\n \r\nUpdates needed:\r\nCreate a script in spin-config that expects repo-name and base url from the user and creates a hal config entry :\r\n\r\nsearches:\r\nname: repo-name\r\nbaseUrl: base-url\r\nrepo: repo-name\r\naccess-token: engx-read-access-token\r\n\r\nCraete an access token with read permissions across all repos that can be configured as part of hal config.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1317", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Spinnaker Artifactory trigger spin-config", "updated": "2019-11-19T13:42:12+11:00", "estimate": 5.0, "epic_ref": "CLS-545", "epic_name": "", "diff_to_upstream": []}, "CNPS-1316": {"assignee": null, "created": "2019-11-19T12:01:43+11:00", "creator": "kuzhinjr", "description": "Currently, when a customer requests an Artifactory API Access Token, we have to manually generate, encrypt and transfer the access code to the customer.\r\n\r\nWe need to automate this process.\r\n\r\nThis requires:\r\n # Design a YAML file which contains metadata for access token with properties :\r\n ## Access code name\r\n ## Group Name\r\n ## KMS Key Ring\r\n ## KMS Key\r\n ## Project ID\r\n ## Region\r\n ## Version - For refreshing the access code\r\n ## Email address / Git URL - to transfer the access code\r\n # Customer commits the updated YAML\r\n # Cloud Build process is triggered and identify the changes and perform:\r\n ## Execute the existing script : create-access-token.sh to create the token at GCP Artifactory\r\n ## Encrypt the key using the YAML file properties\r\n ## Transfer the encrypted token to customer by :\u00a0\r\n Option 1. Send mail with attached encrypted key\r\n Option 2. Script to automatically create a pull request to push the access code directly to customer's git repository (Service account will need write permission to their git repo)\r\n# Existing access codes need to be loaded to the YAML file.\r\n\r\nAcceptance Criteria:\r\n # When customer commits the updated YAML file, cloud build is triggered. The access token is generated and the encrypted access token is transferred to customer.\r\n # README is updated with documentation and instructions for both customers and CNP Squad\r\n# Existing access codes exist in the YAML file\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1316", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "kuzhinjr", "status": "Backlog", "summary": "Automate Artifactory API Access Token generation   ", "updated": "2019-11-19T14:12:22+11:00", "estimate": 5.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1315": {"assignee": null, "created": "2019-11-19T11:45:16+11:00", "creator": "kuzhinjr", "description": "Currently, API access key is generated manually by running a script.\r\n\r\nTo automate the process, Terraform provider ([https://github.com/atlassian/terraform-provider-artifactory|https://github.com/atlassian/terraform-provider-artifactory.]) needs to be extended to to enable support for API access token management.\r\n\r\nThis requires :\r\n\r\n\u00a0 \u00a0 \u00a01. Develop a new resource access_token with property : scope - group name\r\n\r\n\u00a0 \u00a0 \u00a02. Use the Go client library :\u00a0 [https://github.com/atlassian/go-artifactory]\u00a0to manage the token\r\n\r\nAcceptance Criteria:\r\n # The below entry create a new API access token at Artifactory\r\n\r\n\r\nresource \"artifactory_api_access_key\" \"access_key_for_squad_A\" {\r\nscope=\"squad_a_artifactory_group_name\"\r\n}\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1315", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "kuzhinjr", "status": "Closed", "summary": "Artifactory API Access Token - Extend Terraform Provider  ", "updated": "2019-11-19T13:18:29+11:00", "estimate": 5.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1314": {"assignee": null, "created": "2019-11-19T09:33:22+11:00", "creator": "vadrevus", "description": "As a user , I would like role based authentication on the repositories available in the Artifactory Name drop down.  \r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1314", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Spinnaker Artifactory trigger enable RBAC", "updated": "2019-11-19T12:21:14+11:00", "estimate": null, "epic_ref": "CLS-545", "epic_name": "", "diff_to_upstream": []}, "CNPS-1313": {"assignee": "vadrevus", "created": "2019-11-19T09:30:18+11:00", "creator": "vadrevus", "description": "As a user , I would like to trigger pipelines when helm repositories are updated in artifactory.\r\n\r\nUpdates needed:\r\n\r\nThis feature needs updates to Igor and Halyard micro services to \r\nInclude Helm as an Artifact type.\r\nRegister a repo type in halyard search config.\r\nUpdate the Artifactory Monitor to watch helm repos and trigger a Artifactory Event.\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1313", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story in Progress", "summary": "Extend Spinnaker Artifactory trigger for helm repos", "updated": "2019-12-03T15:07:10+11:00", "estimate": 5.0, "epic_ref": "CLS-545", "epic_name": "", "diff_to_upstream": []}, "CNPS-1312": {"assignee": "macdonl4", "created": "2019-11-18T17:13:26+11:00", "creator": "macdonl4", "description": "This request was raised on eng-acceleration by Andre Dumas for a remote repo in GCP Artifactory for\u00a0\u00a0[https://www.postgresql.org/ftp/pgadmin/pgadmin4/|https://slack-redir.net/link?url=https%3A%2F%2Fwww.postgresql.org%2Fftp%2Fpgadmin%2Fpgadmin4%2F].\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1312", "labels": [], "lastViewed": "2019-11-25T09:56:54.625000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Artifactory remote repo for pgadmin4", "updated": "2019-11-26T11:35:17+11:00", "estimate": 1.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1311": {"assignee": null, "created": "2019-11-18T14:45:26+11:00", "creator": "sarkers1", "description": "*Issue:*\r\n\r\nCurrently, there is no Slack notification set up in Spinnaker for pipeline start/complete/failed events.\r\n\r\n Based on the Spinnaker documentation, this feature can be enabled with our existing version of Spinnaker. [https://www.spinnaker.io/setup/features/notifications/#slack|https://www.spinnaker.io/setup/features/notifications/#email]\r\n\r\nThis requires:\r\n * configuring Slack notifications using halyard.\r\n ** \r\nhal config notification slack enable\r\necho $TOKEN_FROM_SLACK | hal config notification slack edit --bot-name $SPINNAKER_BOT --token\r\n * creating Slack Bot App and Slack Bot User (in ANZ Engineering workspace)\r\n * adding Slack bot to relevant channels\r\n * Establishing and documenting a process for adding Slack bot to new channels\r\n\r\n*Acceptance Criteria:*\u00a0\r\n * Spinnaker can send notifications to a Slack channel\r\n * Notification configuration should be automated as part of the Spinnaker deployment\r\n * Slack bot configuration and maintenance is documented\r\n * Process for adding Slack bot to channels is documented as this will become a future support task\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1311", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Backlog", "summary": "Enable Slack notifications for Spinnaker", "updated": "2019-11-19T12:10:30+11:00", "estimate": 3.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1310": {"assignee": null, "created": "2019-11-18T14:42:23+11:00", "creator": "sarkers1", "description": "*Issue:*\r\n\r\nCurrently, there is no email notification set up in Spinnaker for pipeline start/complete/failed.\u00a0\r\n This feature will be helpful for our customers to get notified when there are changes in the pipeline stage.\u00a0\r\n Based on the spinnaker documentation, this feature can be enabled with our existing version of the spinnaker. [https://www.spinnaker.io/setup/features/notifications/#email]\r\n\r\nThis requires:\r\n * setting SMTP server host and other mail settings\r\n * creating a service account for sending the email\r\n * adding echo-local.yml (or modifying echo.yml) on spin-echo microservice\r\n\r\n*Acceptance Criteria:*\u00a0\r\n * Emails are sent successfully from Spinnaker upon Pipeline start/complete/fail as specific in the Notification UI.\r\n * Configuration changes should be part of spinnaker deployment\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1310", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Backlog", "summary": "Enable Email notification for Spinnaker", "updated": "2019-11-19T12:10:54+11:00", "estimate": 3.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1309": {"assignee": null, "created": "2019-11-18T09:51:51+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nOnce Xray has been set up to run as standalone, it can be upgraded to HA using the following docs: https://www.jfrog.com/confluence/display/XRAY/HA+Installation+and+Setup#HAInstallationandSetup-MigratingXrayFromStandalonetoHA\nThis process is equivalent in effort to installing HA from the start.\n\n*Acceptance Criteria*\n* Xray is running with at least two member nodes alongside the primary\n\n*Dependencies*\nNone", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1309", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Upgrade Xray to HA", "updated": "2019-11-25T09:56:44+11:00", "estimate": 2.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1308": {"assignee": "hidera", "created": "2019-11-18T09:51:47+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nRequest whitelist for JFrog Xray vulnerability DB.\nThe URLs that will need to be whitelisted are listed in the \"Using a firewall\" section: https://www.jfrog.com/confluence/display/XRAY/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase\n\n*Acceptance Criteria*\n* https://jxray.jfrog.io/api/v1/system/ping can be reached from our GCP pods\n\n*Dependencies*\nProxy team: They will need to whitelist the URLs on proxy", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1308", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Request whitelist for JFrog Xray DB", "updated": "2019-11-26T15:40:13+11:00", "estimate": 1.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1307": {"assignee": "clarker", "created": "2019-11-18T09:51:43+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\nUse cloud build to automatically configure and deploy Xray helm chart.\r\n* use helm: https://hub.helm.sh/charts/jfrog/xray\r\n* Installation docs: https://jfrog.com/confluence/display/XRAY/Installing+Xray\r\n\r\n*Acceptance Criteria*\r\n* A pipeline exists in SDCP Bamboo to deploy Xray to dev, staging, and prod.\r\n* Xray can be deployed to GCP namespaces without manual intervention (excluding manual gates for terraform apply in Bamboo and git tagging)\r\n* A Cloud Build trigger is generated for Xray's deployment in terraform, requiring a git tag to trigger in staging and prod\r\n* A Makefile exists to deal with any deployment scripting required\r\n\r\n*Dependencies*\r\nNone\r\n\r\n*Tasks*\r\n* Create Master Key\r\n* Create and configure Google OAuth SSO", "fixVersions": ["PI6"], "issuetype": "Story", "key": "CNPS-1307", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story in Progress", "summary": "Automate Xray helm chart deployment", "updated": "2019-11-28T14:23:57+11:00", "estimate": 5.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1306": {"assignee": null, "created": "2019-11-18T09:51:39+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nSetup the CloudSQL PostgreSQL DB in GCP for Xray\n* Version of PostgreSQL supported by Xray: version 9.6.11\n* Xray needs to be linked to both PostgreSQL DB and Mongo DB to work\nFurther details (including how to connect the database) available [here|https://www.jfrog.com/confluence/display/XRAY/Installing+Xray#InstallingXray-UsingExternalDatabases].\n\n\n*Acceptance Criteria*\n* The CloudSQL DB is running healthily and can be connected to\n* When Xray is deployed, it automatically connects to the CloudSQL DB without manual intervention\n\n*Dependencies*\nNone", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1306", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Setup CloudSQL DB for Xray", "updated": "2019-11-25T09:56:30+11:00", "estimate": 1.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1305": {"assignee": null, "created": "2019-11-18T09:51:34+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nIn order to have visibility on the status of our Xray pods, we should have a healthcheck set up in GKE for them.\n\n*Acceptance Criteria*\n* GKE shows the health status of an Xray pod accurately (ie. if the service cannot be reached, it should be unhealthy)\n\n*Dependencies*\nNone", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1305", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Setup healthcheck for Xray pods", "updated": "2019-11-18T13:07:14+11:00", "estimate": 2.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1304": {"assignee": null, "created": "2019-11-18T09:51:30+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nXray exports \"system messages\" (artifact and data failure messages from scans). These should be ingested by Stackdriver for use/viewing outside of the Xray workloads.\n\nFurther details available [here|https://www.jfrog.com/confluence/display/XRAY/System+Maintenance+and+Monitoring].\n\n*Acceptance Criteria*\n* System messages from all Xray pods are viewable in Stackdriver.\n\n*Dependencies*\nNone", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1304", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Export Xray system messages to Stackdriver", "updated": "2019-11-18T13:07:03+11:00", "estimate": 2.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1303": {"assignee": null, "created": "2019-11-18T09:51:26+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nXray exports system logs. These should be ingested by Stackdriver for use/viewing outside of the Xray workloads.\n\nFurther details available [here|https://www.jfrog.com/confluence/display/XRAY/System+Maintenance+and+Monitoring].\n\n*Acceptance Criteria*\n* System logs from all Xray pods are viewable in Stackdriver.\n\n*Dependencies*\nNone", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1303", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Export Xray system logs to Stackdriver", "updated": "2019-11-18T13:06:52+11:00", "estimate": 2.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1302": {"assignee": null, "created": "2019-11-18T09:51:22+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nXray uses the same proxy configuration system as Artifactory. As part of its deployment, it should automatically have its proxy configuration set to work with ANZ's proxy.\n\n*Acceptance Criteria*\n* Whenever Xray is deployed, as part of its deployment process, it should have its proxy configuration set for the ANZ proxy.\n* The instance should be able to reach whitelisted URLs on the internet once the proxy configuration is set.\n\n*Dependencies*\n* [Potential] Proxy squad: The squid proxy is ready to be used by Xray.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1302", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Automate proxy configuration for Xray", "updated": "2019-11-25T09:56:47+11:00", "estimate": 1.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1301": {"assignee": null, "created": "2019-11-18T09:51:18+11:00", "creator": "macdonl4", "description": "*Issue/Problem*\nWhen Xray is freshly deployed, it does not automatically connect to the relevant Artifactory instance (eg. Dev Xray needs to connect to Dev GCP Artifactory). This connection process should be automated.\n\nThere is an Xray API endpoint for connecting a new Artifactory endpoint [here|https://www.jfrog.com/confluence/display/XRAY/Xray+REST+API#XrayRESTAPI-AddBinaryManager].\n\n*Acceptance Criteria*\n* Whenever Xray is deployed, as part of its deployment process, it should be connected to its relevant Artifactory instance without any manual intervention\n* Once connected to an Artifactory instance, Xray can perform scans on at least one file stored in the instance\n\n*Dependencies*\nNone", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1301", "labels": ["XRAY"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Automate connecting Xray to Artifactory", "updated": "2019-11-18T13:06:31+11:00", "estimate": 1.0, "epic_ref": "CLS-508", "epic_name": "", "diff_to_upstream": []}, "CNPS-1300": {"assignee": "agrawad", "created": "2019-11-18T09:17:35+11:00", "creator": "sarkers1", "description": "{code:java}\r\nContext: Currently, there is no native Alpine repositories support in JFrog and we create the alpine-linux repository as a \"generic\" repo that assumes \"artifacts\" get published once and never change. Hence, the generic fetches the index once and then never updates it or performs the cache invalidates.\u00a0Therefore, the \"APKINDEX.tar.gz\" in GCP artifactory does not match the upstream version of alpine-linux remote (example:- alpine[3.8]-http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/_APKINDEX.tar.gz_) and artifactory user face the issue with an error \"ERROR: py-jinja2-2.9.6-r0: package mentioned in index not found (try 'apk update')\" when try to update/install alpine packages.{code}\r\nMore details are available on this ticket\u00a0https://jira.service.anz/browse/CNPS-1286\r\n\r\nSolutions:\r\n\r\nUntil a native Alpine repositories support from JFog, here the way for Alpine remote support ...\r\n * Officially JFrog suggests the following solution\r\n ** Install the artifactory expireFilesMetadata with expireFilesMetadata.json configuration. This plugin expires files when they are requested according to file pattern and expire delay stored in properties file so that files are redownloaded.\u00a0\r\n ** The expiry mechanism may force the artifact to be downloaded again from the remote repository.\u00a0_expireFilesMetadataConfig_\u00a0updates the current expire files Metadata configuration using the provided map object\r\n ** \r\n{code:java}\r\n{ \"repositories\": { \"alpine-remote\": { \"delay\":600, \"patterns\": [\"**/APKINDEX.tar.gz\"] } } }{code}\r\n\r\n * \r\n ** {{expireFilesMetadataConfig}}\u00a0updates the current Expire Files Metadata configuration using the provided map object. This plugin is automatically executed everytime a download request is received by the Artifactory instance.\r\n [https://github.com/jfrog/artifactory-user-plugins/blob/master/metadata/expireFilesMetadata/README.md]\r\n\r\n * \r\n ** Need to install the plugin as a part of Artifactory deployment.\r\n\r\nh3. Acceptance Criteria\r\n * Install the plugin as part of Artifactory deployment.\r\n * \"apkindex.tar.gz\" will download everytime, user request for alpinelinux repository update/install to get the latest index", "fixVersions": ["PI6"], "issuetype": "Story", "key": "CNPS-1300", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "In Release", "summary": "Artifactory Plugin for Alpine Linux Repositories ", "updated": "2019-12-05T11:31:17+11:00", "estimate": 2.0, "epic_ref": "CLS-558", "epic_name": "", "diff_to_upstream": []}, "CNPS-1299": {"assignee": "blackm", "created": "2019-11-16T08:04:16+11:00", "creator": "blackm", "description": "Close out the work started into CNPS-638 on Artifactory Naming Standards.", "fixVersions": ["PI6"], "issuetype": "Story", "key": "CNPS-1299", "labels": [], "lastViewed": "2019-11-22T09:39:43.738000+11:00", "priority": "Major", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Artifactory repository naming standard", "updated": "2019-11-21T11:50:36+11:00", "estimate": 1.0, "epic_ref": "CLS-517", "epic_name": "", "diff_to_upstream": []}, "CNPS-1298": {"assignee": "inagakir", "created": "2019-11-15T16:23:32+11:00", "creator": "inagakir", "description": "{code}\r\nAs an engineer providing CD capability with Spinnaker\r\nI want to know if a new deployment didn't cause our users unable to deploy their apps to their cluster\r\nSo that I can be aware of the bad deployment without waiting for our users facing the problem\r\n{code}\r\n\r\nh3. Acceptance Criteria\r\n\r\n* \u25fb\ufe0f Write configurations (probably terraform) to setup a new GKE cluster in already prepared *sandpit* project.\r\n* \u25fb\ufe0f Create a test case in Spinnaker deployment Cloud Build process that does CNPS-1297 but the app deployed in the cluster in *sandpit* project.\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1298", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Mimic user's Spinnaker use by deploying an app into a separate project/cluster", "updated": "2019-11-27T10:52:40+11:00", "estimate": 3.0, "epic_ref": "CLS-507", "epic_name": "", "diff_to_upstream": []}, "CNPS-1297": {"assignee": "inagakir", "created": "2019-11-15T16:21:28+11:00", "creator": "inagakir", "description": "{code}\r\nAs an engineer providing CD capability with Spinnaker\r\nI want to know if a new deployment didn't break our Spinnaker instance without conducting manual testing\r\nSo that I would not accidentally miss some tests and overlook service failures.\r\n{code}\r\n\r\nh3. Context\r\n\r\nCurrently, after a deployment, we're performing manual testing to see if the deployment broke our Spinnaker.\r\n\r\nh3. Acceptance Criteria\r\n\r\nDevelop an end-to-end test that runs in the build process, after confirming our Spinnaker is running with a new change to conclude if the change is OK/safe.\r\n\r\nh3. Suggestions\r\n\r\nThe test step in the build process would:\r\n\r\n* Create an application and a pipeline with specific names with spin command (or overwrite if they already exist). Here the pipeline is triggered with Docker image push.\r\n* Push a docker image that runs a simple http server with one endpoint which returns Cloud Build build number in JSON response.\r\n* Hit the app from the build process (i.e. Cloud Build) and confirm the build number matches.\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1297", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Build process should tell if a new change has broken our Spinnaker", "updated": "2019-11-27T10:49:02+11:00", "estimate": 3.0, "epic_ref": "CLS-507", "epic_name": "", "diff_to_upstream": []}, "CNPS-1296": {"assignee": "inagakir", "created": "2019-11-15T16:19:42+11:00", "creator": "inagakir", "description": "{code}\r\nAs an engineer providing CD capability with Spinnaker\r\nI want to know if a new change is rolled out successfully\r\nSo that I don't need to manually check if the deployment has finished\r\n{code}\r\n\r\nh3. Context\r\n\r\nCurrently, The Cloud Build builds for deploying Spinnaker (both [ex-infra repo, spinnaker-v3 directory|https://github.service.anz/ex/engineering-acceleration-infrastructure/tree/master/helm-charts/spinnaker-v3]\r\nand [spin-config repo|https://github.service.anz/ex/spin-config]) don't wait for the all Spinnaker microservices running with the new change.\r\nAs a result, we have to periodically & manually check if the deployment has finished to see it's ready to test a deployed change.\r\n\r\nh3. Acceptance Criteria\r\n\r\nThe build process finishes when all microservices are running with a new change.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1296", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Story in Progress", "summary": "Build process should not finish till all resources get replaced", "updated": "2019-12-04T13:36:01+11:00", "estimate": 2.0, "epic_ref": "CLS-507", "epic_name": "", "diff_to_upstream": []}, "CNPS-1295": {"assignee": "inagakir", "created": "2019-11-15T16:16:05+11:00", "creator": "inagakir", "description": "{code}\r\nAs an engineer providing CD capability with Spinnaker\r\nI want to be able to deploy ready-to-use Spinnaker with a single action\r\nSo that I don't forget to configure Spinnaker after recreating Spinnaker stack\r\n{code}\r\n\r\nh3. Context\r\n\r\nCurrently, to create properly configured Spinnaker, we need to:\r\n\r\n# Deploy Spinnaker infra in [ex-infra repo, anz-ex-services directory|https://github.service.anz/ex/engineering-acceleration-infrastructure/tree/master/foundation/anz-ex-services].\r\n# Deploy Spinnaker in [ex-infra repo, spinnaker-v3 directory|https://github.service.anz/ex/engineering-acceleration-infrastructure/tree/master/helm-charts/spinnaker-v3].\r\n# Deploy Spinnaker config in [spin-config repo|https://github.service.anz/ex/spin-config].\r\n\r\nh3. Acceptance Criteria\r\n\r\nGiven Spinnaker infra resources are deployed, with a single operation,\r\ncreate a working Spinnaker instance (i.e. Perform step 2 & 3 above together).\r\n\r\nh3. Options\r\n\r\n# Trigger ex-infra's Spinnaker deployment. Within it, trigger spin-config's Spinnaker deployment.\r\n#* \u2753 Possible to trigger a CB build from a CB build?\r\n# Make spin-config repo as a submodule of ex-infra repo and run spin-config's deployment from ex-infra deployment step\r\n#* \ud83d\udc4e On updating spin-config, need to update the ref in ex-infra repo.\r\n# Trigger ex-infra's Spinnaker deployment. Within it, *clone* spin-config repo and run its deployment script.\r\n# Merge ex-infra and spin-config repos and run spin-config's deployment from ex-infra deployment step.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1295", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "To Do", "summary": "Deploy properly configured Spinnaker with a single trigger", "updated": "2019-12-02T14:21:51+11:00", "estimate": 5.0, "epic_ref": "CLS-507", "epic_name": "", "diff_to_upstream": []}, "CNPS-1294": {"assignee": "dugalp", "created": "2019-11-15T14:12:26+11:00", "creator": "agarwas2", "description": "*+Acceptance Criteria:+*\r\n\r\n_Commonly_ used services/APIs/facilities by our customers in Spinnaker should have the following metrics collected for last 1 day, 2 days, 7 days, 1 month, 3 months, 6 months, 1 yr, etc:\r\n\r\n* Time based usage (i.e. applications active, pipelines, pipelines executed, deployments, failed vs. successful, etc)\r\n* Resource usage relative to capacity (i.e. JVM memory & CPU, DB memory & CPU)\r\n* Uptime / downtime / MMTR (hrs up or down per micro-service)\r\n* Significant events that require squad intervention/awareness, if possible into ANZ Tech Connect (Service Now) for incident communication and/or Slack (if that makes sense)\r\n\r\n*References*\r\n\r\nhttps://www.spinnaker.io/reference/architecture/\r\nhttps://www.spinnaker.io/reference/monitoring/", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1294", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "To Do", "summary": "SPIKE: Spinnaker metrics ", "updated": "2019-11-21T12:01:04+11:00", "estimate": 8.0, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1293": {"assignee": null, "created": "2019-11-14T16:27:12+11:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1293", "labels": [], "lastViewed": "2019-11-22T09:44:10.500000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic in Progress", "summary": "All unplanned work required to keep the lights on", "updated": "2019-12-04T12:06:10+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Lights On", "diff_to_upstream": []}, "CNPS-1292": {"assignee": null, "created": "2019-11-14T15:01:34+11:00", "creator": "hidera", "description": "Currently we put an entry in artifactory_user.tf for users who are in anymore than the default \"readers\" group.\r\n\r\n\u00a0\r\n\r\nwe need users to create their accounts by logging in with their AD details. If terraform creates their account before they have3 done this, then their account doesn't work correctly.\r\n\r\n\u00a0\r\n\r\nSo before me merge changes to artifactory_user.tf, we need to confirm that the users already exist in the artifactory system.\r\n\r\n\u00a0\r\n\r\nWhile we can do this manually, this can be automated along with the other existing validation checks that run on the artifactory-config repo.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1292", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "To Do", "summary": "Validation that users have logged in [artifactory self serve]", "updated": "2019-11-15T10:03:55+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1291": {"assignee": "hidera", "created": "2019-11-14T14:48:16+11:00", "creator": "hidera", "description": "Our current Cluster size and machine types aren't fit for purpose.\r\n\r\ne.g. Current setup doesn't allow us to enable \"resource requests\" for our artifactory-ha pods, and schedule the pods we need.\r\n\r\n\u00a0\r\n\r\nWe want to:\r\n * move from 3 separate node pools to one single one\r\n * use a single machine-type across pods (Lex's current thinking is perhaps n1-standard-8 which has 8 cores and 30gb ram.\r\n\r\nSee attachment for some analysis based upon resources requests (not resource limits) for our various pods.\r\n\r\n\u00a0\r\n\r\nThings to consider:\r\n * do we want dev cluster larger than stage/prod to allow multiple copies of our tools being run. e.g. artifactory running in multiple namespaces\r\n * enough nodes to handle unhealthy nodes without outages\r\n * enough capacity for upgrades of pods to occur\r\n * some planning on how future changes to our cluster size should occur.\r\n * how we drain pods of current nodes/node-pools and onto new node-pools without customer impact.\r\n * Unsure if node-pools/etc are terraform managed or manually managed, need to confirm this.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1291", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Backlog", "summary": "SPIKE: K8S Cluster resizing/restructuring", "updated": "2019-11-22T11:56:23+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1289": {"assignee": "sarkers1", "created": "2019-11-13T12:57:02+11:00", "creator": "vadrevus", "description": "Spinnaker customers would like to configure notifications that would be sent from different stages in the pipelines.\r\n\r\nThe spike is to investigate options for the following requirements:\r\n\r\nMethod used to send notifications\r\n#  Slack messages: Some teams have configured spinnaker non prod to send slack notifications. Investigate if this is a standard option.\r\n# Email: Spinnaker needs to talk to an smtp server to send emails.\r\n# Splunk notifications\r\n\r\nHow to configure alerts in spinnaker:\r\n# A custom stage that can be pre configured pulled down from the options.\r\n# Out of the box options from spinnaker to configure notifications. \r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1289", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "SPIKE: Spinnaker pipeline notifications", "updated": "2019-11-18T16:26:04+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1288": {"assignee": "hidera", "created": "2019-11-13T11:21:58+11:00", "creator": "clarker", "description": "From [~hutchisc] on #eng-acceleration:\r\n I am having problems with the Go module proxy on artifactory.gcp.anz.\r\nRunning the command (within a Dockerfile with GOPROXY=https://artifactory.gcp.anz/artifactory/go and GO111MODULE=on):\r\n\r\n{code:language=bash}\r\n$ go get github.com/google/go-jsonnet@v0.14.0\r\ngo: finding github.com v0.14.0\r\ngo: finding github.com/google v0.14.0\r\ngo: finding github.com/google/go-jsonnet v0.14.0\r\ngo: downloading github.com/google/go-jsonnet v0.14.0\r\nverifying github.com/google/go-jsonnet@v0.14.0: github.com/google/go-jsonnet@v0.14.0: reading https://artifactory.gcp.anz/artifactory/go/sumdb/sum.golang.org/tile/8/0/x001/489.p/93: 404 Not Found\r\n{code}\r\n\r\nIf I hit the upstream URL (https://sum.golang.org/tile/8/0/x001/489.p/93, I get data back.\r\nWhy does artifactory get out of sync with upstream repos? Can something be done to poke it remotely?\r\n\r\nThread on #eng-acceleration here: https://anzengineering.slack.com/archives/CHDAQ6K52/p1572235764296900\r\n\r\nAnd a more recent one here:\r\nhttps://anzengineering.slack.com/archives/CHDAQ6K52/p1573589970199500\r\n\r\nMost recent error is the following:\r\n\r\n{code}\r\n$ GOPROXY=https://artifactory.gcp.anz/artifactory/go GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.20.1\r\ngo: finding github.com/golangci/golangci-lint/cmd v1.20.1\r\ngo: finding github.com/golangci/golangci-lint/cmd/golangci-lint v1.20.1\r\ngo: finding github.com v1.20.1\r\ngo: finding github.com/golangci/golangci-lint v1.20.1\r\ngo: finding github.com/golangci v1.20.1\r\ngo: downloading github.com/golangci/golangci-lint v1.20.1\r\nverifying github.com/golangci/golangci-lint@v1.20.1: github.com/golangci/golangci-lint@v1.20.1: initializing sumweb.Conn: checking tree#472405: reading https://artifactory.gcp.anz/artifactory/go/sumdb/sum.golang.org/tile/8/1/007.p/53: 404 Not Found\r\n{code}\r\n\r\nCam has a workaround for now using Alpaca and going straight to the sources (on the internet), but doesn't work on Cloud Build for example or inside a Dockerfile.\r\n\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1288", "labels": [], "lastViewed": "2019-11-22T10:02:52.895000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Backlog", "summary": "Artifactory cache cannot be used with Go, results in a 404", "updated": "2019-12-02T11:07:58+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1287": {"assignee": "clarker", "created": "2019-11-13T10:38:58+11:00", "creator": "blackm", "description": "How will we enforce Artifactory naming conventions?\r\n\r\nOptions:\r\n- Sentinel policy in the TFE pipeline\r\n- OPA policy in cloud build\r\n- A bot which scans Artifactory and sends mean emails\r\n- A bot which scans Artifactory and opens pull requests to fix\r\n\r\nAcceptance:\r\n- Ask Matt to create an epic (if needed)\r\n- New cards for the above feature", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1287", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "SPIKE: Automating artifactory naming conventions", "updated": "2019-11-19T16:26:12+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1286": {"assignee": "sarkers1", "created": "2019-11-12T12:38:44+11:00", "creator": "dugalp", "description": "I was on support today and had to delete a couple of APKINDEX files from Artifactory cache of Alpine Linux remote:\r\n\r\nhttps://artifactory.gcp.anz/artifactory/alpinelinux/alpine/v3.8/main/x86_64/APKINDEX.tar.gz\r\n\r\nhttps://artifactory.gcp.anz/artifactory/alpinelinux/alpine/v3.8/community/x86_64/APKINDEX.tar.gz\r\n\r\nTo resolve this issue permanently the authorised ANZ contact ([~tanga]) needs to to check with JFrog on support for expiring metadata files (APKINDEX.tar.gz). These files are downloaded and not re-downloaded when updated.\r\n\r\nThere is a plugin posted here:\r\nhttps://github.com/jfrog/artifactory-user-plugins/blob/master/metadata/expireFilesMetadata/README.md\r\n\r\nQuestions for JFrog:\r\n\r\n1. Will future versions of Artifactory be compatible with this plugin?  \r\n2. Will this plugin be included in a future version of Artifactory by default?\r\n\r\n\r\n{code:none}\r\nhttps://artifactory.gcp.anz/artifactory/alpinelinux/alpine/v3.8/main/x86_64/APKINDEX.tar.gz?trace\r\n\r\nRequest ID: 179f6d7f\r\nRepo Path ID: alpinelinux:alpine/v3.8/main/x86_64/APKINDEX.tar.gz\r\nMethod Name: GET\r\nUser: patrick.dugal\r\nTime: 2019-11-12T01:37:57.065Z\r\nThread: http-nio-8081-exec-185\r\nSteps: \r\n2019-11-12T01:37:57.065Z Received request\r\n2019-11-12T01:37:57.065Z Request source = 10.148.12.15, Last modified = 31-12-69 23:59:59 +00:00, If modified since = -1, Thread name = http-nio-8081-exec-185\r\n2019-11-12T01:37:57.065Z Executing any BeforeDownloadRequest user plugins that may exist\r\n2019-11-12T01:37:57.065Z Retrieving info from remote repository 'alpinelinux' type Generic\r\n2019-11-12T01:37:57.067Z Found the resource in the cache - checking for expiry\r\n2019-11-12T01:37:57.067Z Returning cached resource\r\n2019-11-12T01:37:57.067Z Found resource in local cache - returning cached resource\r\n2019-11-12T01:37:57.067Z Requested resource is found = true\r\n2019-11-12T01:37:57.067Z Request is HEAD = false\r\n2019-11-12T01:37:57.067Z Request is for a checksum = false\r\n2019-11-12T01:37:57.067Z Target repository is not remote or doesn't store locally = true\r\n2019-11-12T01:37:57.067Z Requested resource was not modified = false\r\n2019-11-12T01:37:57.067Z Responding with found resource\r\n2019-11-12T01:37:57.067Z Executing any AltAllResponses user plugins that may exist\r\n2019-11-12T01:37:57.067Z Found non-null alternative response headers\r\n2019-11-12T01:37:57.067Z Alternative response status is set to 0 and message to 'null'\r\n2019-11-12T01:37:57.067Z Found no alternative content handles\r\n2019-11-12T01:37:57.067Z Executing any AltResponse user plugins that may exist\r\n2019-11-12T01:37:57.067Z Alternative response status is set to -1 and message to 'null'\r\n2019-11-12T01:37:57.067Z Found no alternative content handles\r\n2019-11-12T01:37:57.067Z Retrieving a content handle from target repo\r\n2019-11-12T01:37:57.067Z The requested resource isn't pre-resolved\r\n2019-11-12T01:37:57.067Z Target repository isn't virtual - verifying that downloading is allowed\r\n2019-11-12T01:37:57.067Z Creating a resource handle from 'alpinelinux-cache:alpine/v3.8/main/x86_64/APKINDEX.tar.gz'\r\n2019-11-12T01:37:57.067Z Identified requested resource as a file\r\n2019-11-12T01:37:57.067Z Requested resource is an ordinary artifact - using normal content handle with length '757129'\r\n2019-11-12T01:37:57.084Z Executing any BeforeDownload user plugins that may exist\r\n2019-11-12T01:37:57.085Z Responding with selected content handle\r\n2019-11-12T01:37:57.086Z Request succeeded\r\n{code}\r\n\r\n", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1286", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Done", "summary": "SPIKE: Artifactory Plugin for Alpine Linux", "updated": "2019-11-18T16:38:10+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1285": {"assignee": "vadrevus", "created": "2019-11-07T15:06:10+11:00", "creator": "castanoa", "description": "Investigate whether helm repository accounts can be dynamically configured. (If they live in *clouddriver*, *igor* or *echo* they could probably be.)\r\n\r\nAt the moment they are defined in `spin-config` production halyard file:\r\n\r\n{code:java}\r\n    helm:\r\n      enabled: true\r\n      accounts:\r\n      - name: omni-helm-snapshots-virtual\r\n        repository: https://artifactory.gcp.anz/artifactory/omni-helm-snapshots-virtual/\r\n{code}\r\n\r\n\r\n*Outcomes:*\r\n * If the helm accounts can be dynamically configured, update `spin-config` to generate and populate those accounts. Card CNPS-984 has the details.\r\n * If they can't, this should be part of spinnaker deployment because it requires re-deploying spinnaker, so it should be configured in the main spinnaker deployment code. Create a new card to automate the helm account creation and cancel CNPS-984", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1285", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "SPIKE: Investigate if helm artifact types can be automatically configured.", "updated": "2019-11-19T13:57:06+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1284": {"assignee": null, "created": "2019-11-07T10:46:54+11:00", "creator": "headenj1", "description": "Modify the spin-config repository to:\r\nPlace kubernetes accounts secrets in known locations accessible from the clouddriver pods\r\n\r\n*Acceptance Criteria*\r\n- Dynamic accounts are configured via spin-config repo & trigger\r\n- All self service capability provided by spin-config is still working\r\n\u200b\r\n*Output*\r\nImplementation\r\nDesign documentation / ADR", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1284", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Backlog", "summary": "Refactor Spin-Config to use dynamic accounts for Clouddriver", "updated": "2019-11-21T11:41:40+11:00", "estimate": 5.0, "epic_ref": "CLS-506", "epic_name": "", "diff_to_upstream": []}, "CNPS-1283": {"assignee": null, "created": "2019-11-07T10:40:36+11:00", "creator": "headenj1", "description": "Modify the spin-config repository to:\r\nPlace pubsub information in the repo to be consumed by echo pods  \r\n\u200b\r\n*Acceptance Criteria*\r\n- Dynamic accounts are configured via spin-config repo & trigger\r\n- All self service capability provided by spin-config is still working\r\n\u200b\r\n*Output*\r\nImplementation\r\nDesign documentation / ADR\u200b", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1283", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Backlog", "summary": "Refactor Spin-Config to use dynamic accounts for Echo", "updated": "2019-11-21T11:42:13+11:00", "estimate": 3.0, "epic_ref": "CLS-506", "epic_name": "", "diff_to_upstream": []}, "CNPS-1282": {"assignee": null, "created": "2019-11-07T10:39:53+11:00", "creator": "headenj1", "description": "Modify the spin-config repository to:\r\n\r\nPlace cloudbuild accounts secrets in known locations accessible from the igor pods\r\n\r\n\u200b\r\n*Acceptance Criteria*\r\n- Dynamic accounts are configured via spin-config repo & trigger\r\n- All self service capability provided by spin-config is still working\r\n\u200b\r\n*Output*\r\nImplementation\r\nDesign documentation / ADR\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1282", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Backlog", "summary": "Refactor Spin-Config to use dynamic accounts for Igor", "updated": "2019-11-21T11:42:27+11:00", "estimate": 3.0, "epic_ref": "CLS-506", "epic_name": "", "diff_to_upstream": []}, "CNPS-1281": {"assignee": null, "created": "2019-11-07T10:31:20+11:00", "creator": "headenj1", "description": "Create configuration repo in CSR and point the spring config server to this\r\nThe dynamic accounts feature of spinnaker requires a config server which is backed by a data store. The data store that we would use is a Git repo. Each echo pod would require access to the git repo, which we would host on CSR (synced from on-prem GHE via gitsync). The node service account will require access to CSR.  \r\n*Acceptance Criteria*\r\nConfiguration of kubernetes provider accounts is loaded to spinnaker UI via changes to on-prem GHE repo\r\n*Output*\r\nImplementation\r\nDesign documentation / ADR", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1281", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "To Do", "summary": "Manually configure Echo to use Dynamic Accounts CSR repo", "updated": "2019-11-21T11:42:47+11:00", "estimate": 2.0, "epic_ref": "CLS-506", "epic_name": "", "diff_to_upstream": []}, "CNPS-1280": {"assignee": null, "created": "2019-11-07T10:30:22+11:00", "creator": "headenj1", "description": "Create configuration repo in CSR and point the spring config server to this\r\nThe dynamic accounts feature of spinnaker requires a config server which is backed by a data store. The data store that we would use is a Git repo. Each igor pod would require access to the git repo, which we would host on CSR (synced from on-prem GHE via gitsync). The node service account will require access to CSR.  \r\n*Acceptance Criteria*\r\nConfiguration of kubernetes provider accounts is loaded to spinnaker UI via changes to on-prem GHE repo\r\n*Output*\r\nImplementation\r\nDesign documentation / ADR", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1280", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "To Do", "summary": "Manually configure Igor to use Dynamic Accounts CSR repo", "updated": "2019-11-21T11:43:10+11:00", "estimate": 2.0, "epic_ref": "CLS-506", "epic_name": "", "diff_to_upstream": []}, "CNPS-1279": {"assignee": null, "created": "2019-11-07T10:29:11+11:00", "creator": "headenj1", "description": "Create configuration repo in CSR and point the spring config server to this\r\nThe dynamic accounts feature of spinnaker requires a config server which is backed by a data store. The data store that we would use is a Git repo. Each clouddriver pod would require access to the git repo, which we would host on CSR (synced from on-prem GHE via gitsync). The node service account will require access to CSR.  \r\n*Acceptance Criteria * \r\nConfiguration of kubernetes provider accounts is loaded to spinnaker UI via changes to on-prem GHE repo\r\n*Output*\r\nImplementation\r\nDesign documentation / ADR", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1279", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "To Do", "summary": "Manually configure Clouddriver to use Dynamic Accounts CSR repo", "updated": "2019-11-21T11:43:29+11:00", "estimate": 3.0, "epic_ref": "CLS-506", "epic_name": "", "diff_to_upstream": []}, "CNPS-1278": {"assignee": "macdonl4", "created": "2019-11-07T10:27:49+11:00", "creator": "hidera", "description": "Currently we put helm chart for artifactory deploy in the \"secrets\" bucket.\r\n\r\n\u00a0\r\n\r\nThis was just a quick and dirty hack, as it was an already existing bucket, that we had access to.\r\n\r\n\u00a0\r\n\r\nWe should either put in an existing bucket with a purpose better aligned to what we are doing, or create a new bucket with the sole purpose of having artifactory-deploy files.\r\n\r\n\u00a0\r\n\r\nWe should update the deploy to utilise the non-secrets bucket.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1278", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Store helm chart in non-secrets bucket [artifactory]", "updated": "2019-12-02T08:36:58+11:00", "estimate": 3.0, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1277": {"assignee": "hidera", "created": "2019-11-04T09:17:31+11:00", "creator": "inagakir", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1277", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Closed", "summary": "Artifactory: Restore dev environment", "updated": "2019-11-04T09:19:59+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1274": {"assignee": "agrawad", "created": "2019-11-01T09:31:31+11:00", "creator": "blackm", "description": "It would be great if we could add a default lifecycle to artefacts in Artifactory. It would be great if by default, all artefacts are deleted after 90 days - UNLESS a tag or something similar is added.\r\n\r\nInvestigate this feature, and determine:\r\na) if it's possible\r\nb) how we could do it\r\nc) what a sensible lifecycle could be\r\n\r\nAcceptance:\r\n- Investigate and document\r\n- Showcase", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1274", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "SPIKE: Introduce default Artifactory artefact lifecycle", "updated": "2019-11-19T10:22:50+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1273": {"assignee": "sarkers1", "created": "2019-10-31T14:27:38+11:00", "creator": "clarker", "description": "In our Terraform build plans on DCBamboo, we use Cisco Iron Proxy to connect to GCP (10.204.6.4).\r\n\r\n\u00a0\r\n\r\nThis no longer works in SDCP Bamboo - and the recommended proxy to use is\u00a0\r\ngblproxyapp.lb.service.anz\r\n\u00a0\r\nThis should be changed so we can build in SDCP Bamboo and remove our dependency on DCBamboo.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1273", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Story Done", "summary": "Replace Cisco Iron proxy with gblproxyapp to work with SDCP Bamboo", "updated": "2019-11-04T10:27:32+11:00", "estimate": 6.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1272": {"assignee": "agrawad", "created": "2019-10-31T12:07:13+11:00", "creator": "agrawad", "description": "Comms need to be validated and enabled (if required) from 55 CSM to GCP in preparation of CNP move to 55 CSM.\r\n\r\n\u00a0\r\n\r\nA/C\r\n\r\n* gcloud, kubectl and access to GCP tools should be working from LAN at L5 55CSM.\r\n\r\n\u00a0\r\n\r\nOptional\r\n\r\n* gcloud, kubectl and access to GCP tools should be working from wireless at L5 55CSM.\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1272", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Enable comms from 55 Collins to GCP", "updated": "2019-11-14T09:55:35+11:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1271": {"assignee": null, "created": "2019-10-31T10:31:13+11:00", "creator": "inagakir", "description": "As an engineer\r\nI'd like to have my own development environment\r\nSo that I can do experiments without impacting other engineers' work\r\n\r\nIf creating a new project is allowed, it should be relatively easy.\r\nIf not, can we give a prefix for all GCP resources so that all engineers can have their dev environment in our existing dev project?\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1271", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "To Do", "summary": "SPIKE: Dev environment per dev by namespacing GCP resources", "updated": "2019-11-13T09:47:05+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1270": {"assignee": null, "created": "2019-10-30T12:50:03+11:00", "creator": "agrawad", "description": "Currently the firewall rule for our project needs to be modified every time in order for Spinnaker to talk to non prod environment of a customer with a new IP range. This means that someone needs to create the PR, security team needs to review and approve and then CS guys need to merge it.\r\n\r\nWe already have an ingress rule to allow all GCP nodes to talk to Artifactory. Similar rule is required to for all egress traffic.\r\n\r\n\u00a0\r\n\r\nA/C\r\n * An Egress rule allowing traffic from our project to all GCP nodes.\u00a0\u00a0\r\n * clean up of previous rules (which will be redundant now)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1270", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Backlog", "summary": "[Spinnaker] Automatic Egress FW rule for new projects", "updated": "2019-10-30T14:41:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1269": {"assignee": "sarkers1", "created": "2019-10-30T09:20:43+11:00", "creator": "sarkers1", "description": "Due to stop the bamboo build, the production tf state file is locked with the following details:\r\n{quote}[1m\u001b[31mError: \u001b[0m\u001b[0m\u001b[1mError locking state: Error acquiring the state lock: writing \"gs://anz-ex-services-prod-4525d2/default.tflock\" failed: googleapi: Error 412: Precondition Failed, conditionNotMet\r\nLock Info:\r\n\u00a0 ID:\u00a0 \u00a0 \u00a0 \u00a0 1572320826072670\r\n\u00a0 Path:\u00a0 \u00a0 \u00a0 gs://anz-ex-services-prod-4525d2/default.tflock\r\n\u00a0 Operation: OperationTypeApply\r\n\u00a0 Who:\u00a0 \u00a0 \u00a0 \u00a0@terraform-agent-bfbb7698c-5xxfp\r\n\u00a0 Version:\u00a0 \u00a00.11.8\r\n\u00a0 Created:\u00a0 \u00a02019-10-29 03:47:05.943222984 +0000 UTC\r\n{quote}\r\nTo resolve this issue, we need to get some help from the GCP team who has permission to delete `default.tflock` from the production bucket.", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1269", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "sarkers1", "status": "Done", "summary": "resolved the production tf state lock", "updated": "2019-11-01T17:29:44+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1268": {"assignee": "clarker", "created": "2019-10-30T08:18:44+11:00", "creator": "blackm", "description": "Spike into what work is required to enable X-Ray in Artifactory.\r\n\r\nReferences:\r\nhttps://www.jfrog.com/confluence/display/MC/Xray+Service\r\n\r\n---- \r\n\r\nWe need to add container image scanning capability to Artifactory.\r\n\r\nPre-reqs:\r\n- We now have a commercial licence for JFrog X-Ray\r\n\r\nAcceptance:\r\n- Understand X-Ray install & operational concerns\r\n- Understand how X-Ray talks to JFrog servers\r\n- Understand how Mission Control is required to implement this\r\n- Draw up architecture diagram in including Mission Control\r\n- POC an image scan repo", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1268", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "SPIKE: X-Ray / Mission Control analysis", "updated": "2019-11-18T09:54:12+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1267": {"assignee": "headenj1", "created": "2019-10-30T08:13:05+11:00", "creator": "blackm", "description": "Armory provide a feature called Policy Engine which allows us to enforce certain settings on Spinnaker pipelines with OPA code.\r\n\r\nhttps://docs.armory.io/spinnaker/policy_engine/\r\n\r\nAcceptance:\r\n- Install working policy engine in dev/staging\r\n- Report on installation / usage / benefits / limitations\r\n- Showcase findings", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1267", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "To Do", "summary": "SPIKE: Test and Learn policy engine from Armory", "updated": "2019-11-19T09:35:45+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1266": {"assignee": null, "created": "2019-10-30T08:11:02+11:00", "creator": "blackm", "description": "Armory provide a Spinnaker plugin which is for running terraform. We need to explore and learn the capabilities.\r\n\r\nQuestions:\r\n- How could we manage secret environment vars passed to terraform itself\r\n- How can we define pipelines with a terraform stage in code?\r\n- Does terraformer do anything clever for us with remote state?\r\n\r\nAcceptance:\r\n- Installed and working terraformer in dev/staging\r\n- Report on installation / usage / benefits / limitations\r\n- Showcase findings", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1266", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "To Do", "summary": "SPIKE: Test and Learn terraformer from Armory Spinnaker", "updated": "2019-11-14T09:48:47+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1265": {"assignee": null, "created": "2019-10-30T08:02:23+11:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1265", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Innovation Spikes all in one view", "updated": "2019-11-22T11:54:03+11:00", "estimate": null, "epic_ref": null, "epic_name": "SPIKE", "diff_to_upstream": []}, "CNPS-1264": {"assignee": "agrawad", "created": "2019-10-29T11:48:47+11:00", "creator": "agrawad", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1264", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Issues merging abt spin-config request", "updated": "2019-11-06T10:37:49+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1263": {"assignee": "kuzhinjr", "created": "2019-10-28T15:00:48+11:00", "creator": "inagakir", "description": "The SA key for Spinnaker ({{spinnaker-gcs-access-key.json}}) is being stored unencrypted in the halyard-config storage bucket.\r\n\r\nThe SA has the following roles:\r\n\r\n* {{roles/browser}} to project\r\n* {{roles/computer.viewer}} to project\r\n* {{roles/monitoring.viewer}} to project\r\n* {{roles/monitoring.metricWriter}} to project\r\n* {{roles/storage.admin}} to ${project_id}-spinnaker-config bucket\r\n\r\nh3. Acceptance Criteria\r\n\r\n# Replace any reference to the unencrypted key to its encrypted version\r\n# Rotate the key\r\n", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1263", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "inagakir", "status": "Done", "summary": "Remove unencrypted SA key for Spinnaker", "updated": "2019-11-08T09:32:03+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1262": {"assignee": "agrawad", "created": "2019-10-28T14:58:29+11:00", "creator": "inagakir", "description": "The SA key for Spinnaker Fiat microservice ({{spinnaker-fiat-key.json}}) is being stored unencrypted in the halyard-config storage bucket.\r\n\r\nh3. Acceptance Criteria\r\n\r\n# Replace any reference to the unencrypted key to the encrypted version of the key\r\n# Rotate the key", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1262", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "inagakir", "status": "Done", "summary": "Remove unencrypted SA key for Spinnaker Fiat", "updated": "2019-11-08T09:29:44+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1261": {"assignee": "agarwas2", "created": "2019-10-28T12:02:09+11:00", "creator": "tanga", "description": "As an output of the ECP secrets audit: https://confluence.service.anz/display/~tanga/ECP+%7C+Secrets+Audit\r\n\r\nTwistlock Deploy\r\nOnly \"secrets\" are a username/password combo that is in code in cleartext and set to \"admin/admin\". Need to confirm if these are dummy values that get changed later with Matt or Satyam.\r\n\r\nAcceptance Criteria\r\n* Assess what this secret is used for.\r\n* Fix clear text if required.\r\n* Update documentation (eg any risks raised as part of audit).\r\n\r\n[~blackm] - for prioritisation.\r\n[~agarwas2] [~hidera] - FYI", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1261", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "To Do", "summary": "Twistlock - assess and fix clear text admin username password", "updated": "2019-12-04T11:29:33+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1260": {"assignee": "agrawad", "created": "2019-10-25T15:53:52+11:00", "creator": "vadrevus", "description": "Merged this PR: https://github.service.anz/ex/spin-config/pull/113/files to spin-config.\r\n\r\nThe updated config needs to be deployed to staging tested and deployed to production.", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1260", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Done", "summary": "Deploy/test new customer configuration in spin-config", "updated": "2019-11-12T10:03:46+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1259": {"assignee": null, "created": "2019-10-24T16:13:56+11:00", "creator": "clarker", "description": "Today the following commit to GitSync Config\r\n\r\n[https://github.service.anz/ex/gitsync-config/pull/328/commits/3ab8e04ad60ae7edb4cb09557231ecbee9382f5f]\r\n\r\ncaused the following error and GitSync:\r\n\r\n{{{\"level\":\"error\",\"msg\":\"validate: Duplicate repository ID: ghe:csp:processorchestration\",\"time\":\"2019-10-24T04:56:04Z\"}}}\r\n\r\nWe should add validation to prevent this from occurring again.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1259", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Backlog", "summary": "[GitSync] Add Validation duplicate repository ID", "updated": "2019-10-30T09:52:23+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1258": {"assignee": "vadrevus", "created": "2019-10-24T14:37:21+11:00", "creator": "vadrevus", "description": "Artifactory automated trigger currently supports MAVEN artifacts. Investigate the updates needed upstream to enable HELM repos in artifactory to auto trigger pipelines.\r\n\r\nRelevant issues raised in spinnaker:\r\nhttps://github.com/spinnaker/spinnaker/issues/4069\r\nPotential updates needed  to following classes:\r\n\r\nhttps://github.com/spinnaker/igor/blob/master/igor-web/src/main/java/com/netflix/spinnaker/igor/artifactory/model/ArtifactoryRepositoryType.java#L20\r\n\r\nhttps://github.com/spinnaker/igor/blob/master/igor-web/src/main/java/com/netflix/spinnaker/igor/artifactory/ArtifactoryBuildMonitor.java#L122\r\n\r\nTo enable artifactory repository settings in halyard, follow the docs from spinnaker:\r\nhttps://www.spinnaker.io/guides/tutorials/codelabs/artifactory-to-cf/#1-add-artifactory-search-to-spinnaker", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1258", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "SPIKE: Artifactory automated triggers for helm charts", "updated": "2019-11-19T13:52:24+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1257": {"assignee": "dugalp", "created": "2019-10-24T14:03:53+11:00", "creator": "dugalp", "description": "[~leej54] has request on Slack #eng-acceleration to create a remote repository in GCP Artifactory.  \r\n\r\nhttps://anzengineering.slack.com/archives/CHDAQ6K52/p1571870261245000\r\n\r\nThe URL is already whitelisted:\r\nhttps://confluence.service.anz/display/EX/Whitelisted+URLs\r\n\r\nContext for the request:\r\n\"BX tribe is now preparing to move to GCP environment and I want to make sure that our e2e testing should not be broken due to Artifactory connectivity issues.\"\r\n\r\nFollow the steps listed here to create the repository:\r\nhttps://github.service.anz/ex/artifactory-config/blob/master/docs/RemoteRepo.md\r\n\r\n*Acceptance*\r\n\r\n\u2022 Update https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=Remote+Repository+Mirrors\r\n\u2022 The following command is successful:\r\n\r\n{code:bash}\r\n$ gem install xcov --verbose --source https://artifactory.gcp.anz/artifactory/api/gems/rubygems\r\n{code}\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1257", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Create an Artifactory remote repository for rubygems.org with Terraform (Self Service)", "updated": "2019-10-25T13:51:09+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1256": {"assignee": "sarkers1", "created": "2019-10-22T10:22:53+11:00", "creator": "sarkers1", "description": "All the DCtools (DCbamboo, Dcartifactiry, DCsonarqube) are sunset, hence we can remove the service catalog for access to DCtools, as the BX team maintains their own way to handle the access.\u00a0\r\nIf we don't remove this unsupported service catalog then the user will raise request for access which will go unattended\u00a0\r\n\r\nDCTools Current Status:\r\n [https://confluence.service.anz/display/VE/Omni+Service+Catalogue]\r\n\r\nService Catalogue:\u00a0\r\n [https://anztech.service-now.com/techassist?id=sc_cat_item&sys_id=0f09e948db4e3f00c7d613153a96194a]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1256", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "Delete \"Omni Tools Access\" Service catalogue from Tech Assist", "updated": "2019-10-28T09:27:11+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1255": {"assignee": "inagakir", "created": "2019-10-21T16:05:21+11:00", "creator": "inagakir", "description": "Over the weekends, Stackdriver sent us 6 alerts for Spinnaker pods memory usage alerts.\r\nI heard it started happening when we introduced the metrics alert about 2 weeks ago. It was introduced as we saw Spinnaker Gate pods being killed & restarted indefinitely when they used too much memory and that impacted users.\r\n\r\nWe are planning to set an alert on the log of those pods to catch the incident, but this requires the creation of custom metrics and IAM permission is required.\r\ncf. https://jira.service.anz/browse/CNPS-1224?focusedCommentId=2042924&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-2042924\r\n\r\nSo for now, we want to get an alert on the memory usage and check if error logs related to the low memory can be found.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1255", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Story Done", "summary": "[Spinnaker] Configure Stackdriver to not raise alert we don't care", "updated": "2019-10-22T12:45:49+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1254": {"assignee": null, "created": "2019-10-21T14:11:17+11:00", "creator": "agarwas2", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1254", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "DNS Redirect only VPC SC supported services ", "updated": "2019-10-30T21:39:42+11:00", "estimate": null, "epic_ref": "CNPS-1243", "epic_name": "", "diff_to_upstream": []}, "CNPS-1253": {"assignee": "clarker", "created": "2019-10-21T14:09:40+11:00", "creator": "agarwas2", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1253", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Document current state of private cloud build worker pool", "updated": "2019-11-16T09:14:59+11:00", "estimate": 3.0, "epic_ref": "CNPS-1243", "epic_name": "", "diff_to_upstream": []}, "CNPS-1252": {"assignee": null, "created": "2019-10-21T14:08:58+11:00", "creator": "agarwas2", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1252", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Remediate Cloudbuild VPCSC perimeter", "updated": "2019-11-21T10:14:03+11:00", "estimate": 13.0, "epic_ref": "CLS-494", "epic_name": "", "diff_to_upstream": []}, "CNPS-1251": {"assignee": "sarkers1", "created": "2019-10-18T16:31:26+11:00", "creator": "sarkers1", "description": "PBC builds are queue due to resource limitaion.\u00a0", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1251", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "PBC running out of resource", "updated": "2019-10-21T09:16:47+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1250": {"assignee": "sarkers1", "created": "2019-10-17T17:14:22+11:00", "creator": "sarkers1", "description": "Currently, DC Artifactory used 94% available space, find out the old artifact, feature branch snapshot and delete those.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1250", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "DCArtifactory Cleanup [current space used (94%)]", "updated": "2019-10-22T14:39:02+11:00", "estimate": 7.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1249": {"assignee": "hidera", "created": "2019-10-17T16:08:51+11:00", "creator": "castanoa", "description": "Include discussion about how can we make it easier for our users, particularly in the group, users and permision-target space.\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1249", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Artifactory-config 101", "updated": "2019-10-31T09:44:57+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1248": {"assignee": "blackm", "created": "2019-10-17T16:07:22+11:00", "creator": "castanoa", "description": "We want to know the reasons for the current process.\r\n\r\nHow can we provide feedback?", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1248", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "To Do", "summary": "ChangeManagement: How to provide feedback and questions", "updated": "2019-10-17T16:09:12+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1247": {"assignee": "inagakir", "created": "2019-10-17T16:06:09+11:00", "creator": "castanoa", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1247", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Publish our team's support SLA", "updated": "2019-10-25T09:35:55+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1246": {"assignee": "agarwas2", "created": "2019-10-17T15:54:22+11:00", "creator": "castanoa", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-1246", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "To Do", "summary": "Share the draft CloudBuild workers design flaws document", "updated": "2019-10-17T16:09:05+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1245": {"assignee": "dugalp", "created": "2019-10-17T12:37:14+11:00", "creator": "dugalp", "description": "https://jira.service.anz/browse/SDCP-41597\r\n\r\nChristian Ganal 11:42 AM\r\nare you able to assist in a bamboo agent assignment as the bangalore guy assigned to our job is on leave", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1245", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Container squad BAU support", "updated": "2019-10-21T09:16:46+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1243": {"assignee": "blackm", "created": "2019-10-16T11:17:51+11:00", "creator": "blackm", "description": "The GCP squad have handed the Cloud Build worker pool to CNP squad to further develop capability.\r\n\r\nThis epic should capture all work included as part of this \"handover\".\r\n\r\nAcceptance:\r\n- Complete current-state architecture diagram\r\n- Complete future-state view\r\n- Validate with Google\r\n- Internet access from Cloud Build?\r\n- Access to on-prem from Cloud Build?\r\n- APRA-concerns with a shared service?", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1243", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic Done", "summary": "Handover and review architecture / automation of Private Cloud Build worker pool", "updated": "2019-11-16T09:19:14+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Private Cloud Build", "diff_to_upstream": []}, "CNPS-1242": {"assignee": "inagakir", "created": "2019-10-16T10:40:35+11:00", "creator": "inagakir", "description": "Requested on slack: https://anzengineering.slack.com/archives/CC01Q85UZ/p1570418646163800", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1242", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Story Done", "summary": "Help bx-contact-center get onboarded on gitsync", "updated": "2019-10-21T09:16:45+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1241": {"assignee": "hidera", "created": "2019-10-15T11:34:20+11:00", "creator": "hidera", "description": "Looks like can connect to the artifactory instance at all.\r\n\r\n\u00a0\r\n\r\nCan reproduce in dev/stg, prod looks to be same.\r\n\r\n\u00a0\r\n\r\nEven\u00a0 a simple curl [https://artifactory-dev.ex.gcpnp.anz|https://artifactory-dev.ex.gcpnp.anz/]\u00a0fails\u00a0\r\n\r\n\u00a0\r\n\r\nNote the service is up. suspect some kind of vpc/networking/gcp change may be the culprit?", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1241", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Artifactory-config cloudbuild cant connect to artifactory in dev/stg", "updated": "2019-10-21T09:16:44+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1240": {"assignee": null, "created": "2019-10-15T09:54:03+11:00", "creator": "hidera", "description": "Move away from secrets in bucket, and store encrypted in git.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1240", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "[twistlock] Migrate secrets from bucket to git", "updated": "2019-10-30T09:53:34+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1239": {"assignee": null, "created": "2019-10-15T09:52:52+11:00", "creator": "hidera", "description": "Move away from secrets bucket and store in git (encrypted)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1239", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "[spinnaker] Migrate secrets from bucket to git", "updated": "2019-10-30T09:53:28+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1238": {"assignee": null, "created": "2019-10-15T09:52:08+11:00", "creator": "hidera", "description": "Artifactory deploy move to the encrypted secrets in git and away from secrets stored in bucket.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1238", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "[artifactory] Migrate secrets from bucket to git", "updated": "2019-10-30T09:53:19+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1237": {"assignee": null, "created": "2019-10-15T09:51:19+11:00", "creator": "hidera", "description": "We are moving away from secrets in bucket, storing them in git [encrypted]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1237", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "[artifactory-config] Migrate secrets from bucket to git", "updated": "2019-10-30T09:52:51+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1236": {"assignee": "hidera", "created": "2019-10-14T14:43:14+11:00", "creator": "hidera", "description": "2 new remote repos of type \"debian\" setup for the following URLS\r\n\r\n\u00a0\r\n\r\n\u00a0{{[http://security.debian.org/]}}\u00a0\r\n\r\n\u00a0\r\n\r\n[http://ftp.au.debian.org/debian/]\r\n\r\n\u00a0\r\n\r\nWill require proxy whitelisting", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1236", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Artifactory remote repo for debian & debian-security", "updated": "2019-10-24T10:26:24+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1235": {"assignee": "hidera", "created": "2019-10-10T16:45:58+11:00", "creator": "vadrevus", "description": "Update permissions for andrew.rampling on the repo terraform-provider-local to include write access.", "fixVersions": ["1.1.0"], "issuetype": "Task", "key": "CNPS-1235", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Done", "summary": "Permission update for Terraform artifactory rep user", "updated": "2019-10-21T09:14:21+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1234": {"assignee": "inagakir", "created": "2019-10-10T14:51:01+11:00", "creator": "vadrevus", "description": "Jake has raised a PR https://github.service.anz/ex/spin-config/pull/105 to update timezone in hal config to Melbourne.\r\n\r\nTest these changes in dev and staging.", "fixVersions": [], "issuetype": "Task", "key": "CNPS-1234", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Done", "summary": "Test timezone updates to spin config", "updated": "2019-10-23T10:39:46+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1233": {"assignee": "hidera", "created": "2019-10-10T14:50:06+11:00", "creator": "inagakir", "description": "Requested on slack: https://anzengineering.slack.com/archives/CHDAQ6K52/p1570601150005700?thread_ts=1569376201.134600&cid=CHDAQ6K52", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1233", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Story Done", "summary": "Create an Artifactory repo for storing CDE artefacts", "updated": "2019-10-21T09:16:43+11:00", "estimate": 5.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1232": {"assignee": "clarker", "created": "2019-10-10T11:34:32+11:00", "creator": "inagakir", "description": "h4. Story\r\n\r\n{code}\r\nAs Engineering Acceleration\r\nWhen the CloudSQL instance for Artifactory is removed\r\nI want to be able to restore the data to a new CloudSQL instance\r\nSo that we can quickly recover from disaster\r\n{code}\r\n\r\nh4. Background Notes\r\n\r\nRegarding why we export DB to a storage bucket, see the background notes on https://jira.service.anz/browse/CNPS-736\r\n\r\nh4. References:\r\n\r\n- [https://cloud.google.com/sql/docs/postgres/import-export/]\r\n- [https://cloud.google.com/sql/docs/postgres/import-export/importing]\r\n\r\nh4. Acceptance Criteria\r\n\r\n * Provide an easy way to restore Artifactory DB from the exported data in the bucket\r\n * Document the steps to restore from the backup in our Confluence Artifactory Disaster Recovery section.\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1232", "labels": ["Artifactory"], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "inagakir", "status": "Story Done", "summary": "Restore Artifactory DB from the backup in the bucket", "updated": "2019-11-12T09:03:30+11:00", "estimate": 4.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1231": {"assignee": "hidera", "created": "2019-10-10T10:58:43+11:00", "creator": "hidera", "description": "Ticket is not to do the work, but to document work required and create tickets.\r\n\r\n\u00a0\r\n\r\nCurrently Artifactory relies upon Artifactory to do a deploy.\r\n\r\nCurrently Spinnaker relies upon Artifactory to do a deploy.\r\n\r\nWe want to start deploy Artifactory utilising Spinnaker.\r\n\r\n\u00a0\r\n\r\nTo do this we want:\r\n * a way of deploying spinnaker not reliant on artifactory\r\n * map out tasks required to start deploying artifactory utilising spinnaker\r\n * remove reliance on artifactory when doing artifactory deploy.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1231", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Create roadmap on moving artifactory deploy to spinnaker and be able to deploy spinnaker without artifactory", "updated": "2019-11-26T15:39:35+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1230": {"assignee": "dugalp", "created": "2019-10-10T08:00:17+11:00", "creator": "dugalp", "description": "Many agents were left on DCBamboo and should be migrated ", "fixVersions": ["1.1.0"], "issuetype": "Task", "key": "CNPS-1230", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Done", "summary": "Migrate remaining iOS and Android agents from DCBamboo (DCX)", "updated": "2019-10-21T09:16:42+11:00", "estimate": null, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1229": {"assignee": "dugalp", "created": "2019-10-10T07:54:14+11:00", "creator": "dugalp", "description": "Work with Suvrat, Agung, and team.\r\n\r\n4 agents are currently running on one Mac mini\r\n\r\n2 out of 4 were migrated from DCBamboo to SDCP Bamboo\r\n\r\nNeed to migrate last 2 now that all jobs are migrated for higher capacity \r\n\r\n", "fixVersions": ["1.1.0"], "issuetype": "Task", "key": "CNPS-1229", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Done", "summary": "Migrate last 2 Bamboo remote agents for THA, CSM, BFF (DCX)", "updated": "2019-10-21T09:16:40+11:00", "estimate": null, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1228": {"assignee": "agarwas2", "created": "2019-10-09T21:21:49+11:00", "creator": "agarwas2", "description": "TBD", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1228", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Windows container support on Artifactory", "updated": "2019-11-12T14:35:38+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1227": {"assignee": "clarker", "created": "2019-10-09T09:29:20+11:00", "creator": "clarker", "description": "GitSync Code & Config contain references to DC Artifactory and DC Bamboo. These need to be updated to GCP Artifactory, SDCP Bamboo accordingly.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1227", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Story Done", "summary": "Update DC references in GitSync code and config", "updated": "2019-10-21T09:16:39+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1226": {"assignee": "hidera", "created": "2019-10-08T16:41:51+11:00", "creator": "hidera", "description": "Patrick Marabeas from slack #eng-acceleration\r\n\r\n\u00a0\r\n\r\n[patrick|https://app.slack.com/team/U6ALP9GHM]\u00a0\u00a0[13 minutes ago|https://anzengineering.slack.com/archives/CHDAQ6K52/p1570512423292900?thread_ts=1570512295.292600&cid=CHDAQ6K52]\r\n{{curl -u -k user:token [https://artifactory.gcp.anz/artifactory/api/npm/anzdesignsystem-npm/auth/anz]}}\r\n{\r\n \u00a0\"errors\" : [ {\r\n \u00a0 \u00a0\"status\" : 400,\r\n \u00a0 \u00a0\"message\" : \"You must be authenticated.\"\r\n \u00a0} ]\r\n}", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1226", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Artifactory Access Token can't login for npm access", "updated": "2019-10-21T09:16:38+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1225": {"assignee": "castanoa", "created": "2019-10-08T13:24:44+11:00", "creator": "castanoa", "description": "Upgrade the helm chart of spinnaker to the latest version.\r\n\r\nThis is to be able to use templating functionality when defining *-local.yaml files.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1225", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Upgrade to latest helm chart", "updated": "2019-10-21T09:15:08+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1224": {"assignee": "castanoa", "created": "2019-10-08T13:24:02+11:00", "creator": "castanoa", "description": "Add an alert for timeout errors when connecting spinnaker to cloud sql.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1224", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "[Spinnaker] Add alert for sql connectivity error", "updated": "2019-11-12T16:17:37+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1223": {"assignee": "sarkers1", "created": "2019-10-08T12:50:16+11:00", "creator": "sarkers1", "description": "They use bambooaws instance to run their plan, hence no need to migrate their plans for dcbamboo to SDCP bamboo.\r\n\r\nHowever, they request our help to migrate their repos from DCartifactory to SDCP artifactory.\r\n # -anzdotcom-content-libs-\u00a0*DONE*\r\n # -anzdotcom-content-release- *DONE*\r\n # -anzdotcom-content-snapshot- *DONE*\r\n # -anzdotcom-devops-libs- *DONE*\r\n # -anzdotcom-devops-release- *DONE*\r\n # -anzdotcom-devops-snapshot- *DONE*\r\n # -anzcom-maven-releases-\u00a0*DONE*\r\n # -anzcom-maven-snapshots- *DONE*\r\n # -anzcom-maven-third-party-\u00a0*DONE*\r\n\r\nAlso, need to request the following remote repo whitelisting\r\n # [http://npm.taobao.org/mirrors/node-sass/]\r\n # [http://cnpmjs.org/downloads]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1223", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "Migrate ANZ.com (DSE)", "updated": "2019-10-21T13:37:19+11:00", "estimate": 3.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1222": {"assignee": "sarkers1", "created": "2019-10-08T12:27:14+11:00", "creator": "sarkers1", "description": "It seems like, we miss one remote repo for DSE. Can you please add this as well\r\n\r\nDCartifactory:\u00a0[https://dcartifactory.service.dev/artifactory/webapp/#/artifacts/browse/tree/General/cnpmjs]\r\nURL:\u00a0[http://cnpmjs.org/downloads]\u00a0\r\n\r\nHowever, this URL mirror index of this\u00a0[https://bitbucket.org/ariya/phantomjs/downloads/]\u00a0. I will suggest whitelisting this URL with the remote key \"phantomjs\".\r\n\r\nBased on Lawrence's advise, we can't add additional requests in existing tickets for remote repo whitelisting. Hence, creating a new ticket for it", "fixVersions": [], "issuetype": "Sub Task", "key": "CNPS-1222", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "Request for remote repo whitelisting for DSE Tribe", "updated": "2019-10-21T16:48:06+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1221": {"assignee": "hidera", "created": "2019-10-07T16:27:29+11:00", "creator": "hidera", "description": "We have user accounts (artifactory user accounts) with admin privileges that are used to actually perform the REST api calls when we manage artifactory users/repos/etc via terraform.\r\n\r\n\u00a0\r\n\r\nWe need to remove these accounts (Satyam says we should not have non-human user accounts in Artifactory).\r\n\r\n\u00a0\r\n\r\nWe should replace this with an access token that has group privileges of EX_ADMIN.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1221", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Remove artifactory user, and generate access token for cloudbuild terraform user", "updated": "2019-11-19T15:50:10+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1220": {"assignee": "inagakir", "created": "2019-10-07T15:23:03+11:00", "creator": "inagakir", "description": "Requested on slack: https://anzengineering.slack.com/archives/CHDAQ6K52/p1569376201134600", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1220", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Story Done", "summary": "Create an Artifactory access token for CDE bot user", "updated": "2019-10-30T11:36:16+11:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1219": {"assignee": "agrawad", "created": "2019-10-07T10:06:25+11:00", "creator": "agrawad", "description": "As part of Jenkins decomission, Jenkins configuration needs to be removed from Spinnaker.\u00a0\r\n\r\nAndres has more context around this.\r\n\r\nA/C\r\n * Removal of Jenkins config from Spinnaker.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1219", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Closed", "summary": "Remove Jenkins configuration from Spinnaker", "updated": "2019-10-21T09:16:37+11:00", "estimate": null, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1218": {"assignee": "castanoa", "created": "2019-10-04T15:20:47+10:00", "creator": "castanoa", "description": "Reported by Jake.\r\nIn project view, if there are pending manual judgements, there is an error appearing in the ui and if the continue button is hit, the pipeline gets stuck.\r\n\r\nThe problem doesn't present if we do this from the applications view.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1218", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "[Spinnaker] Manual gate error in project view", "updated": "2019-11-12T09:59:55+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1217": {"assignee": null, "created": "2019-10-04T15:19:00+10:00", "creator": "castanoa", "description": "Reported by Jake.\r\nIn project view, if there are pending manual judgements, there is an error appearing in the ui and if the continue button is hit, the pipeline gets stuck.\r\n\r\nThe problem doesn't present if we do this from the applications view.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1217", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Spinnaker Manual gate error in project view", "updated": "2019-10-21T09:16:36+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1216": {"assignee": "sarkers1", "created": "2019-10-04T13:15:20+10:00", "creator": "sarkers1", "description": "bamboo building is failing for BDS, they request help in support channel.\r\n\r\n[https://dcbamboo.service.dev:8443/browse/CNBDSU-BDSUTILS]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1216", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "Fixing Bamboo static agent", "updated": "2019-10-30T10:54:08+11:00", "estimate": 5.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1215": {"assignee": "castanoa", "created": "2019-10-02T14:39:43+10:00", "creator": "castanoa", "description": "At the moment the average CPU usage of clouddriver is above the requested resources.\r\nModify increase this value so that the average CPU usage is below 80% of the requested CPU.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1215", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Modify clouddriver request resources to match current usage", "updated": "2019-10-21T09:15:11+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1214": {"assignee": "sarkers1", "created": "2019-10-02T10:05:53+10:00", "creator": "sarkers1", "description": "[https://dcbamboo.service.dev:8443/browse/CPO-R92354-2/log]\r\n\r\n[https://dcbamboo.service.dev:8443/browse/CPO-R92354-2/log]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1214", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "PO Bamboo build issue", "updated": "2019-10-21T09:16:35+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1213": {"assignee": "hidera", "created": "2019-10-01T13:03:41+10:00", "creator": "hidera", "description": "We now manage most configuration of artifactory via terraform.\r\n\r\n\u00a0\r\n\r\nThe \"manage\" option in a permission target exists for some of our permission targets.\r\n\r\n\u00a0\r\n\r\nAccording to the docs:\u00a0[https://www.jfrog.com/confluence/display/RTF/Managing+Permissions#ManagingPermissions-CreatingaPermissionTarget]\r\n\r\nmanage - \"Allows changing the permission settings for other users on this permission target\"\r\n\r\nWe don't want users making config changes such as that, that then may get overwritten or undone by terraform apply.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1213", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "remove \"manage\" from all permission targets", "updated": "2019-10-29T13:58:12+11:00", "estimate": 2.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-1212": {"assignee": "agrawad", "created": "2019-09-30T10:14:48+10:00", "creator": "hidera", "description": "Can we automate some of the standard change request process\u00a0\r\n\r\n(I wouldn't expect we could 100% automation), but we hopefully could make it faster.\r\n\r\n\u00a0\r\n\r\nPossibly could have some YAML that matches fields in a standard change, and a\u00a0script that uses it to raise standard change, potentially schedule it, potentially close off common subtasks, etc.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1212", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "SPIKE: Standard change automation via API", "updated": "2019-11-18T09:53:47+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1211": {"assignee": "hidera", "created": "2019-09-26T16:18:11+10:00", "creator": "hidera", "description": "Now that we are in private cloud build, we need to use Artifactory remote repositories for the helm charts download, and the container image pulling that happens during a deploy.\r\n\r\nThe current workaround was manually uploaded images/files from laptop.\r\n\r\nSteps:\r\n\r\n\u00a0\r\n\r\n* change Makefile target \"helm/artifactory-ha\" to download from\u00a0\r\n\r\nhttps://artifactory.gcp.anz/artifactory/jfrog-charts\r\n\r\n* change Makefile target \"kube.yaml\" target for the artifactory & nginx containers to come from location such as:\u00a0\r\n\r\nbintray-docker.artifactory.gcp.anz/jfrog/artifactory-pro\r\n* change Makefile target \"kube.yaml\" target for the init container to come from our dockerhub remote repo on prod artifactory.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1211", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Artifactory: utilise artifactory remotes for deploy (jfrog-charts and bintray-docker)", "updated": "2019-10-31T12:08:39+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1210": {"assignee": "hidera", "created": "2019-09-26T15:09:31+10:00", "creator": "hidera", "description": "Currently we have no resource limits set for Artifactory.\r\n\r\n\u00a0\r\n\r\nWe should set these, to match a \"large\" install according to JFrog's recommendations:\u00a0\r\n\r\n[https://github.com/jfrog/charts/blob/master/stable/artifactory-ha/values-large.yaml]\r\n\r\nAdditionally we should change the stackdriver alert policy, that warns when artifactory RAM usage exceeds 2.5Gb, as that is too low.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1210", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "To Do", "summary": "Artifactory: Set large resource limits for artifactory", "updated": "2019-11-15T10:03:47+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1209": {"assignee": "inagakir", "created": "2019-09-26T14:17:43+10:00", "creator": "inagakir", "description": "Requested on slack: https://anzengineering.slack.com/archives/CHDAQ6K52/p1569376201134600", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1209", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Story Done", "summary": "Create CDE docker repo on Artifactory", "updated": "2019-10-21T09:16:34+11:00", "estimate": 5.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1208": {"assignee": "hidera", "created": "2019-09-26T11:55:03+10:00", "creator": "hidera", "description": "Patrick Marabeas requires access token for bamboo jobs to have access to anzdesignsystem-npm repo in gcp artifactory.\r\n\r\nAdditionally he would like full read/write/delete access for him personally to this repo.\r\n\r\nOnce we have created the access token, will put it in this bamboo job as a \"secret\" environment variable ARTIFACTORY_TOKEN_PASSWORD here [https://bamboo.service.anz/chain/admin/config/configureChainVariables.action?buildKey=ADS-BB]\r\n\r\nDo all except for access token part in terraform, this needs to be done via a curl command\r\n\r\n\r\nSteps:\r\n* create 2 groups, one for admin, one for ci\r\n* add patrick to admin group\r\n* create permission target that applies to this repo, and gives admin group all permissions, and ci group just read/annotate/deploy\r\n* once group created, create access token, and input into bamboo\r\n\r\n\r\nSome docs here:\u00a0[https://confluence.service.anz/display/EX/Access+Tokens]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1208", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Access token for anzx npm repo", "updated": "2019-10-21T09:14:20+11:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1207": {"assignee": null, "created": "2019-09-26T11:24:00+10:00", "creator": "blackm", "description": "In order to migrate, Jenkin may need to be working.\r\n\r\nPlease close ticket if this is not true!\r\n\r\nAcceptance:\r\n- Find out if Jenkins needed for migration\r\n- Make Jenkins working", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1207", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Make Jenkins operational for migration", "updated": "2019-10-21T09:16:26+11:00", "estimate": null, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1206": {"assignee": "sarkers1", "created": "2019-09-25T09:07:29+10:00", "creator": "sarkers1", "description": "Deployment failing in udeploy, reported by\u00a0[hariharakumar.dhanakoti@anz.com|mailto:hariharakumar.dhanakoti@anz.com]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1206", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "Deployment failing in udeploy ", "updated": "2019-10-21T09:16:32+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1205": {"assignee": null, "created": "2019-09-23T23:20:57+10:00", "creator": "agarwas2", "description": "Stackdriver logging has high rates of errors as below\r\n\r\nFailed to publish resource metadata: Unexpected response code from Stackdriver API: 403 Forbidden\r\n\r\nThis is due to the GKE service account not having the roles/stackdriver.resourceMetadata.writer role. This story is to assign said role to the GKE SA in each environment\r\n\r\nAcceptance Critera\r\n\r\nRole is assigned to GKE service account and verified using the IAM console in GCP", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1205", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Missing permissions for GKE SA", "updated": "2019-12-02T09:48:07+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1204": {"assignee": "castanoa", "created": "2019-09-23T15:08:29+10:00", "creator": "castanoa", "description": "At build time, the container need http_proxy set, but at run time this variable should be removed.\r\n\r\nTo solve that, follow this guide: https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#env\r\n\r\nThe values to be set in the docker file are:\r\n\r\nhttps_proxy=http://host.docker.internal:3128\r\nhttp_proxy=http://host.docker.internal:3128\r\n\r\nInclude setting and un-setting this variables as part of the RUN command that installs bat.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1204", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Set and Unset proxy for bash tests", "updated": "2019-10-21T09:15:10+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1203": {"assignee": "castanoa", "created": "2019-09-23T13:52:10+10:00", "creator": "castanoa", "description": "Add resource request and limit to each of the spinnaker services based on the behaviour of the previous month.\r\n\r\nAttached are the graphs.\r\n\r\n** Acceptance **\r\n- All of the spinnaker services have a proper resource request and limit section in the manifest.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1203", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Modify spinnaker CPU and memory Requests", "updated": "2019-10-21T09:15:19+11:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1202": {"assignee": "castanoa", "created": "2019-09-23T13:03:44+10:00", "creator": "castanoa", "description": "Users can not see Spinnaker execution history.\r\nOrca pod is throwing `outOfMemoryError`\r\nTicket created for this:\r\nhttps://anztech.service-now.com/nav_to.do?uri=incident.do?sys_id=f8fbc53ddb488098989759364a9619c6", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1202", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Execution history is lost", "updated": "2019-10-21T09:15:20+11:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1201": {"assignee": null, "created": "2019-09-23T12:20:58+10:00", "creator": "castanoa", "description": "*Acceptance*\r\n- Implement periodic backups for Spinnaker Cloud Sql Db\r\n- Backups can be restored.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1201", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Backlog", "summary": "[Spinnaker] Implement CloudSql backups for Spinnaker Cloud Sql db", "updated": "2019-10-30T14:39:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1200": {"assignee": "castanoa", "created": "2019-09-23T12:02:39+10:00", "creator": "castanoa", "description": "Implement few initial metrics and alerts for spinnaker. These are to be adjusted as we use them for more accuracy. \r\n\r\n**Acceptance**\r\n- Alert on pods CPU higher than 80% for 5 mins.\r\n- Alert on pods Memory higher than 80% for 5 mins.\r\n- Alert on pods restarts.\r\n- Alert on un-healty pods for more than 10 mins.\r\n- Alert on error messages in logs.\r\n- Alert on specific logs that indicate potential problems. ie: Error from server (Forbidden)\r\n\r\n\r\n", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1200", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Implement basic metrics and alerts for Spinnaker errors", "updated": "2019-10-21T09:15:18+11:00", "estimate": 27.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1199": {"assignee": "castanoa", "created": "2019-09-23T11:56:50+10:00", "creator": "castanoa", "description": "Enable the admin mode in spinnaker, so we can see all of the pipelines and config.\r\n\r\nhttps://www.spinnaker.io/setup/security/admin/\r\n\r\n** Acceptance **\r\n- Admin mode is enabled for the GCP_EX_DEVELOPERS_PROD group\r\n- Members of that group will be able to see and edit all pipelines and applications in spinnaker.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1199", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Enable admin mode", "updated": "2019-10-21T09:15:17+11:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1198": {"assignee": "castanoa", "created": "2019-09-23T11:38:30+10:00", "creator": "castanoa", "description": "This is preventing the accounts backbase and forgerock to see the infrastructure tab.\r\nInvestigate this issue.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1198", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Investigate error: `Error from server (Forbidden): persistentvolumes is forbidden`", "updated": "2019-10-21T09:15:15+11:00", "estimate": 13.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1197": {"assignee": "castanoa", "created": "2019-09-23T11:25:21+10:00", "creator": "castanoa", "description": "Users reporting that the infrastructure tab is empty and versions are re-set to V000", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1197", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Infrastructure tab is not working", "updated": "2019-10-21T09:15:13+11:00", "estimate": 7.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1196": {"assignee": "agrawad", "created": "2019-09-23T11:07:23+10:00", "creator": "castanoa", "description": "At the moment, all of the pipelines are migrated to Cloud Sql in orca.\r\nThis card is to remove dual execution from orca.\r\n\r\n**Acceptance**\r\n- Orca pipelines history and state are stored in cloud sql.\r\n- Redis is disabled for Orca.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1196", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Remove Dual execution from orca", "updated": "2019-10-21T09:15:14+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1195": {"assignee": null, "created": "2019-09-20T15:28:14+10:00", "creator": "blackm", "description": "Opening Banking would like Spinnaker to notify on events. We have some options.\r\n\r\nThe following agreed approaches in order of desirability.\r\n # JIRA ([https://docs.armory.io/admin-guides/jira-integration])\r\n 2. SMTP\r\n 3. Splunk Alert\r\n 4. Git Sync Statuses\r\n5. Slack\r\n\r\nAcceptance:\r\n - Investigate difficulty of implementing each of the above\r\n - Timebox to 1 day\r\n - Report to team during standup to decide on next steps", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1195", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "[Spinnaker] Notifications from Spinnaker", "updated": "2019-11-06T11:36:38+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1194": {"assignee": "hidera", "created": "2019-09-20T11:48:21+10:00", "creator": "hidera", "description": "Not a particular business request, other than to keep up to date.\r\n\r\n\u00a0\r\n\r\nCurrently on 6.11.1\r\n\r\nLatest is 6.12.2\r\n\r\n\u00a0\r\n\r\nProbably a good idea to action this 1st:\u00a0https://jira.service.anz/browse/CNPS-956", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1194", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Upgrade Artifactory & helm chart", "updated": "2019-10-21T09:15:23+11:00", "estimate": 5.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1193": {"assignee": "kuzhinjr", "created": "2019-09-18T18:41:59+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1193", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate FX Android (Institutional)", "updated": "2019-10-21T09:15:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1192": {"assignee": "kuzhinjr", "created": "2019-09-18T18:39:08+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1192", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate FX iOS (Institutional)", "updated": "2019-10-21T09:15:51+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1191": {"assignee": null, "created": "2019-09-18T16:33:49+10:00", "creator": "inagakir", "description": "Jenkins is not starting on all 3 environments (dev/staging/prod).\r\n", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1191", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Closed", "summary": "Jenkins is not starting (on dev/staging/prod)", "updated": "2019-10-21T09:15:07+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1190": {"assignee": "clarker", "created": "2019-09-18T16:17:34+10:00", "creator": "clarker", "description": "DCArtifactory is hovering around 97% full. We get almost daily complaints from people unable to push artifacts.\r\n\r\nThe cleanup script needs updating to remove more files we are 99.9% sure are safe to delete.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1190", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Story Done", "summary": "Update DC  Artifactory Cleanup Script", "updated": "2019-10-21T09:15:06+11:00", "estimate": 5.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1189": {"assignee": "sarkers1", "created": "2019-09-18T15:45:11+10:00", "creator": "sarkers1", "description": "bamboo building is failing for BDS, they request help in support channel.\r\n\r\n[https://dcbamboo.service.dev:8443/browse/CNBDSU-BDSUTILS]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1189", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "Helping BDS to resolve their build issue", "updated": "2019-10-30T10:49:50+11:00", "estimate": 5.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1188": {"assignee": "sarkers1", "created": "2019-09-17T14:42:32+10:00", "creator": "sarkers1", "description": "It's had a fairly brief history.\r\n\r\nInitial commit 1/9/2015, the only build that appears to have gone to Production was a commit from 13/10/2015 (released on the 20th).\r\n\r\nSince then there's been a couple of unit tests and build script tweaks, with the latest by Patrick Dugal July 2016.\r\n\r\nLooks like Parag Vibhute (from DCX) has done most of the work on it, see\u00a0[https://dcstash.service.dev:8443/projects/FA/repos/mobile-ios/commits]\r\n\r\n1) Confirm still, they want to migrate the project to SDCP\r\n\r\n2) Their source code still inside the dcstash, guide how to migrate them to GitHub\r\n\r\n3) Confirm and if necessary then migrate their artifactory from dcatifactory to SDCP\r\n\r\n4) Guide regarding the access to SDCP tools\r\n\r\n\u00a0", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1188", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Story Done", "summary": "Migrate Find ANZ -iOS (DCX)", "updated": "2019-10-21T09:15:03+11:00", "estimate": 3.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1187": {"assignee": "castanoa", "created": "2019-09-17T08:33:21+10:00", "creator": "agarwas2", "description": "Currently timezones in Spinnaker UI are in PDT which can be quite confusing for users trying to schedule deployments / debug errors. The deck service can be configured to display times based on the users browser timezone. \r\n\r\nSee here for details on how to enable it- https://github.com/spinnaker/deck/pull/6362\r\n\r\nAcceptance Criteria - \r\n\r\nAll timezones displayed in the Spinnaker UI should be reflected in local timezone\r\n", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1187", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Enable timezones based on users browser timezone settings", "updated": "2019-10-21T09:15:33+11:00", "estimate": 2.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-1186": {"assignee": "hidera", "created": "2019-09-16T11:55:46+10:00", "creator": "hidera", "description": "{code:java}\r\nMichael Dao [11:14 AM]\r\nHello, could i please have a new repository and access token for artifactory.gcp.anz? We would like to push artifacts from cloud buildMichael Dao [11:14 AM]\r\nWe would like to generate an access token with a new username `dcx-cloudbuild` (edited) \r\nand we would to create a new gcp artifactory repository `dcx-firebase` that our username has permissions to. {code}", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1186", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Artifactory: dcx-firebase repo and access-token generation ", "updated": "2019-09-17T08:40:05+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1185": {"assignee": "dugalp", "created": "2019-09-13T08:50:42+10:00", "creator": "dugalp", "description": "- Request login access for Alfredo.GarciaJr@anz.com for SDCP Bamboo and Artifactory - UOB-31281\r\n- Grant access to Build plan and Artifactory repository - to be done by [~dugalp] once the above request is completed\r\n- Migrate any existing artifacts from https://dcartifactory.service.dev/artifactory/webapp/#/artifacts/browse/tree/General/anzpacific-ios-release to https://artifactory.service.anz/artifactory/webapp/#/artifacts/browse/tree/General/anzpacific-ios-release-local - to be done by [~macdonl4]\r\n- Validate the build plan works https://bamboo.service.anz/browse/APM-RUAPTA - to be done by Alfredo, [~dugalp] and [~lockm4]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1185", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZ Pacific iOS DC Bamboo project", "updated": "2019-10-21T09:16:31+11:00", "estimate": null, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1184": {"assignee": "horsfalt", "created": "2019-09-12T20:54:30+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1184", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZ Digital Key Android (Institutional)", "updated": "2019-10-21T09:15:50+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1183": {"assignee": "horsfalt", "created": "2019-09-12T20:54:03+10:00", "creator": "dugalp", "description": "Work with [~horsfalt]", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1183", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZ Digital Key iOS (Institutional)", "updated": "2019-10-21T09:15:49+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1182": {"assignee": "dugalp", "created": "2019-09-12T20:51:41+10:00", "creator": "dugalp", "description": "Work with [~balbod]", "fixVersions": ["1.0.0"], "issuetype": "Sub Task", "key": "CNPS-1182", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate Transactive Global Android (Institutional)", "updated": "2019-09-17T08:39:25+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1181": {"assignee": "dugalp", "created": "2019-09-12T20:51:05+10:00", "creator": "dugalp", "description": "Work with [~balbod]", "fixVersions": ["1.0.0"], "issuetype": "Sub Task", "key": "CNPS-1181", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate Transactive Global iOS (Institutional)", "updated": "2019-09-17T08:39:24+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1180": {"assignee": "kuzhinjr", "created": "2019-09-12T20:45:58+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1180", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate Broker Portal (Home Lending)", "updated": "2019-10-21T09:16:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1179": {"assignee": "dugalp", "created": "2019-09-12T20:36:07+10:00", "creator": "dugalp", "description": "https://dcbamboo.service.dev:8443/browse/PC\r\n\r\n* Some plans are owned by Enterprise Mobility, others by DCX\r\n* Work with [~sharmap3] to migrate the relevant ones for EM", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1179", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate \"Platform - CI\" (Enterprise Mobility)", "updated": "2019-10-21T09:16:22+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1178": {"assignee": "kuzhinjr", "created": "2019-09-12T20:28:01+10:00", "creator": "dugalp", "description": "- Work with [~emerya2] to migrate the build plan *CMP - Swagger CodeGen - Alpha and Branches (iOS and Android)*\r\n- Work with [~oenningj] to migrate the other build plans", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1178", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate CMP (DCX)", "updated": "2019-10-21T09:15:02+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1177": {"assignee": "clarker", "created": "2019-09-12T19:49:38+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1177", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Closed", "summary": "Migrate CS - Infra (Cloud Services)", "updated": "2019-10-21T09:15:32+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1176": {"assignee": "clarker", "created": "2019-09-12T19:48:37+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1176", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate CS - CDE (Cloud Services)", "updated": "2019-10-21T09:15:31+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1175": {"assignee": "sarkers1", "created": "2019-09-12T19:39:36+10:00", "creator": "dugalp", "description": "ANZx team want to migrate their repo to GCP to use the cloud build.\r\n\r\n\u00a0\r\n\r\nAcceptance Criteria:-\r\n\r\n1) Migrate the ANZdesignsytem repo from DCartifactory to GCP Artifactory\r\n2) Guide them to get the access token for GCP artifactory", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1175", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Closed", "summary": "Migrate ANZ Design System (ANZx)", "updated": "2019-10-21T09:16:09+11:00", "estimate": 1.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1174": {"assignee": "sarkers1", "created": "2019-09-12T19:37:51+10:00", "creator": "dugalp", "description": "# -Dedicate Bamboo agents to iOS project - *Done* by [~dugalp] or [~macdonl4] - mobilebuild01 to mobilebuild07-\r\n # -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n # -Onboard users to Bamboo and Artifactory - *Done* by [~pidugurv]-\r\n # -Create a service account in the GLOBAL domain (Active Directory) *Done* by [~pidugurv] to accp&cwin@anz.com through ServiceNow-\r\n # -Migrate build Android plans manually - to be done by- [~pidugurv]\r\n # -Create Artifactory repositories and grant permissions including service account - request to pending action from SDCP team - SDCP-41495-\r\n # -Migrate existing Artifactory artifacts with migration script - Done by [~macdonl4] or [~clarker] (depends on repo creation request)-\r\n ", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1174", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate Shield Android (Customer Auth Tribe)", "updated": "2019-10-21T09:16:06+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1173": {"assignee": "turnerm6", "created": "2019-09-12T10:54:16+10:00", "creator": "dugalp", "description": "# -Onboard users to Bamboo and Artifactory - *Done* by [~dugalp]-\r\n# -Dedicate Bamboo agents to iOS project - *Done* by [~dugalp] or [~macdonl4] - mobilebuild01 to mobilebuild07 and macau01x0025 to macau01x0075-\r\n# -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room and macau01x0025 to macau01x0075 in ANZ Data Centre-\r\n# -Create a service account in the GLOBAL domain (Active Directory) to accp&cwin@anz.com through ServiceNow - *Done* by [~dugalp]-\r\n# -Add the service account to the GHE organisation with Contributor access -  *Done* by [~dugalp]-\r\n# -Migrate build/deployment Android plans manually - Done-\r\n# -Create Artifactory repositories and grant permissions including service account (anznext-android)-\r\n# -Migrate existing Artifactory artifacts with migration script-\r\n# -Update jobs with service account, correct order, requirement in jobs should be set to *Xcode-10.2.1*-\r\n# -Test build/deployment plans in SDCP Bamboo/Artifactory-\r\n# -Update the repository configuration in Bamboo build plans with service account-\r\n# -Disable HockeyApp versions-", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1173", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZ App Android (DCX)", "updated": "2019-10-21T09:15:01+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1172": {"assignee": "sundark6", "created": "2019-09-12T10:51:27+10:00", "creator": "dugalp", "description": "Already done:\r\n\r\n# -Onboard users to Bamboo and Artifactory - *Done* by [~dugalp]-\r\n# -Dedicate Bamboo agents to iOS project - mobilebuild01 to mobilebuild07 and macau01x0025 to macau01x0076 - *Done* by [~dugalp] or [~macdonl4]-\r\n# -Migrate all Bamboo build agents - mobilebuild01 to mobilebuild07 - 3B.20 locked room and macau01x0025 to macau01x0075 in ANZ Data Centre *Done* by [~dugalp]-\r\n# -Create a service account in the GLOBAL domain (Active Directory) to accp&cwin@anz.com through ServiceNow - *Done* by [~dugalp]-\r\n# -Add the service account to the GHE organisation with Contributor access -  *Done* by [~dugalp]-\r\n# -Migrate the following build plan into project *ANZ App iOS*, https://dcbamboo.service.dev:8443/browse/NEXT-ANCL which requires a Mac agent (mobilebuild01-07), set *Xcode-10.2.1* as a requirement capability  - *Done* by [~clarker]-\r\n# -Verify the Card.io build plan was migrated by [~clarker] - *Done* by [~mistrys] (DCX)-\r\n# -Create Artifactory repositories and grant permissions including service account - Done-\r\n# -Migrate remaining build/deployment iOS plans manually- - Done\r\n", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1172", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZ App iOS (DCX)", "updated": "2019-10-21T09:15:00+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1171": {"assignee": "sarkers1", "created": "2019-09-12T10:35:08+10:00", "creator": "dugalp", "description": "# -Onboard users to Bamboo and Artifactory - *Done* by [~dugalp]-\r\n# -Dedicate Bamboo agents to iOS project - *Done* by [~dugalp] or [~macdonl4] - mobilebuild01 to mobilebuild07-\r\n# -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n# -Create a service account in the GLOBAL domain (Active Directory) - *Done* by [~pidugurv] to accp&cwin@anz.com through ServiceNow-\r\n", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1171", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate Shield iOS (Customer Auth Tribe)", "updated": "2019-10-21T09:16:05+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1170": {"assignee": "dugalp", "created": "2019-09-12T10:34:48+10:00", "creator": "dugalp", "description": "# -Onboard users to Bamboo and Artifactory - *Done* by [~dugalp]-\r\n# -Dedicate Bamboo agents to iOS project - *Done* by [~dugalp] or [~macdonl4] - mobilebuild01 to mobilebuild07-\r\n# -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n# -Create a service account in the GLOBAL domain (Active Directory) - request to be done by [~pidugurv] to accp&cwin@anz.com through ServiceNow-\r\n# -Migrate build/deployment iOS plans manually - to be done by [~pidugurv]-\r\n# -Create Artifactory repositories and grant permissions including service account - request to be done by [~pidugurv] to SDCP@anz.com through Jira-\r\n# -Migrate existing Artifactory artifacts with migration script - to be done by [~macdonl4] or [~clarker] (depends on repo creation request)-\r\n# -Add the service account to the GHE organisation with Contributor access -  to be done by by [~pidugurv] (depends on account creation request)-\r\n# -Update jobs with service account, correct order, requirement in jobs should be set to *Xcode-10.2.1* - to be done by [~pidugurv]-\r\n# -Test build/deployment plans in SDCP Bamboo/Artifactory - to be done by by [~pidugurv]-\r\n# -Update the repository configuration in Bamboo build plans with service account - to be done by [~pidugurv]-\r\n# Disable HockeyApp versions - to be done by [~pidugurv]", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1170", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZID Android (Customer Auth Tribe)", "updated": "2019-10-21T09:16:04+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1169": {"assignee": "dugalp", "created": "2019-09-12T10:31:44+10:00", "creator": "dugalp", "description": "# -Onboard users to Bamboo and Artifactory - *Done* by [~dugalp]-\r\n# -Dedicate Bamboo agents to iOS project - *Done* by [~dugalp] or [~macdonl4] - mobilebuild01 to mobilebuild07-\r\n# -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n# -Create a service account in the GLOBAL domain (Active Directory) - request to be done by [~pidugurv] to accp&cwin@anz.com through ServiceNow-\r\n# -Migrate build/deployment iOS plans manually - to be done by [~pidugurv]-\r\n# -Create Artifactory repositories and grant permissions including service account - request to be done by [~pidugurv] to SDCP@anz.com through Jira-\r\n# -Migrate existing Artifactory artifacts with migration script - to be done by [~macdonl4] or [~clarker] (depends on repo creation request)-\r\n# -Add the service account to the GHE organisation with Contributor access -  to be done by by [~pidugurv] (depends on account creation request)-\r\n# -Update jobs with service account, correct order, requirement in jobs should be set to *Xcode-10.2.1* - to be done by [~pidugurv]-\r\n# -Test build/deployment plans in SDCP Bamboo/Artifactory - to be done by by [~pidugurv]-\r\n# -Update the repository configuration in Bamboo build plans with service account - to be done by [~pidugurv]-\r\n# -Disable HockeyApp versions - to be done by [~pidugurv]-", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1169", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZID iOS (Customer Auth Tribe)", "updated": "2019-10-21T09:16:03+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1168": {"assignee": "dugalp", "created": "2019-09-12T09:33:50+10:00", "creator": "dugalp", "description": "# Onboard -users to Bamboo and Artifactory - *Done* (16 users) - UOB-30140-\r\n # -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n # -Create a service account in the GLOBAL domain (Active Directory) - *Done* (Using the existing service account ) by [~sharmap3] to accp&cwin@anz.com through ServiceNow-\r\n # -Migrate build/deployment iOS plans with migration script (project key: VN) - to be done by- [~macdonl4]\r\n # -Dedicate Bamboo agents to iOS project - to be done by- [~dugalp] -or- [~macdonl4] -- mobilebuild01 to mobilebuild07-\r\n # -Create Artifactory repositories and grant permissions including service account - request to be done by [~sharmap3] to SDCP@anz.com through Jira *Done*-\r\n # -Migrate existing Artifactory artifacts with migration script - to be done by- [~macdonl4]\r\n # -Add the service account to the GHE organisation with Contributor access - to be done by [~sharmap3] and [~gans5] (depends on account creation request) *Done*-\r\n # Update jobs with service account, correct order, requirement in jobs should be set to *Xcode-10.2.1* - to be done by [~sharmap3]\r\n # Test build/deployment plans in SDCP Bamboo/Artifactory - to be done by [~sharmap3]\r\n # Update the repository configuration in Bamboo build plans with service account - to be done by [~sharmap3]\r\n # Disable HockeyApp versions - to be done by [~sharmap3]", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1168", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate VoiceNotes iOS (Enterprise Mobility)", "updated": "2019-10-21T09:16:18+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1166": {"assignee": "macdonl4", "created": "2019-09-12T09:32:46+10:00", "creator": "dugalp", "description": "Done:\r\n # -Onboard users to Bamboo and Artifactory- - *Done* (16 users) - UOB-30140\r\n # -Migrate all Bamboo build agents- - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room\r\n # -Create a service account in the GLOBAL domain (Active Directory) - *Done* (Using the existing service account) by [~sharmap3] to accp&cwin@anz.com through ServiceNow-\r\n # -Create Artifactory repositories and grant permissions including service account - *Done* by [~sharmap3] to SDCP@anz.com through Jira-\r\n # -Migrate build/deployment iOS plans with migration script (project key: AZR) - Done by-- [~dugalp]\r\n # -Dedicate Bamboo agents to iOS project - mobilebuild01 to mobilebuild07- - Done by- [~dugalp]\r\n # -Add the service account to the GHE organisation with Contributor access - to be done by [~sharmap3] and [~gans5] (depends on account creation request) *Done*-\r\n # -Migrate existing Artifactory artifacts with migration script - to be done by [~macdonl4]\u00a0*Done*-\r\n # -Update jobs with service account, correct order, requirement in jobs should be set to *Xcode-10.2.1* - to be done by [~sharmap3]-\r\n # -Test build/deployment plans in SDCP Bamboo/Artifactory - to be done by [~sharmap3]-**\r\n# Update the repository configuration in Bamboo build plans with service account - to be done by [~sharmap3]\r\n\r\nTo be done:\r\n # Disable HockeyApp versions - to be done by [~sharmap3]", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1166", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate A-Z Review and Midmarket iOS (Enterprise Mobility)", "updated": "2019-10-21T09:16:17+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1165": {"assignee": null, "created": "2019-09-11T23:57:26+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nDetermine if shielded VMs offer advantages and associated costs ($ and operational)\n\n*Acceptance Criteria*\n* design doc explaining findings and recommendation", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1165", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Explore shielded VMs for node pools", "updated": "2019-09-12T22:14:36+10:00", "estimate": 3.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1164": {"assignee": null, "created": "2019-09-11T23:57:17+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nUse GKE pod sec policies to explicitly allow only legitimate workloads/processes to run on the cluster\n\n*Acceptance Criteria*\n* design doc laying out applicable pod security policies needed \n* security reviewed", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1164", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Implement pod security policies", "updated": "2019-09-12T22:14:34+10:00", "estimate": 5.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1163": {"assignee": null, "created": "2019-09-11T23:57:09+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nUse GKE network policies to explicitly allow ingress and egress rules\n\n*Acceptance Criteria*\n* design doc laying out network policies needed \n* security reviewed", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1163", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Implement network policies", "updated": "2019-09-12T22:14:32+10:00", "estimate": 5.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1162": {"assignee": null, "created": "2019-09-11T23:57:01+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nEvaluate usefullness of Istio for CNP capabilities\n\nSpeak with others teams using Istio to gather experiences and learnings\n\n*Acceptance Criteria*\n* design doc laying out pros and cons", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1162", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Spike if Istio is useful for EX cluster", "updated": "2019-09-12T22:14:30+10:00", "estimate": 5.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1161": {"assignee": null, "created": "2019-09-11T23:56:52+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nUse google groups for RBAC in GKE cluster\nhttps://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control#google-groups-for-gke\n\n*Acceptance Criteria*\n* successfully upgraded dev cluster to required version", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1161", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Integrate google groups to manage RBAC for GKE cluster", "updated": "2019-09-17T08:40:04+10:00", "estimate": 3.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1160": {"assignee": null, "created": "2019-09-11T23:56:49+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nSpike workload identity as a means of managing IAM \n\nhttps://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity\n\n*Acceptance Criteria*\n* Design doc explaining usefullness and usability of workload identity", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1160", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Spike workload identity", "updated": "2019-09-12T22:14:29+10:00", "estimate": 3.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1159": {"assignee": "hidera", "created": "2019-09-11T23:56:44+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nDetermine if node pools are needed depending on different machine type needs\n\n*Acceptance Criteria*\n* ADR captured\n* Nood pool design doc created and engineering review done", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1159", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story in Progress", "summary": "Node pool design", "updated": "2019-12-02T13:52:08+11:00", "estimate": 3.0, "epic_ref": "CLS-517", "epic_name": "", "diff_to_upstream": []}, "CNPS-1158": {"assignee": null, "created": "2019-09-11T23:56:40+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nMigrate GKE cluster to use module from GCP squad\n\n*Acceptance Criteria*\n* successfully using GCP squad terraform module to manage cluster resource\n* Use private cluster with no public master IP", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1158", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Use GKE module from GCP squad", "updated": "2019-09-12T22:14:25+10:00", "estimate": 5.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1157": {"assignee": null, "created": "2019-09-11T23:56:36+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\nUpgrade ex-services-dev GKE cluster master and nodes to to 1.14.3-gke.11\n\n*Acceptance Criteria*\n* successfully upgraded dev cluster to required version", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1157", "labels": ["Ops&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Upgrade dev cluster master version to 1.14.3", "updated": "2019-09-12T22:14:23+10:00", "estimate": 3.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-1156": {"assignee": "agarwas2", "created": "2019-09-11T22:19:40+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Dependencies*\r\n\r\nThe following BX tribe engineers will assist with migration to a different solution first before deleting oAuth codes for Jenkins.\r\n\r\n\u2022\u00a0[~hernandn]\u00a0\r\n\r\n\u2022\u00a0[~cherukat]\r\n\r\n\u2022\u00a0[~ebswortb]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1156", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Deactivate Configuration Item and update Troux Record for Jenkins", "updated": "2019-10-24T14:36:07+11:00", "estimate": 3.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1155": {"assignee": "hidera", "created": "2019-09-11T22:18:48+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Dependencies*\r\n\r\nThe following BX tribe engineers will assist with migration to a different solution first before deleting oAuth codes for Jenkins.\r\n\r\n\u2022\u00a0[~hernandn]\u00a0\r\n\r\n\u2022\u00a0[~cherukat]\r\n\r\n\u2022\u00a0[~ebswortb]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1155", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Revoke digicert certificates for Jenkins", "updated": "2019-10-21T09:15:27+11:00", "estimate": 1.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1154": {"assignee": "hidera", "created": "2019-09-11T22:06:19+10:00", "creator": "agarwas2", "description": "Once spinnaker has been upgraded to 1.16.0 BX tribe will have a way to migrate off Jenkins to Kubernetes jobs. This story is to track the migration effort and catch all for any tasks related to helping BX migrate off Jenkins", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1154", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Migrate BX jenkins jobs to kubernetes jobs ", "updated": "2019-10-21T09:16:27+11:00", "estimate": 3.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1153": {"assignee": null, "created": "2019-09-11T19:21:08+10:00", "creator": "agarwas2", "description": "By default the front50 service uses GCS for storage. We should use private sql instead for storage so we avoid eventual consistency issues as detailed in the link below\r\n\r\n[https://www.spinnaker.io/setup/productionize/persistence/front50-sql/]\r\n\r\n*Acceptance*\r\n * front50 is pointing to a private sql database.\r\n * The sql database is created as part of the infrastructure build (terraform)\r\n * Correct access levels are given to spinnaker for the mysql instance.\r\n * The database is set up as part of spinnaker installation.", "fixVersions": ["PI6"], "issuetype": "Story", "key": "CNPS-1153", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Externalise front50 service storage to MySQL", "updated": "2019-11-21T10:28:52+11:00", "estimate": 5.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1151": {"assignee": "macdonl4", "created": "2019-09-11T16:32:45+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1151", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate other EM projects (Enterprise Mobility)", "updated": "2019-10-21T09:16:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1150": {"assignee": "dugalp", "created": "2019-09-11T16:27:22+10:00", "creator": "dugalp", "description": "# -Onboard users to Bamboo and Artifactory - *Done* (16 users) - UOB-30140-\r\n # -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n # -Create a service account in the GLOBAL domain (Active Directory) - *Done* (Using the existing service account )by [~sharmap3] to accp&cwin@anz.com through ServiceNow-\r\n # -Create Artifactory repositories and grant permissions including service account - request *Done* by [~sharmap3] to SDCP@anz.com through Jira-\r\n # -Migrate existing Artifactory artifacts with migration script - *Done* by [~macdonl4] (fiat-ios-release repo in dc to be migrated to fiat-releases-local in sdcp)-\r\n # -Add the service account to the GHE organisation with Contributor access - *Done* by [~wanga12]-\r\n # -Migrate build/deployment iOS plans with migration script (project key: FI) - *Done* by [~macdonl4]-\r\n # -Dedicate Bamboo agents to iOS project to be done by [~dugalp] or [~macdonl4] - mobilebuild01 to mobilebuild07-\r\n # -Update jobs with repository, service account, steps, requirement in jobs should be set to *Xcode-10.2.1* - *Done* by [~sharmap3] and [~wanga12]-\r\n # -Test build/deployment plans in SDCP Bamboo/Artifactory - to be done by [~sharmap3] and [~wanga12]-\r\n # -Disable HockeyApp versions - to be done by [~sharmap3]-", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1150", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate FIAT iOS (BX & Enterprise Mobility)", "updated": "2019-10-21T09:16:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1149": {"assignee": "sarkers1", "created": "2019-09-11T16:27:01+10:00", "creator": "dugalp", "description": "This app is deployed by the Enterprise Mobility team to Airwatch users for the Home Lending tribe.\r\n\r\nDevelopers are periodically seconded from DCX (Digital Customer Experience).\r\n\r\n# -Onboard users to Bamboo and Artifactory - *Done* (16 users) - UOB-30140-\r\n # -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n # -Create a service account in the GLOBAL domain (Active Directory) - *Done* (Using the existing service account )by [~sharmap3] to accp&cwin@anz.com through ServiceNow-\r\n # -Migrate build/deployment iOS plans with migration script (project key: HI) - *Done* by [~macdonl4]-\r\n # -Dedicate Bamboo agents to iOS project - *Done* by [~dugalp] [~macdonl4] -- mobilebuild01 to mobilebuild07-\r\n # -Create Artifactory repositories and grant permissions including service account - request to be done by [~sharmap3] to SDCP@anz.com through Jira-\r\n # -Migrate existing Artifactory artifacts (holmes-ios-release --> holmes-releases-local) with migration script - to be done by [~macdonl4]-\r\n # -Add the service account to the GHE organisation with Contributor access - to be done by [~sharmap3] and [~gans5] (depends on account creation request) *Done*-\r\n ", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1149", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate Holmes iOS (Enterprise Mobility)", "updated": "2019-10-21T09:16:20+11:00", "estimate": 5.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1148": {"assignee": "sarkers1", "created": "2019-09-11T11:55:26+10:00", "creator": "dugalp", "description": "# Onboard users to Bamboo and Artifactory\r\n# Create Artifactory repositories and grant permissions\r\n# Migrate existing Artifactory artifacts\r\n# Migrate build/deployment plans\r\n# Migrate all Bamboo build agents and dedicate them to project(s)\r\n\r\nWork with [~zhangju], [~zhaoj6] and [~jiangl5]", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1148", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Closed", "summary": "Migrate CSP - TPD Private Job (DSE deployment project)", "updated": "2019-10-21T09:15:40+11:00", "estimate": 1.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1147": {"assignee": "kuzhinjr", "created": "2019-09-11T11:42:56+10:00", "creator": "dugalp", "description": "# Onboard users to Bamboo and Artifactory\r\n# Create Artifactory repositories and grant permissions\r\n# Migrate existing Artifactory artifacts\r\n# Migrate build/deployment plans\r\n# Migrate all Bamboo build agents and dedicate them to project(s)\r\n\r\nWork with [~zhaoj6], [~jiangl5], and [~zhangju] for above tasks", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1147", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Closed", "summary": "Migrate CSP - TPD UI (DSE Project)", "updated": "2019-10-21T09:15:43+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1146": {"assignee": "kuzhinjr", "created": "2019-09-11T11:40:22+10:00", "creator": "dugalp", "description": "# Onboard users to Bamboo and Artifactory \r\n# Create Artifactory repositories and grant permissions \r\n# Migrate existing Artifactory artifacts\r\n# Migrate build/deployment plans\r\n# Migrate all Bamboo build agents and dedicate them to project(s)\r\n\r\nWork with [~zhaoj6], [~jiangl5], and [~zhangju] for above tasks", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1146", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Closed", "summary": "Migrate CSP - TPD Core (DSE project)", "updated": "2019-10-21T09:15:42+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1145": {"assignee": "macdonl4", "created": "2019-09-11T11:25:27+10:00", "creator": "macdonl4", "description": "The repo\u00a0[https://dcartifactory.service.dev/artifactory/plcc-csp-releases|https://dcartifactory.service.dev/artifactory/plcc-csp-releases/plcc/spui]/ is necessary for the migration of the CS project.", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1145", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Closed", "summary": "Migrate artifacts required for CS project", "updated": "2019-10-21T09:15:39+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1144": {"assignee": "macdonl4", "created": "2019-09-11T11:24:10+10:00", "creator": "macdonl4", "description": "The following plans need to migrated from the CS project:\r\n * +[001 - CI - PLCC Status UI - Sonarqube and Fortify|https://dcbamboo.service.dev:8443/browse/CS-R33]+\r\n\r\n\u00a0\r\n\r\n * +[000 - Build - Master - PLCC Status UI|https://dcbamboo.service.dev:8443/browse/CS-R34]+\r\n\r\n\u00a0\r\n\r\n * +[000 - CI - PLCC Status UI|https://dcbamboo.service.dev:8443/browse/CS-R32]+", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1144", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Closed", "summary": "Migrate required CS plans", "updated": "2019-10-21T09:15:38+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1143": {"assignee": "blackm", "created": "2019-09-11T11:22:30+10:00", "creator": "macdonl4", "description": "All 3 plans in [CPA|[https://dcbamboo.service.dev:8443/browse/CPA]] need to be migrated.", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1143", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Closed", "summary": "Migrate all CPA plans", "updated": "2019-10-21T09:15:41+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1142": {"assignee": "clarker", "created": "2019-09-11T11:09:58+10:00", "creator": "dugalp", "description": "Card.io is used for a few purposes: \r\n* Scanning a physical credit card inside ANZ App for activation of payment card\r\n* Apple Pay payment card provisioning \r\n\r\nAlready Done:\r\n* Data migration dcartifactory - anznext-android-libs -> SDCP Artifactory - anzapp-android-lib-local\r\n* The following build plan requires PBC agent with Docker\r\n* https://dcbamboo.service.dev:8443/browse/ANC-ANCDA - check with [~yangj15]\r\n\r\n\r\n", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1142", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate ANZ App Card.io (DCX ANZ App library)", "updated": "2019-10-21T09:14:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1141": {"assignee": "kuzhinjr", "created": "2019-09-11T10:58:39+10:00", "creator": "castanoa", "description": "Cloud sql for spinnaker is running on a single zone. To enable HA we need to set up a failover db and configure it.\r\n\r\nRefer to:\r\n [https://cloud.google.com/sql/docs/mysql/high-availability]\r\n [https://cloud.google.com/sql/docs/mysql/configure-ha]\r\n\r\n*Acceptance*\r\n - Spinnaker CloudSQL instance has \"high availability\" enabled\r\n - Failover option is enabled in GCP Console\r\n - Spinnaker continues to work as expected\r\n\r\n{{*Testing*}}\r\n {{1. Run `gcloud sql instances describe spinnaker-c808`:}}\r\n\r\n{{backendType: SECOND_GEN}}\r\n {{\u00a0connectionName: anz-ex-services-dev-32c9ea:australia-southeast1:spinnaker-c808}}\r\n {{\u00a0databaseVersion: MYSQL_5_7}}\r\n {{\u00a0etag: 8fd8e5341062ac61dbedf6794c50948bf509dcc6254edcf6690c913562f213f4}}\r\n {{\u00a0failoverReplica:}}\r\n \u00a0{{\u00a0 available: true}}\r\n\r\n...\r\n\r\n{{settings:}}\r\n {{\u00a0 activationPolicy: ALWAYS}}\r\n {{\u00a0 availabilityType: REGIONAL}}\r\n {{\u00a0 backupConfiguration:}}\r\n {{\u00a0 \u00a0 binaryLogEnabled: true}}\r\n {{\u00a0 \u00a0 enabled: true}}\r\n {{\u00a0 \u00a0 kind: sql#backupConfiguration}}\r\n {{\u00a0 \u00a0 startTime: 10:00}}\r\n\r\n\u00a0\r\n\r\n{{2. Verified Spinnaker continues to work correctly.}}\r\n\r\n\u00a0\r\n\r\n{{3. Run `gcloud sql instances failover spinnaker-c808`}}\r\n\r\n\r\n{{Failover will be initiated. Existing connections to the master}}\r\n{{instance will break and no new connection can be established during}}\r\n{{the failover.}}\r\n\r\n{{Do you want to continue (Y/n)? Y}}\r\n{{Failing over Cloud SQL instance...done.}}\r\n\r\n\u00a0\r\n\r\n{{4. Verified Spinnaker continues to work correctly.}}\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1141", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Enable HA configuration for Spinnaker Cloud SQL (mysql) DB", "updated": "2019-10-23T14:42:01+11:00", "estimate": 5.0, "epic_ref": "CNPS-1044", "epic_name": "", "diff_to_upstream": []}, "CNPS-1140": {"assignee": "hidera", "created": "2019-09-10T17:15:16+10:00", "creator": "hidera", "description": "as a workaround terraform state in prod is being written to cx/bx.new instead of cx/bx due to an initial implementation error.\r\n\r\n\u00a0\r\n\r\nWe should:\r\n * delete old state file in cx/bx\r\n * delete new state file in cx/bx.new\r\n * update tf_import.sh file that imports terraform initial state\r\n * point prefix to 'cx/bx' instead of 'cx/bx.new'\r\n * run cloudbuild job with\u00a0_TERRAFORM_IMPORT_\u00a0substition values set to 1 (then change it back to 0)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1140", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Backlog", "summary": "Fix up bucket workaround in prod Artifactory Terraform", "updated": "2019-09-23T13:50:39+10:00", "estimate": 1.0, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-1139": {"assignee": "clarker", "created": "2019-09-10T13:40:22+10:00", "creator": "dugalp", "description": "Project in DCBamboo: https://dcbamboo.service.dev:8443/browse/BFF\r\n\r\n# -Onboard users to Bamboo and Artifactory for ANZ APP - Java (CSM & THA)-\r\n# -Create Artifactory repositories and grant permissions for ANZ APP - Java (CSM & THA)-\r\n# -Migrate existing Artifactory artifacts for ANZ APP - Java (CSM & THA) (Done by [~macdonl4])-\r\n# -Migrate build plans for ANZ APP - Java (CSM & THA) (done by [~clarker])-\r\n# -Migrate all Bamboo build agents and dedicate them to project(s) for ANZ APP - Java (CSM & THA)-\r\n\r\nMain Point of Contact for CSM & THA migration:\r\n[~jacksoe4]\r\n\r\nCSM - [~sandsl]\r\nhttps://dcbamboo.service.dev:8443/browse/BFF-CV2D\r\nhttps://dcbamboo.service.dev:8443/browse/BFF-CVDTA\r\nhttps://dcbamboo.service.dev:8443/browse/BFF-DR22TA\r\n\r\nAll migrated to  https://bamboo.service.anz/browse/AAJ confirmed by [~sandsl] , [~jacksoe4]\r\n\r\nTHA - [~hamana] [~dwiveds2]\r\nhttps://dcbamboo.service.dev:8443/browse/BFF-R7\r\nhttps://dcbamboo.service.dev:8443/browse/BFF-R5\r\n\r\nAll migrated to  https://bamboo.service.anz/browse/AAJ confirmed by [~hamana] , [~dwiveds2]", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1139", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate CSM & THA (DCX backend Java apps)", "updated": "2019-10-21T09:14:58+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1137": {"assignee": "macdonl4", "created": "2019-09-10T13:10:39+10:00", "creator": "dugalp", "description": "# -Onboard users to Bamboo and Artifactory - *Done* (16 users) - UOB-30140-\r\n # -Migrate all Bamboo build agents - *Done* by [~dugalp] - mobilebuild01 to mobilebuild07 - 3B.20 locked room-\r\n # -Migrate build/deployment iOS plans with migration script - *Done* by [~macdonl4]-\r\n # -Dedicate Bamboo agents to iOS project (project key: MI) with migration script *Done* by [~dugalp] - mobilebuild01 to mobilebuild07-\r\n # -Create a service account in the GLOBAL domain (Active Directory) - *Done* (Using the existing service account )by [~sharmap3] to accp&cwin@anz.com through ServiceNow-\r\n # -Create Artifactory repositories and grant permissions including service account - request *Done* by [~sharmap3] to SDCP@anz.com through Jira-\r\n # -Migrate build/deployment Android plans (project key MAA) with migration script - to be done by- [~macdonl4]\r\n # -Migrate existing Artifactory artifacts with migration script - to be done by- [~macdonl4]\r\n # -Add the service account to the GHE organisation with Contributor access - to be done by [~sharmap3] and [~gans5] (depends on account creation request) *Done*-\r\n # -Dedicate Bamboo agents to Android project - to be done by- [~dugalp] \u2013 mobilebuild01 to mobilebuild07 (depends on plan migration)-\r\n # -Update jobs with service account, correct order, requirement in jobs should be set to *Xcode-10.2.1* - to be done by- [~sharmap3]\r\n # -Test build/deployment plans in SDCP Bamboo/Artifactory - to be done by- [~sharmap3]\r\n # -Update the repository configuration in Bamboo build plans with service account - to be done by- [~sharmap3]", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1137", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate me@anz iOS and Android (Enterprise Mobility)", "updated": "2019-10-21T09:16:19+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1134": {"assignee": "dugalp", "created": "2019-09-10T13:09:24+10:00", "creator": "dugalp", "description": null, "fixVersions": ["1.0.0"], "issuetype": "Sub Task", "key": "CNPS-1134", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Onboard users to Bamboo and Artifactory for all Enterprise Mobility Projects", "updated": "2019-09-17T08:39:23+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1129": {"assignee": "dugalp", "created": "2019-09-10T12:30:59+10:00", "creator": "dugalp", "description": "- Test migration of 1 agent\r\n - Migrate rest of the agents once the first agent is successful and plans are migrated\r\n - Dependent on [~jayachab] to update the wrapper.conf\u00a0\r\n - [~dugalp] can authorise the agent to connect and dedicate it to the SDCP Bamboo project", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1129", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate all Bamboo build agents for Fusion (Apple Pay)", "updated": "2019-10-21T09:15:57+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1128": {"assignee": "sarkers1", "created": "2019-09-10T12:28:23+10:00", "creator": "dugalp", "description": "- Copy existing contents from DCBamboo to SDCP Bamboo\r\n- Verify the build is successful and uploaded correctly to SDCP Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Sub Task", "key": "CNPS-1128", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate build plans for Fusion (Apple Pay)", "updated": "2019-10-21T09:15:56+11:00", "estimate": 3.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1127": {"assignee": "dugalp", "created": "2019-09-10T12:15:54+10:00", "creator": "dugalp", "description": "* Make request to SDCP Support team in Jira to on-board Fusion users\r\n * Grant permissions to Fusion users (admins and developers)\r\n * Grant deploy permission to Fusion service account (requires service account on-boarding)", "fixVersions": ["1.0.0"], "issuetype": "Sub Task", "key": "CNPS-1127", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Onboard users to SDCP Bamboo and SDCP Artifactory for Fusion (Apple Pay)", "updated": "2019-09-17T08:39:26+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1126": {"assignee": "dugalp", "created": "2019-09-10T12:03:20+10:00", "creator": "dugalp", "description": "Migrate data from existing repositories\u00a0to new ones in SDCP Artifactory\r\n\r\nFrom https://dcartifactory.service.dev/artifactory\r\nfusion-libs\r\nfusion-release\r\nfusion-snapshots\r\n\r\nTo https://artifactory.service.anz/artifactory \u00a0\r\nfusion-libs-local\r\nfusion-release-local\r\nfusion-snapshots-local", "fixVersions": ["1.0.0"], "issuetype": "Sub Task", "key": "CNPS-1126", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Migrate Artifactory artifacts for Fusion (Apple Pay)", "updated": "2019-09-17T08:39:25+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1125": {"assignee": "shahj3", "created": "2019-09-10T08:58:27+10:00", "creator": "headenj1", "description": "Previously we have had a Team Principles & Practises session to agree how we work as a team. This occurred before most of the current team joined. This story is to arrange another session\u00a0\r\n\r\nAcceptance Criteria:\r\n # Session booked with team\r\n # Findings documented in confluence or other location", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1125", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Arrange Team Principles & Practises session", "updated": "2019-10-21T09:14:30+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1124": {"assignee": "agarwas2", "created": "2019-09-10T08:50:15+10:00", "creator": "headenj1", "description": "Arrange a session to discuss & agree best practises for pairing\r\n\r\n\u00a0\r\n\r\nAcceptance criteria:\r\n # Team session arranged\r\n # Agreed minutes of session distributed to team", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1124", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "Facilitate team best pairing practises session", "updated": "2019-10-21T09:14:36+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1123": {"assignee": "agrawad", "created": "2019-09-09T14:55:52+10:00", "creator": "headenj1", "description": "The json keys for Fiat & the main service accounts are being stored unencrypted in the halyard-config storage bucket. These should be encrypted\r\n\r\n\u00a0\r\n\r\nAcceptance Criteria:\r\n # The keys are encrypted at rest\r\n # The unencrypted keys are removed\u00a0\r\n # The documentation for how to create the keys has been updated\r\n # The service account keys are rotated (?optional?)", "fixVersions": ["1.1.0"], "issuetype": "Task", "key": "CNPS-1123", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "headenj1", "status": "Done", "summary": "Encrypt the Spinnaker Fiat & main SA keys ", "updated": "2019-10-28T15:00:54+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-1122": {"assignee": null, "created": "2019-09-09T14:32:13+10:00", "creator": "castanoa", "description": "Spinnaker private sql connection for orca is configured in the `additionalProfileConfigMaps` key of `values.yaml`.\r\n\r\nThe helm chart puts this configuration in a config map without encrypting. \r\n\r\nFind a way to encrypt or hide the sql password so it won't be visible to everyone.\r\n\r\n*PENDING ACCEPTANCE*", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1122", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Backlog", "summary": "[Spinnaker] Encrypt PrivateSql password", "updated": "2019-10-30T14:41:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1121": {"assignee": null, "created": "2019-09-06T15:25:30+10:00", "creator": "sarkers1", "description": "*Issue/Problem*\r\nAs the Cloud Platform Native Tooling squad need to set policy, based on ANZ IS standards, for twistlock vulnerability scanning so that users of the platform are aware of policy violations and can take appropriate action \r\n\r\nConsiderations:\r\n * Work with Cloud Native Assurance squad to run workshop to determine policy set\r\n* Refer to twistlock operationalisation guide (specifically pages 10-14) for some great advice on how to turn on the controls progressively\r\n* Identify candidate workload for testing initial policy set\r\n\r\n*Acceptance Criteria*\r\n * Container vulnerability management policy v1 is defined and documented\r\n * It is implemented for identified workload to gather feedaback and evolve control set\r\n\r\n*Dependency*\r\n\r\nCloud Native Assurance team for determining policy set", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1121", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Governance - Define vulnerability policy MVP", "updated": "2019-09-12T22:31:06+10:00", "estimate": 5.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1120": {"assignee": "castanoa", "created": "2019-09-06T15:17:56+10:00", "creator": "castanoa", "description": "When this card: PIPS-820 is released to prod, it will install the orca migration agents to migrate from Redis to PrivateSql.\r\n\r\nThis card is to remove those agents once migration has completed.\r\n\r\n**PENDING PIPELINES WONT BE MIGRATED UNTIL THEY ARE COMPLETED**\r\n\r\nWe should wait at least one week to give time to our users to complete the pending pipelines.\r\n\r\nOnce a week has passed, we should remove the `dual execution` and `migration agents`\r\n\r\nCheck this article for more info: https://www.spinnaker.io/setup/productionize/persistence/orca-sql/", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1120", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] Remove migration agents from orca", "updated": "2019-10-21T09:14:49+11:00", "estimate": 7.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1119": {"assignee": null, "created": "2019-09-06T14:31:46+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a build engineer, I would like to leverage twistlock to scan a container artifact that is built in my pipeline before I publish it to the container registry\r\n\r\n*Considerations:*\r\n * Build a cloud builder that can run twistlock scans provided an image\r\n\r\n*Acceptance Criteria*\r\n * Cloud builder to utilise twistlock scanning built and published to CNP docker registry in artifactory\r\n* Test usage of cloud builder available using a sample cloud build file\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1119", "labels": ["Usage", "Customer"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Application Usage - Create docker scanner for cloud build integration", "updated": "2019-09-12T22:31:05+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1118": {"assignee": null, "created": "2019-09-06T14:31:36+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\nAs an artifactory administrator I would like to leverage twistlcok vulnerability scanning to continually scan containers in GCR and Docker Hub docker registries caches in artifactory so that containers with vulnerabilities that violate ANZ policy are identified\r\n\r\n*Considerations*\r\n * Consider resource usage for scanning docker registries and ensure cluster is able to handle that\r\n\r\n*Acceptance Criteria*\r\n * GCR and Docker caches are configured for scanning in twistlock", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1118", "labels": ["Usage", "Customer"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Application Usage - Configure to scan GCP artifactory GCR and Dockerhub caches", "updated": "2019-09-12T22:31:03+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1117": {"assignee": null, "created": "2019-09-06T14:31:28+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a cluster operator, I would like to know how I can deploy twistlock defenders in my cluster and connect to the central console so that I can leverage twistlock capabilities to secure my running workloads\r\n\r\n*Considerations*\r\n * When should the target cluster/environment need a tenant project vs defenders only\r\n * If they need to deploy a tenant project articulate all the concerns they are responsible for including connectivity to intelligence stream. upgrades and connectivity to the central console\r\n\r\n*Acceptance Criteria*\r\n * Documented setup of twistlock in a target cluster\r\n * Peer reviewed by 2 team members", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1117", "labels": ["Usage", "Customer"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Front Door - Document onboarding of new tenant project", "updated": "2019-09-12T22:31:02+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1116": {"assignee": null, "created": "2019-09-06T14:31:07+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a build engineer, I would like to know how I can leverage twistlock to scan a container artifact that is built in my pipeline before I publish it to the container registry\r\n\r\nConsiderations:\r\n * Build a cloud builder that can run twistlock scans provided an image\r\n\r\n*Acceptance Criteria*\r\n * Documented usage of twistlock scanner in confluence\r\n * Peer reviewed by 2 team members", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1116", "labels": ["Usage", "Customer"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Front Door - scanning capability in cloudbuild", "updated": "2019-09-12T22:31:00+10:00", "estimate": 1.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1115": {"assignee": null, "created": "2019-09-06T14:30:49+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As an administrator, I would like to be alerted if the disk space on the twistlock mounted volume is within 15GB of its maximum capacity so that I can take appropriate action to ensure that operations are not hampered\r\n\r\n*Considerations:*\r\n * Determine if current storage class allows volume expansion\r\n\r\n*Acceptance Criteria*\r\n * Stackdriver alert created to notify team\r\n * Storage class-tested in non-production environments to ensure volume expansion is tested", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1115", "labels": ["Operations"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Operations - Monitor disk space", "updated": "2019-09-12T22:30:59+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1114": {"assignee": null, "created": "2019-09-06T14:30:31+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock admin, I want to be able to restore twistlock services and configuration/data in the event of a disaster scenario so that outage related to twistlock is limited and services can be restored quickly\r\n\r\n*Considerations:*\r\n * Define what disaster scenarios are applicable that invoke a DR backup\r\n * Determine what data needs to be restored from backup vs what is configured via automation\r\n\r\n*Acceptance Criteria*\r\n * Document DR recovery process in confluence\r\n * Log evidence of the process successfully executed in a staging environment", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1114", "labels": ["Operations"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Operations - Define disaster recovery strategy", "updated": "2019-09-12T22:30:56+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1113": {"assignee": null, "created": "2019-09-06T14:30:09+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock admin, I want twistlock backup export to be transferred to google cloud storage buckets so that I can recover from any disaster event\r\n\r\nConsiderations:\r\n * Possible use the same pattern as cloud sql backup for artifactory where we use a scheduled k8s job to extract sql backups and publish to the bucket\r\n * May need to determine the optimal time to run the job\r\n\r\n*Acceptance Criteria*\r\n * Scheduled backups of twistlock backups transferred to GCS bucket on a daily basis", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1113", "labels": ["Operations"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Operations - Data backup to Google Cloud Storage", "updated": "2019-09-12T22:30:58+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1112": {"assignee": null, "created": "2019-09-06T14:29:58+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As the Cloud Platform Native Tooling squad, we want to obtain approval from SDC to enable enterprise-wide usage of twistlock so that different programs/teams can setup tenant projects / deploy defenders for using twitlock services to secure their clusters\r\n\r\n*Considerations:*\r\n * Dependency on architecture story\r\n\r\n*Acceptance Criteria*\r\n * Approval from SDC forum for the same", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1112", "labels": ["Governance"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Governance - Obtain approval from SDC for enterprise wide usage", "updated": "2019-09-12T22:30:55+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1111": {"assignee": null, "created": "2019-09-06T14:29:27+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As the Cloud Platform Native Tooling squad, we want to publish the proposed architecture for twistlock so that our user groups are aware of how to set-up and operate their tenant projects.\r\n\r\n*Considerations:*\r\n * When should a tenant project be used\r\n * Should non-production clusters and production clusters connect to the same central console\r\n * How will deployment and upgrades of tenant projects and connected defenders be managed\r\n * Connectivity of tenant projects to intelligence streams\r\n * Data storage of scans and policy violations / Backups of each tenant project\r\n\r\n*Acceptance Criteria*\r\n * Design Document addressing the above concerns", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1111", "labels": ["Architecture"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Architecture - Define supervisor console and defenders architecture", "updated": "2019-09-12T22:30:54+10:00", "estimate": 5.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1110": {"assignee": "hidera", "created": "2019-09-06T14:28:48+10:00", "creator": "hidera", "description": "Having automated validation that Terraform configuration is valid, could be ran against pull requests for changes, to know they are valid (at least syntactically.)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1110", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Automated validation of Terraform configuration", "updated": "2019-10-24T10:36:43+11:00", "estimate": 2.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-1109": {"assignee": null, "created": "2019-09-06T14:28:34+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As an admin, I want to deploy twistlock defenders to EX cluster using spinnaker so that I can create a pipeline to promote twistlock defender deployments through the environments\r\n\r\n*Considerations:*\r\n * Setting up spinnaker pipeline to deploy twistlock defenders\r\n\r\n*Acceptance Criteria*\r\n * Deployment of twistlock defenders through dev, stg and prod using the spinnaker", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1109", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Application management - Deploy EX defenders using spinnaker", "updated": "2019-09-12T22:30:53+10:00", "estimate": 3.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1108": {"assignee": null, "created": "2019-09-06T14:27:57+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As an admin, I want to deploy twistlock using spinnaker so that I can create a pipeline to promote twistlock deployments through the environments\r\n\r\n*Considerations:*\r\n * Setting up spinnaker to deploy twistlock\r\n\r\n*Acceptance Criteria*\r\n * Deployment of twistlock chart through dev, stg and prod using the spinnaker", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1108", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Application management - Deploy central console using spinnaker", "updated": "2019-09-12T22:30:52+10:00", "estimate": 5.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1107": {"assignee": null, "created": "2019-09-06T14:27:49+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock administrator,\u00a0 I want to be able to set the SAML settings using config as code so that we can leverage benefits of automation to create repeatable deployments\r\n\r\n*Considerations*\r\n * SAML settings are captured in 1password\r\n\r\n*Acceptance Criteria*\r\n * Update SAML settings for each environment for twistlock using the API", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1107", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Configuration automation - Settings set SAML settings", "updated": "2019-09-12T22:30:51+10:00", "estimate": 2.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1106": {"assignee": null, "created": "2019-09-06T14:27:42+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock administrator, I want to be able to set proxy settings using config as code so that we can leverage benefits of automation to create repeatable deployments\r\n\r\n*Acceptance Criteria*\r\n * Update proxy settings for twistlock using the API\r\n** Proxy URL\r\n** Proxy NTLM authentication credentials\r\n** Proxy bypass list", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1106", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Configuration automation - Settings set proxy", "updated": "2019-09-12T22:30:49+10:00", "estimate": 1.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1105": {"assignee": null, "created": "2019-09-06T14:27:35+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock administrator, I want to be able to set the twistlock local admin and password using config as code so that we can leverage benefits of automation to create repeatable deployments\r\n\r\n*Acceptance Criteria*\r\n * Update cluster certificate for twistlock using the API", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1105", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Configuration automation - Signup local admin user", "updated": "2019-09-12T22:30:48+10:00", "estimate": 1.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1104": {"assignee": null, "created": "2019-09-06T14:27:27+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock administrator, I want to be able to set the twistlock console certificate using config as code so that we can leverage benefits of automation to create repeatable deployments\r\n\r\n*Acceptance Criteria*\r\n * Update cluster certificate for twistlock using the API", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1104", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Configuration automation - Settings console certificate", "updated": "2019-09-12T22:31:10+10:00", "estimate": 1.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1103": {"assignee": null, "created": "2019-09-06T14:27:21+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock administrator, I want to be able to set the twistlock license using config as code so that we can leverage benefits of automation to create repeatable deployments\r\n\r\n*Acceptance Criteria*\r\n * Update license information of twistlock using the API\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1103", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Configuration automation - Settings set license", "updated": "2019-09-12T22:31:09+10:00", "estimate": 2.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1102": {"assignee": null, "created": "2019-09-06T14:27:15+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock administrator, I want to be able to manage groups and group membership using config as code so that there we can leverage the benefits of automation to create repeatable deployments.\r\n\r\n*Acceptance Criteria*\r\n * Create / Update / Delete groups using the API\r\n * Add members to a group\r\n * Remove members from a Group", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1102", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Configuration automation - Group Management", "updated": "2019-09-12T22:31:07+10:00", "estimate": 2.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1101": {"assignee": null, "created": "2019-09-06T14:27:07+10:00", "creator": "agarwas2", "description": "*Issue/Problem*\r\n As a twistlock administrator, I want to be able to manage user's leveraging config as code so that there we can leverage the benefits of automation to create repeatable deployments.\r\n\r\nConsiderations:\r\n * Choose templating solution for JSON payloads for API, eg JSONNET\r\n * Create a harness drive the API. No existing client libraries based on initial research.\r\n * Authentication and authorisation with twistlock API\r\n * CI harness\r\n\r\n*Acceptance Criteria*\r\n * Create / Update / Delete users using the API", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1101", "labels": ["Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Configuration automation - User Management", "updated": "2019-09-12T22:30:47+10:00", "estimate": 5.0, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-1100": {"assignee": null, "created": "2019-09-06T14:25:30+10:00", "creator": "hidera", "description": "Having automated validation that Terraform configuration is valid, could be ran against pull requests for changes, to know they are valid (at least syntactically.)", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1100", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "Automated validation of Terraform configuration", "updated": "2019-09-17T08:40:03+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-1099": {"assignee": "castanoa", "created": "2019-09-06T12:00:31+10:00", "creator": "castanoa", "description": "This is sending 160 million metrics a day to stack driver and we don't need that.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1099", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Disable spinnaker metrics", "updated": "2019-09-17T08:39:53+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1098": {"assignee": null, "created": "2019-09-06T11:56:49+10:00", "creator": "vadrevus", "description": "The custom micro service needs the customer's service account details and the groups they belong to pass :\r\n\r\n*Acceptance Criteria:*\r\n\r\n* Update spin config to have a yaml file containing the service account and read write groups credentials for customers.\r\n* Update the micro service to retrieve the account details from spin config to pass to Fiat. ", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1098", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Backlog", "summary": "Use spin config to pass Users CloudBuild configuration to the new Microservice", "updated": "2019-11-16T08:33:43+11:00", "estimate": 5.0, "epic_ref": "CLS-517", "epic_name": "", "diff_to_upstream": []}, "CNPS-1097": {"assignee": "kuzhinjr", "created": "2019-09-06T11:52:42+10:00", "creator": "hidera", "description": "API Access Token is not currently support by Terraform provider.\r\n\r\n\u00a0\r\n\r\nThis would be a spike to see if feasible and how much work required to enable support of API access token management via Terraform by our extending the upstream Terraform provider.\r\n\r\n\u00a0\r\n\r\nWe would want to ideally have this work accepted upstream.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1097", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "SPIKE Artifactory API Access Tokens adding support for Terraform provider and golang api", "updated": "2019-11-19T14:26:25+11:00", "estimate": 5.0, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1096": {"assignee": "agarwas2", "created": "2019-09-06T10:49:34+10:00", "creator": "agarwas2", "description": "Request from Open Banking team to whitelist the following URL kong-docker-kong-enterprise-edition-docker.bintray.io to pull kong docker images via artifactory. The URL will need to be whitelisted on the hairpin proxy. ", "fixVersions": ["1.1.0"], "issuetype": "Task", "key": "CNPS-1096", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Whitelist kong docker registry ", "updated": "2019-10-21T09:14:47+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1095": {"assignee": "hidera", "created": "2019-09-05T16:16:44+10:00", "creator": "dugalp", "description": "*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Acceptance Criteria*\r\n\r\n* DNS entries removed from following managed zones\r\n** gcp.anz\r\n** gcpnp.anz\r\n** ex.gcp.anz\r\n** ex.gcpnp.anz", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1095", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Remove DNS entries for Jenkins in GCP", "updated": "2019-10-25T11:37:38+11:00", "estimate": 1.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1094": {"assignee": "agrawad", "created": "2019-09-05T16:14:35+10:00", "creator": "dugalp", "description": "*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Dependencies*\r\n\r\nThe following BX tribe engineers will assist with migration to a different solution first before removing credentials in the codebase.\r\n\r\n\u2022\u00a0[~hernandn]\u00a0\r\n\r\n\u2022\u00a0[~cherukat]\r\n\r\n\u2022\u00a0[~ebswortb]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1094", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Remove credentials for Jenkins authorisation from spin config", "updated": "2019-10-21T09:16:25+11:00", "estimate": 1.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1093": {"assignee": "hidera", "created": "2019-09-05T16:13:13+10:00", "creator": "dugalp", "description": "*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Dependencies*\r\n\r\nThe following BX tribe engineers will assist with migration to a different solution first before deleting oAuth codes for Jenkins.\r\n\r\n\u2022\u00a0[~hernandn]\u00a0\r\n\r\n\u2022\u00a0[~cherukat]\r\n\r\n\u2022\u00a0[~ebswortb]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1093", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Delete oAuth tokens for Jenkins", "updated": "2019-10-28T11:36:35+11:00", "estimate": 1.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1092": {"assignee": "hidera", "created": "2019-09-05T16:11:57+10:00", "creator": "dugalp", "description": "*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Dependencies*\r\n\r\nThe following BX tribe engineers will assist with migration to a different solution first before deleting the reserved IP for Jenkins in Terraform code.\r\n\r\n\u2022\u00a0[~hernandn]\u00a0\r\n\r\n\u2022\u00a0[~cherukat]\r\n\r\n\u2022\u00a0[~ebswortb]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1092", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Delete the reserved ip for jenkins from variables in Terraform code", "updated": "2019-10-21T09:15:26+11:00", "estimate": 1.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1091": {"assignee": "hidera", "created": "2019-09-05T16:02:14+10:00", "creator": "dugalp", "description": "__*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Dependencies*\r\n\r\nThe following BX tribe engineers will assist with migration to a different solution first before deleting stoage buckets.\r\n\r\n\u2022\u00a0[~hernandn]\u00a0\r\n\r\n\u2022\u00a0[~cherukat]\r\n\r\n\u2022\u00a0[~ebswortb]\r\n\u00a0", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1091", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Delete storage buckets used for Jenkins in all environments (non-prod and prod)", "updated": "2019-10-21T09:15:25+11:00", "estimate": 1.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1090": {"assignee": "hidera", "created": "2019-09-05T15:56:54+10:00", "creator": "dugalp", "description": "*Issue/Problem*\r\n * Jenkins in GCP is not fit for purpose longer term and is being decommissioned as a result\r\n * The Pipelines squad in EX has agreed with the consumers/users of Jenkins (CSP) that it isn't fit for purpose and needs to be decommissioned\r\n * Keeping Jenkins online adds possible operational risks identified\r\n\r\n*Considerations*\r\n* Can be picked up once spinnaker is upgraded and BX has migrated from Jenkins\r\n\r\n*Acceptance Criteria*\r\n\r\n*Production and non production jenkins namespaces have been deleted and code to create them have as well\r\n", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1090", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Delete all prod and non-prod Jenkins namespaces in GCP", "updated": "2019-10-21T09:15:24+11:00", "estimate": 1.0, "epic_ref": "CNPS-1048", "epic_name": "", "diff_to_upstream": []}, "CNPS-1089": {"assignee": null, "created": "2019-09-05T15:01:22+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Ops/Introduced Risk", "key": "CNPS-1089", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Risk Closed", "summary": "Jenkins is in Production without designs or Cloud Approval", "updated": "2019-11-13T12:45:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1088": {"assignee": "clarker", "created": "2019-09-05T14:55:47+10:00", "creator": "clarker", "description": "Ensure key members of BX SADCO team ([~olsenk2], [~woodj3], [~shevchea]) have:\r\n- -admin access to DC Bamboo, Artifactory, Crowd- *DONE*\r\n- documentation / knowledge transfer to allow them to manage/debug/operate DC tools\r\n\r\nAccess includes:\r\n * review existing admin access\r\n * OpenShift PBC access\r\n\r\nHandover doc includes:\r\n * giving DCBamboo/DCArtifactory/DCCrowd/etc access to others\r\n * cleanup script behaviour\r\n * server details\r\n\r\nExternal dependency:\r\n * BX availability\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1088", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CNPS", "reporter": "clarker", "status": "Story Done", "summary": "Provide docs and access to DC tools for BX handover", "updated": "2019-10-21T16:08:36+11:00", "estimate": 1.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1086": {"assignee": "clarker", "created": "2019-09-05T14:53:24+10:00", "creator": "clarker", "description": "Identify owners for each of the github repos under OCP org.\r\n\r\n\u00a0", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1086", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CNPS", "reporter": "clarker", "status": "Story Done", "summary": "Identify owners for OCP Github repos", "updated": "2019-10-21T09:14:35+11:00", "estimate": 1.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1085": {"assignee": null, "created": "2019-09-05T14:04:28+10:00", "creator": "tanga", "description": "Use and assess Armory against CD tooling criteria: https://confluence.service.anz/display/EX/CD+Tool+Assessment\r\n\r\nAcceptance:\r\n* Update confluence page for Armory.\r\n* Socialise with team for review.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1085", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Assess Armory against CD criteria", "updated": "2019-11-16T08:46:58+11:00", "estimate": 5.0, "epic_ref": "CNPS-1047", "epic_name": "", "diff_to_upstream": []}, "CNPS-1084": {"assignee": "clarker", "created": "2019-09-05T12:39:53+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n\r\nEX has projects on DC Bamboo that need to be migrated to SDCP Bamboo. These plans are not within their own project, and are instead located within the Cloud Services (CLOUD) project.\r\n\r\nThe following plans need to be migrated:\r\n* 04 - EX - Git Sync Code - *DONE*\r\n* 04 - EX - Git Sync Config - *DONE*\r\n\r\nFurther details available\u00a0[here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans described above exist in SDCP Bamboo.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1084", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate EX DC Bamboo plans", "updated": "2019-10-21T09:15:58+11:00", "estimate": 3.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1083": {"assignee": null, "created": "2019-09-05T11:46:20+10:00", "creator": "tanga", "description": "In order to use Armory pipelines as code feature, we need to install the dinghy service.\r\n\r\nDeploy and run dinghy in our dev cluster and verify everything is working OK. Also verify rollback to Spinnaker OOS causes no problems.\r\nhttps://docs.armory.io/spinnaker/install_dinghy/\r\n\r\nUse cases\r\n* Can be loaded runtime without redeploy\r\n* Hooks that can load pipelines from Github and Cloud Source Repositories (CSR)  Eg on commit. Bi directional would be a nice to have.\r\n** Can configure via user interface and see the \"code\" in the UI.\r\n* Eg a \"view source\" button that shows the JSON/YAML format of the pipeline as code - same as what you would store in Github.\r\n*  Human readable / usable\r\n** Can template out variables/env specific config.\r\n** JSON/YAML preferred.\r\n\r\n\r\nAcceptance:\r\n* Validate features meet our use cases above.\r\n* Test existing pre dinghy pipelines still work (ie no migration needed)\r\n * Tested rollback from dinghy", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1083", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "SPIKE: install Armory dinghy and test pipelines as code", "updated": "2019-11-16T08:46:57+11:00", "estimate": 3.0, "epic_ref": "CNPS-1047", "epic_name": "", "diff_to_upstream": []}, "CNPS-1082": {"assignee": "sarkers1", "created": "2019-09-05T11:43:30+10:00", "creator": "castanoa", "description": "*As* an engineer providing Continuous Delivery capability with Spinnaker\r\n*I want* to be able to re-create a Kubernetes cluster without losing the data Cloud Driver states (including the state of Spinnaker tasks, GCP resources it tracks)\r\n*So that* we can always keep our cluster version up-to-date.\r\n\r\nh3. Context\r\n\r\n* By default the clouddriver service uses redis for storage and caching. Migrating to a managed Redis service is not an option as it is not one of the approved service to use. We should use private sql instead for storage so we avoid keeping state in the cluster.\r\n* There is a small performance improvement.\r\n\r\n[https://www.spinnaker.io/setup/productionize/persistence/clouddriver-sql/]\r\n\r\nh3. Acceptance Criteria\r\n\r\n * Clouddriver is pointing to a private sql database.\r\n * The sql database is created as part of the infrastructure build (terraform)\r\n * Correct access levels are given to spinnaker for the mysql instance.\r\n * The database is set up as part of spinnaker installation.\r\n\r\nh3. Tasks\r\n\r\n* \u25fb\ufe0fCreate a new DB in Spinnaker database instance\r\n* \u25fb\ufe0fCreate a clouddriver user that has access to the clouddriver DB\r\n* \u25fb\ufe0fConfigure clouddriver to use the DB\r\n\r\nh3. References\r\n\r\nThe same work done for Orca\r\n\r\n* https://github.service.anz/ex/engineering-acceleration-infrastructure/pull/256\r\n* https://jira.service.anz/browse/CNPS-820", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1082", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Externalise clouddriver service storage to MySQL", "updated": "2019-11-16T08:58:52+11:00", "estimate": 5.0, "epic_ref": "CNPS-1044", "epic_name": "", "diff_to_upstream": []}, "CNPS-1081": {"assignee": "macdonl4", "created": "2019-09-05T11:31:13+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\nSo that users migrating from DC tools to SDCP tools can have a comparable working environment, all of the remote repositories available in DC Artifactory must be available in SDCP Artifactory. We found that there are two remote repositories in DC Artifactory that do not exist in Artifactory:\r\n* https://registry.bower.io/ (from bower-cache-bitbucket)\r\n* https://maven.atlassian.com/repository/public (from atlassian-public)\r\n\r\n*Acceptance Criteria*\r\n* These two remote repositories exist in SDCP Artifactory\r\n* Artifacts can be pulled from these remote repositories from SDCP Bamboo plan tasks\r\n\r\n*Dependencies*\r\n* SDCP team: Additionally, we depend on them for any permissions/access required for migrated users of SDCP Bamboo to pull from these repositories\r\n* *Secure Internet Services* (proxy application support) team: Whitelisting of URLs needs to be completed by them with an approved change for prod environment", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1081", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Recreate remote repositories in SDCP Artifactory that existed in DC Artifactory but don't in SDCP", "updated": "2019-10-21T16:48:31+11:00", "estimate": 2.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1080": {"assignee": "sarkers1", "created": "2019-09-05T11:30:23+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n\r\nDSE Team (Sara Danaei) wants to migrate `anzdesignsystem-npm` from DCArtifactory to GCP Artifactory. Initially, we are decided not to migrate any repo from DCArtifactory to GCP artifactory until the artifactory automation is done. Ref : [https://github.service.anz/ocp/ocp-tools/issues/171\r\n]But we will do this one as the team decided to move on.\r\n\r\n*Acceptance Criteria*\r\n * All DC artifacts of this repo will be move to GCP Artifactory.\r\n * Should pass the checksum test between both the repos.\r\n * Give permission to the user and ensure they can use it.\r\n\r\n*Dependencies*\r\n * CAT tribe: Team need to give us information about the migration and user names\u00a0 for access permission\r\n \u00a0", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1080", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate anzdesignsystem artifactory to GCP Artifactory", "updated": "2019-10-21T09:14:34+11:00", "estimate": 3.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1079": {"assignee": "sarkers1", "created": "2019-09-05T11:29:23+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n Payments has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with a Payments representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that Payments still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * Payments tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1079", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate Payments DC Bamboo projects", "updated": "2019-10-21T09:15:53+11:00", "estimate": 5.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1078": {"assignee": "dugalp", "created": "2019-09-05T11:28:28+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n INSTO has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with an INSTO representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that INSTO still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * INSTO tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1078", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate INSTO DC Bamboo projects", "updated": "2019-10-21T09:15:44+11:00", "estimate": 5.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1077": {"assignee": "kuzhinjr", "created": "2019-09-05T11:27:42+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n Home Lending has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with a Home Lending representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that Home Lending still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * Home Lending tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1077", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate Home Lending DC Bamboo projects", "updated": "2019-10-21T09:16:23+11:00", "estimate": 3.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1076": {"assignee": "dugalp", "created": "2019-09-05T11:26:51+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n Enterprise Mobility has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with an Enterprise Mobility representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that Enterprise Mobility still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * Enterprise Mobility tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1076", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate Enterprise Mobility DC Bamboo projects", "updated": "2019-10-21T09:16:10+11:00", "estimate": 5.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1075": {"assignee": "macdonl4", "created": "2019-09-05T11:25:59+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n DSE has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with a DSE representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that DSE still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo.\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * DSE tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1075", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Closed", "summary": "Migrate DSE DC Bamboo projects", "updated": "2019-10-21T09:15:34+11:00", "estimate": 3.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1074": {"assignee": "dugalp", "created": "2019-09-05T11:24:58+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n DCX has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with a DCX representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that DCX still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * DCX tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1074", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate DCX DC Bamboo projects", "updated": "2019-10-21T09:14:53+11:00", "estimate": 5.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1073": {"assignee": "clarker", "created": "2019-09-05T11:24:10+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n Cloud Services has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with a Cloud Services representative.  This card is for GCP squad owned build plans.  There is a seperate card for EX-owned build plans within the same DCBamboo project that the GCP Squad shares with EX but the plans are clearly marked EX and will be tracked separately.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that Cloud Services still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * Cloud Services tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1073", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Closed", "summary": "Migrate Cloud Services DC Bamboo projects", "updated": "2019-10-21T09:15:29+11:00", "estimate": 5.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1072": {"assignee": "sarkers1", "created": "2019-09-05T11:23:30+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n ANZx has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with a ANZx representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that ANZx still wants to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo.\r\n * The migrated DC Bamboo plans are disabled and non-admin, non-read permissions have been removed from them.\r\n * The migrated DC Artifacttory repo read-only.\r\n\r\n*Dependencies*\r\n * ANZx tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different from the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1072", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate ANZx DC Bamboo projects", "updated": "2019-10-21T09:16:07+11:00", "estimate": 3.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1071": {"assignee": "dugalp", "created": "2019-09-05T11:22:33+10:00", "creator": "macdonl4", "description": "*Issue/Problem*\r\n CAT has projects on DC Bamboo that need to be migrated to SDCP Bamboo. Not all of the plans may necessarily need to be migrated, which must be discussed with a CAT representative.\r\n\r\nFurther details available [here|https://confluence.service.anz/pages/viewpage.action?spaceKey=EX&title=DC+Bamboo+Migration+Plan].\r\n\r\n*Acceptance Criteria*\r\n * All plans from the listed projects that CAT still want to use exist in SDCP Bamboo.\r\n * Any DC Artifactory repositories that the plans use have been migrated to SDCP Artifactory.\r\n * Migrated plans build to the same result/state as they did in DC Bamboo\r\n * The migrated DC Bamboo plans are disabled read-only.\r\n * Revoke all the permission from migrated DC Artifactory and make read-only access.\u00a0\r\n\r\n*Dependencies*\r\n * CAT tribe: they will need to provide information about what needs to be migrated, as well as various miscellaneous information to assist in the migration. Additionally, they may need to assist in troubleshooting the migrated build if the state is different to the DC Bamboo version\r\n * SDCP team: we may be dependent on them for various approvals for users, service accounts, etc. As well as any other miscellaneous admin tasks within SDCP Bamboo and Artifactory", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1071", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Migrate CAT DC Bamboo projects", "updated": "2019-10-21T09:15:59+11:00", "estimate": 3.0, "epic_ref": "CNPS-1049", "epic_name": "", "diff_to_upstream": []}, "CNPS-1070": {"assignee": "castanoa", "created": "2019-09-05T10:38:26+10:00", "creator": "clarker", "description": "There are currently over 300M Stackdriver metrics produced by Spinnaker each day. We're not actively using these right now, and they are incurring a significant cost. We should disable these for now, and enable the ones we need at a later date.\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1070", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "clarker", "status": "Closed", "summary": "Disable Stackdriver Metrics for Spinnaker", "updated": "2019-09-17T08:39:47+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1067": {"assignee": null, "created": "2019-09-04T17:29:50+10:00", "creator": "tanga", "description": "Enhance our ability to report on Spinnaker errors and uptime.\r\n\r\nEnhance our ability to troubleshoot Spinnaker production issues.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1067", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Spinnaker Monitoring", "updated": "2019-11-16T09:18:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "CNPS: Spinnaker Monitoring", "diff_to_upstream": []}, "CNPS-1066": {"assignee": null, "created": "2019-09-04T16:54:13+10:00", "creator": "castanoa", "description": "We've got two repos: `eng-acceleration` and `spin-config`, there is a mix of installation and config across both.\r\n\r\nThis card is about separating the logic between installation and configuration.\r\n\r\n*Acceptance*\r\n * There will be one repo with Spinnaker installation and system configuration (Oauth, Spinanker key, etc..). This repo will have one build job to execute this.\r\n * There will be another repo for spinnaker config which ONLY will do customer configuration (GKE accounts, Permissions, PubSub etc..)\r\n * Spinnaker can be completely installed and configured by running both builds.", "fixVersions": ["PI6"], "issuetype": "Story", "key": "CNPS-1066", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Separate Spinnaker installation from spinnaker configuration in two different builds.", "updated": "2019-11-21T10:28:59+11:00", "estimate": 8.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1065": {"assignee": "kuzhinjr", "created": "2019-09-04T16:52:01+10:00", "creator": "castanoa", "description": "As an engineer of maintaining Spinnaker\r\n I want to be able to run the whole or part of the deployment process locally on my computer\r\n So that I can make necessary changes quickly without exercising the entire deployment procedure on GCP\r\nh3. Context / Considerations\r\n * Our Artifactory and Twistlock solutions utilises Makefile for this purpose\r\n\r\nh3. Acceptance Criteria\r\n * All Spinnaker build steps in Cloud Build moved to makefile/scripts\r\n * Being able to get a high confidence in the deployment steps before exercising the entire procedure on GCP", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1065", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spinnaker: Refactor cloud build logic to enable local experimentation/feedback", "updated": "2019-10-31T15:20:58+11:00", "estimate": 3.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-1064": {"assignee": "vadrevus", "created": "2019-09-04T16:49:38+10:00", "creator": "castanoa", "description": "Spinnaker config has logic written as part of the cloudbuild.yaml. Extract this logic into make/bash scripts.\r\n\r\n*Acceptance*\r\n * Spin config deployment is working as usual.\r\n * All of the steps in cloud build are written in a make/bash file.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1064", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spin-config: Refactor cloud build logic into makefile", "updated": "2019-10-21T09:14:52+11:00", "estimate": 3.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-1063": {"assignee": null, "created": "2019-09-04T16:46:50+10:00", "creator": "inagakir", "description": "base resources are prerequisite resources for other modules likes Twistlock, Artifactory, ...\r\nh3. Acceptance Criteria\r\n* \u25fd\ufe0fConfirm that change in terraform config in the new repository automatically gets applied to base resources through TFE\r\n* \u25fd\ufe0fAll {{anz-ex-services}}\u00a0terraform configs removed from the old repository.\r\n\r\nh3. References\r\n* The new repository: [https://github.service.anz/ex/infrastructure]\r\n* The old repository: [https://github.service.anz/ex/engineering-acceleration-infrastructure]\r\n \u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1063", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Deploy base resources through TFE", "updated": "2019-09-12T22:29:05+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1062": {"assignee": null, "created": "2019-09-04T16:45:12+10:00", "creator": "inagakir", "description": "h3. Acceptance Criteria\r\n * \u25fd\ufe0fConfirm that change in terraform config in the new repository automatically gets applied to Spinnaker resources through TFE\r\n * \u25fd\ufe0fConfirm that the deployment of the old repository code change doesn't modify migrated resources\r\n\r\nh3. References\r\n * The new repository: [https://github.service.anz/ex/infrastructure]\r\n * The old repository: [https://github.service.anz/ex/engineering-acceleration-infrastructure]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1062", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Deploy Spinnaker resources through TFE", "updated": "2019-09-12T22:29:03+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1061": {"assignee": null, "created": "2019-09-04T16:43:56+10:00", "creator": "inagakir", "description": "h3. Acceptance Criteria\r\n * \u25fd\ufe0fConfirm that change in terraform config in the new repository automatically gets applied to Artifactory resources through TFE\r\n * \u25fd\ufe0fConfirm that the deployment of the old repository code change doesn't modify migrated resources\r\n\r\nh3. References\r\n * The new repository: [https://github.service.anz/ex/infrastructure]\r\n * The old repository: [https://github.service.anz/ex/engineering-acceleration-infrastructure]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1061", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Deploy Artifactory resources through TFE", "updated": "2019-09-12T22:29:02+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1060": {"assignee": "headenj1", "created": "2019-09-04T16:42:29+10:00", "creator": "castanoa", "description": "From spinnaker 1.15 you can re-configure gke accounts without doing hal deploy apply.\r\n\r\nInvestigate a way of doing this.\r\n\r\nThe outcome of this spike is to assess the viability of this.\r\n\r\n*Acceptance*\r\n * If not possible, an architecture decision record explaining why.\r\n * If possible, a high level design of the solution and some cards detailing the implementation.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1060", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "SPIKE: Configure GKE accounts without re-deploying", "updated": "2019-10-28T14:28:49+11:00", "estimate": 5.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-1059": {"assignee": null, "created": "2019-09-04T16:39:54+10:00", "creator": "inagakir", "description": "h3. Acceptance Criteria\r\n * \u25fd\ufe0fConfirm that change in terraform config in the new repository automatically gets applied to GKE resources through TFE\r\n * \u25fd\ufe0fConfirm that the deployment of the old repository code change doesn't modify migrated resources\r\n\r\nh3. References\r\n * The new repository: [https://github.service.anz/ex/infrastructure]\r\n * The old repository: [https://github.service.anz/ex/engineering-acceleration-infrastructure]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1059", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Deploy GKE resources through TFE", "updated": "2019-09-12T22:29:00+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1058": {"assignee": null, "created": "2019-09-04T16:38:06+10:00", "creator": "inagakir", "description": "h3. Acceptance Criteria\r\n * \u25fd\ufe0fConfirm that change in terraform config in the new repository automatically gets applied to Twistlock resources through TFE\r\n * \u25fd\ufe0fConfirm that the deployment of the old repository code change doesn't modify migrated resources\r\n\r\nh3. References\r\n * The new repository: [https://github.service.anz/ex/infrastructure]\r\n * The old repository: [https://github.service.anz/ex/engineering-acceleration-infrastructure]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1058", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Deploy Twistlock resources through TFE", "updated": "2019-09-12T22:28:58+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1057": {"assignee": "headenj1", "created": "2019-09-04T16:34:37+10:00", "creator": "castanoa", "description": "Upgrade spinnaker to the latest version at the time of playing the card.\r\n\r\nThis is required since from version 1.15 you can reload kubernetes account configuration without restarting.\r\n\r\n*Acceptance*\r\n - Spinnaker version is upgraded in all environment.\r\n\r\n - Installation as code works as usual.\r\n\r\n - Self service tool is working as usual.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1057", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Upgrade spinnaker version to 1.16.1", "updated": "2019-10-21T09:14:51+11:00", "estimate": 5.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-1056": {"assignee": null, "created": "2019-09-04T16:31:51+10:00", "creator": "inagakir", "description": "h3. Acceptance Criteria\r\n * \u25fd\ufe0fConfirm that change in terraform config in the new repository automatically gets applied to git-sync resources through TFE\r\n * \u25fd\ufe0fConfirm that the deployment of the old repository code change doesn't modify migrated resources\r\n\r\nh3. Tasks\r\n * \u25fd\ufe0fWrite the git-sync resources terraform configs to the new repository\r\n * \u25fd\ufe0fWrite {{data_source}} s to load dependency resource states from the existing state file\r\n * \u25fd\ufe0fAdd disable flag to the git-sync resources in the old repository\r\n * Dev/Staging/Prod\r\n ** \u25fd\ufe0fMove git-sync resource states to the new state file\r\n ** \u25fd\ufe0fDeploy through TFE and confirm no changes made\r\n ** \u25fd\ufe0fTurn on disable flags for git-sync resources in the old repository\r\n * \u25fd\ufe0fWhen done on all environments, delete all git-sync resource configs from the old repository\r\n\r\nThe new repository: [https://github.service.anz/ex/infrastructure]\r\n The old repository: [https://github.service.anz/ex/engineering-acceleration-infrastructure]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1056", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Deploy git-sync resources through TFE", "updated": "2019-09-12T22:28:57+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1055": {"assignee": null, "created": "2019-09-04T16:30:49+10:00", "creator": "inagakir", "description": "h3. Acceptance Criteria\r\n\r\n* \u25fd\ufe0fA terraform config change in [infrastructure|https://github.service.anz/ex/infrastructure] is deployed\r\n** \u25fd\ufe0fDev\r\n** \u25fd\ufe0fStaging\r\n** \u25fd\ufe0fProduction\r\n\r\nh3. Tasks\r\n\r\n* \u25fd\ufe0fDeployment process is defined (dev \u27a1\ufe0fstaging \u27a1\ufe0fprod flow) (Can we do this in TFE?)\r\n* \u25fd\ufe0fDeployment process has access to the repository\r\n* \u25fd\ufe0fDeployment process has access to target environments\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1055", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "inagakir", "status": "Backlog", "summary": "Create a GCP resource through TFE", "updated": "2019-09-12T22:28:55+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1054": {"assignee": "castanoa", "created": "2019-09-04T16:08:05+10:00", "creator": "vadrevus", "description": "Create a pull request to Spinnaker's open source microservice Igor to enable permissions for GCB accounts. \r\n\r\nIgor's gcb classes are part of https://github.com/spinnaker/igor/tree/master/igor-web/src/main/java/com/netflix/spinnaker/igor/gcb.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1054", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "SPIKE: Igor Pull request", "updated": "2019-10-24T09:41:20+11:00", "estimate": 13.0, "epic_ref": "CNPS-1052", "epic_name": "", "diff_to_upstream": []}, "CNPS-1053": {"assignee": "blackm", "created": "2019-09-04T15:46:21+10:00", "creator": "tanga", "description": "*Description*\r\n\r\nReduce spinnaker technical debt.\r\n\r\n*Acceptance Criteria*\r\n\r\n* Spinnaker is upgraded to the latest version\r\n* Spinnaker installation is separated from spinnaker user documentation\r\n* Spinnaker OAUTH urls are updated to the lates DSN name.\r\n* Spinnaker terraform code is separated from the ex_services monolith\r\n\r\n*Dependencies*\r\n\r\n* GCP team", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1053", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Epic Done", "summary": "Spinnaker Upgrade", "updated": "2019-11-16T08:36:23+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Spinnaker Upgrade", "diff_to_upstream": []}, "CNPS-1052": {"assignee": "blackm", "created": "2019-09-04T15:42:21+10:00", "creator": "tanga", "description": "Investigate what is the best way to enable GCP CloudBuild stage in Spinnaker. Implement the MVP for this step.\r\n\r\n*Acceptance Criteria*\r\n\r\nSpinnaker Cloud build stage is provided to Spinnaker users with the ability to restrict who can use the credentials", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1052", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Spinnaker Enable Cloud Build Stage", "updated": "2019-11-16T09:30:20+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Spinnaker Enable Cloud Build Stage", "diff_to_upstream": []}, "CNPS-1051": {"assignee": null, "created": "2019-09-04T14:05:12+10:00", "creator": "blackm", "description": "Rebuild the kubernetes cluster in development environment to enable the following\r\n\r\n* move to GKE central module\r\n* remove master public IP\r\n* enable workload identity\r\n* enable google groups for RBAC\r\n* exploration of usefulness of Istio for our capabilities\r\n* redesign node pools\r\n* implement network and pod security policies\r\n\r\n*Acceptance Criteria*\r\n\r\n* Rebuild of kubernetes cluster in dev environments\r\n* Design document detailing the cluster design principles and migration strategy from existing cluster\r\n* Use TFE and TFE private registry modules for the rebuild (stretch)\r\n\r\n*Dependencies*\r\n\r\n* Cloud Services GCP team\r\n* Security in Change", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1051", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Upgrade Dev GKE", "updated": "2019-11-21T10:24:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "Upgrade Dev GKE", "diff_to_upstream": []}, "CNPS-1050": {"assignee": null, "created": "2019-09-04T14:04:59+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1050", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "TFE for EX IaC", "updated": "2019-09-05T08:40:07+10:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: TFE for EX IaC", "diff_to_upstream": []}, "CNPS-1049": {"assignee": "blackm", "created": "2019-09-04T14:04:48+10:00", "creator": "blackm", "description": "*Description*\r\n\r\n* Migrate all DCBamboo projects except BX tribe\r\n* Migrate all DCArtifactory repos required by non-BX tribes\r\n* Ensure both DC and SDCP Artifactory contain the same remote repositories\r\n* Identify owners for OCP Github repos and handover to appropriate teams\r\n* Provide documentation and allow access so that BX can be self-sufficient to manage the DC tools stack\r\n\r\n*Acceptance Criteria*\r\n\r\n* Ensure all DCBamboo projects except BX tribe exists in SDCP Bamboo with the same build state of DCBamboo\r\n* All DCArtifactory repos required by non-BX tribes exist in SDCP Artifactory\r\n* All migrated projects and DCArtifactory repos have only read-only permission set\r\n* All migrated projects have been disabled in DCBamboo\r\n* OCP Github repos handover completed\r\n* All DC tools have been handed over to BX\r\n\r\n*Dependencies*\r\n\r\n* SDCP Team\r\n* Enterprise Mobility, DCX, INSTO, CAT, DSE, ANZx, Payments Tribes for migration coordination\r\n* BX Team for Handover of DCTools Stack\r\n\r\n*References*\r\n\r\n[DC Bamboo and Artifactory Migration Plan|https://confluence.service.anz/display/EX/DC+Bamboo+and+Artifactory+Migration+Plan]", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1049", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic Done", "summary": "DC Bamboo/Artifactory sunset", "updated": "2019-11-15T16:15:14+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: DC Bamboo/Artifactory sunset", "diff_to_upstream": []}, "CNPS-1048": {"assignee": "blackm", "created": "2019-09-04T14:04:32+10:00", "creator": "blackm", "description": "Turn off Jenkins which was used as tactical CI builder for Spinnaker.\r\n\r\n*Acceptance Criteria*\r\n\r\n* Jenkins service and associated GCP resources are removed from all google projects\r\n* Existing customers using Jenkins have migrated to using GCP cloud build for CI needs\r\n* CI pipelines to build Jenkins images and deploy jenkins are decommissioned\r\n* Jenkins Configuration Item is disabled and troux record updated accordingly\r\n* Digicert certificate is revoked and associated secrets removed from 1password / secrets buckets\r\n\r\n*Dependencies*\r\n\r\n* CSP team (Banker Experience tribe) porting test scripts out of Jenkins.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1048", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic Done", "summary": "Decommissioning GCP Jenkins", "updated": "2019-11-16T09:23:36+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Decommission Jenkins", "diff_to_upstream": []}, "CNPS-1047": {"assignee": null, "created": "2019-09-04T14:01:16+10:00", "creator": "blackm", "description": "*Description*\r\n\r\nAssess value Armory brings over Spinnaker OOS to reduce toil and current pain points:\r\n\r\n* Troubleshooting\r\n* RBAC model\r\n* Integrations\r\n* Installation\r\n* Hal config file\r\n* Pipelines as code\r\n* Config as code\r\n\r\n*Acceptance Criteria*\r\n\r\n* Install Armory\r\n* Rollback Armory\r\n* Assess Armory against CD tooling criteria\r\n\r\n*Dependencies*\r\n\r\n* Vendor support from Armory.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1047", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Armory trial", "updated": "2019-11-16T08:46:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Armory trial", "diff_to_upstream": []}, "CNPS-1046": {"assignee": "castanoa", "created": "2019-09-04T09:23:41+10:00", "creator": "vadrevus", "description": "As a customer , I would like to trigger pre configured cloud build triggers.\r\n\r\n\u00a0\r\n\r\nA/C\r\n * An feature request is created in OSS Spinnaker for this functionality.\r\n * A PR is created to OSS Spinnaker adding this functionality.\r\n * OSS Spinnaker is updated allowing us to invoke preconfigured cloud build triggers.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1046", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "In Release", "summary": "Enable Spinnaker to invoke GCB pre-configured triggers (upstream PR)", "updated": "2019-11-16T09:30:19+11:00", "estimate": 13.0, "epic_ref": "CLS-517", "epic_name": "", "diff_to_upstream": []}, "CNPS-1045": {"assignee": null, "created": "2019-09-03T14:32:41+10:00", "creator": "tanga", "description": "Currently we do not have any scaling strategy defined or implemented.  We have scaled horizontally manually as required when issues surface in production.\r\n\r\nReference: https://www.spinnaker.io/setup/productionize/scaling/horizontal-scaling/\r\n\r\nAcceptance Criteria:\r\n* Research and define scaling strategy\r\n** Which services should/need to be scaled?\r\n** What is our baseline?  How much headroom do we need?\r\n* Raise tickets to implement scaling strategy", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1045", "labels": [], "lastViewed": "2019-11-22T11:49:04.977000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Backlog", "summary": "SPIKE - scaling strategy", "updated": "2019-11-22T11:56:15+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-1044": {"assignee": "blackm", "created": "2019-09-03T14:07:33+10:00", "creator": "tanga", "description": "*Description*\r\n\r\nMove Spinnaker state outside of GKE cluster to allow us to delete and rebuild Spinnaker while retaining state.\r\n\r\n*Acceptance Criteria*\r\n\r\n* Spinnaker is using Private sql to store pipeline state for supported services.\r\n* Spinnaker can be deployed in different namespaces on the same cluster.\r\n* Spinnaker cache is stored in Google's memory store. (Stretch)\r\n\r\n*Dependencies*\r\n\r\n* Google Memory store use in alpha (GCP team)\r\n", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1044", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Spinnaker Externalise State", "updated": "2019-11-16T09:26:08+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Spinnaker Externalise State", "diff_to_upstream": []}, "CNPS-1043": {"assignee": null, "created": "2019-09-03T09:29:56+10:00", "creator": "vadrevus", "description": "CSP reported their GCR triggers work inconsistently. On further investigation the igor service detects a new image update in   the registry , however the orca service reports errors. ", "fixVersions": [], "issuetype": "Bug", "key": "CNPS-1043", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Closed", "summary": "[Spinnaker] Spinnaker GCR trigger works inconsistently", "updated": "2019-11-11T16:51:28+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1042": {"assignee": "blackm", "created": "2019-09-03T08:56:13+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Ops/Introduced Risk", "key": "CNPS-1042", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Risk Identified", "summary": "ANZx elevated privileges in GCP", "updated": "2019-09-03T08:56:37+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1041": {"assignee": "blackm", "created": "2019-09-03T08:55:35+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Ops/Introduced Risk", "key": "CNPS-1041", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Risk Identified", "summary": "No clear ownership of IAM in GCP", "updated": "2019-09-03T08:55:35+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1040": {"assignee": null, "created": "2019-09-02T17:13:07+10:00", "creator": "tanga", "description": "For the Artifactory remote tests, need to zap the cache as part of the test otherwise it doesn't really test pulling from the source.\r\n\r\nNote, cannot zap via API: https://www.jfrog.com/jira/browse/RTFACT-9823.\r\n\r\nCan simulate by manually deleting artifact from cache repo using API.\r\n\r\nTasks\r\n* Create Artifactory service token with relevant permissions.\r\n* Define pattern/process for:\r\n** Encrypt/store service token (eg encrypt with KMS, base64 and store in code)\r\n** Decrypt runtime via cloudbuild\r\n** Pass as parameter into Dockerfile\r\n* Assess the tests here: https://github.service.anz/ex/artifactory-config/tree/master/tests\r\n** Refactor tests as required - split out to separate tickets if needed.\r\n\r\nAcceptance Criteria\r\n* Tests identified above are refactored and run successfully with \"zapping\" cache.\r\n", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1040", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Artifactory remote tests - zap cache", "updated": "2019-09-17T08:40:02+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-1039": {"assignee": "clarker", "created": "2019-09-02T12:52:05+10:00", "creator": "agarwas2", "description": "From August 17th, ex-services-prod project had a spike in stackdriver metrics cost. Investigate the cause of the spike\r\n\r\nAcceptance criteria\r\n\r\n- Identify and document cause of spike \r\n- Stories to remediate the increased cost added to backlog in high priority\r\n\r\nPossible causes - JFrog metrics published to stackdriver / Audit logging turned on. Attached image shows the metrics volume spike (in blue)", "fixVersions": ["1.0.0"], "issuetype": "Task", "key": "CNPS-1039", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "agarwas2", "status": "Done", "summary": "Investigate spike in metrics volume ", "updated": "2019-09-17T08:40:02+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1038": {"assignee": "hidera", "created": "2019-09-02T09:19:30+10:00", "creator": "hidera", "description": "Use Terraform to automate repo configuration", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1038", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Automate repo configuration", "updated": "2019-09-17T08:39:54+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-1037": {"assignee": "singhs93", "created": "2019-08-30T11:33:46+10:00", "creator": "headenj1", "description": "# The account which Spinnaker uses to create a Cloudbuild trigger (as part of the GCB stage in pipeline) does not get restricted in the Spinnaker UI.\r\n\r\nThe result is that anyone who can create a pipeline in spinnaker can add a GCB stage from which they can select any GCB account. Each GCB account has permission to create and trigger cloudbuild jobs which then run in the designated GCP project under the security context of the default cloudbuild account for that project.\u00a0", "fixVersions": [], "issuetype": "Delivery Risk", "key": "CNPS-1037", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Not Assessed", "summary": "Lack of controls on DCX GCB trigger account usage from Spinnaker ", "updated": "2019-11-13T13:07:11+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1036": {"assignee": "singhs93", "created": "2019-08-30T11:28:18+10:00", "creator": "headenj1", "description": "The account which Spinnaker uses to create a Cloudbuild trigger (as part of the GCB stage in pipeline) does not get restricted in the Spinnaker UI.\r\n\r\nThe result is that anyone who can create a pipeline in spinnaker can add a GCB stage from which they can select any GCB account. Each GCB account has permission to create and trigger cloudbuild jobs which then run in the designated GCP project under the security context of the default cloudbuild account for that project.\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Delivery Risk", "key": "CNPS-1036", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Resolved", "summary": "Lack of controls on GCB (dcx) trigger account usage from Spinnaker", "updated": "2019-09-17T08:40:01+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1035": {"assignee": "hernandn", "created": "2019-08-29T14:31:11+10:00", "creator": "headenj1", "description": "The account which Spinnaker uses to create a Cloudbuild trigger (as part of the GCB stage in pipeline) does not get restricted in the Spinnaker UI.\r\n\r\nThe result is that anyone who can create a pipeline in spinnaker can add a GCB stage from which they can select any GCB account. Each GCB account has permission to create and trigger cloudbuild jobs which then run in the designated GCP project under the security context of the default cloudbuild account for that project.\u00a0", "fixVersions": [], "issuetype": "Delivery Risk", "key": "CNPS-1035", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Not Assessed", "summary": "Lack of controls on CSP GCB trigger account usage from Spinnaker ", "updated": "2019-11-13T13:07:03+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1034": {"assignee": "dugalp", "created": "2019-08-28T16:34:42+10:00", "creator": "dugalp", "description": "During migration of Android platform jobs for ANZ App, we uncovered an issue with [https://services.gradle.org/distributions]\u00a0which is whitelisted for on-prem artifactory as \"dcx-gradle\".\r\n\r\nWe have the same \"gradle\" remote repo defined in GCP Artifactory Prod.\r\n\r\nWe should whitelist\u00a0downloads.gradle-dn.com which was done for on-prem artifactory already and it fixed the issue.\u00a0 We need the same applied to GCP Artifactory.\r\n\r\nCurrently 403 denied error is returned when opening this URL:\r\n\r\nhttps://artifactory.gcp.anz/artifactory/gradle/gradle-4.6-bin.zip?trace\r\n\r\n\r\n{code:java}\r\nRequest ID: e26774a7\r\nRepo Path ID: gradle:gradle-4.6-bin.zip\r\nMethod Name: GET\r\nUser: anonymous\r\nTime: 2019-08-28T06:20:58.120Z\r\nThread: http-nio-8081-exec-316\r\nSteps: \r\n2019-08-28T06:20:58.121Z Received request\r\n2019-08-28T06:20:58.121Z Request source = 10.148.12.58, Last modified = 31-12-69 23:59:59 +00:00, If modified since = -1, Thread name = http-nio-8081-exec-316\r\n2019-08-28T06:20:58.121Z Executing any BeforeDownloadRequest user plugins that may exist\r\n2019-08-28T06:20:58.121Z Retrieving info from {} repository '{}' type \r\n2019-08-28T06:20:58.122Z Unable to find resource in gradle-cache:gradle-4.6-bin.zip\r\n2019-08-28T06:20:58.123Z Executing any AltRemotePath user plugins that may exist\r\n2019-08-28T06:20:58.123Z Appending matrix params to remote request URL\r\n2019-08-28T06:20:58.123Z Using remote request URL - https://services.gradle.org/distributions/gradle-4.6-bin.zip\r\n2019-08-28T06:20:58.123Z Executing HEAD request to https://services.gradle.org/distributions/gradle-4.6-bin.zip\r\n2019-08-28T06:20:58.319Z Received status {} (message: 403) on remote info request - returning unfound resource\r\n2019-08-28T06:20:58.319Z Unable to find resource remotely - adding to the missed retrieval cache.\r\n2019-08-28T06:20:58.319Z Requested resource is found = false\r\n2019-08-28T06:20:58.319Z Request is HEAD = false\r\n2019-08-28T06:20:58.319Z Request is for a checksum = false\r\n2019-08-28T06:20:58.319Z Target repository is not remote or doesn't store locally = false\r\n2019-08-28T06:20:58.319Z Requested resource was not modified = false\r\n2019-08-28T06:20:58.319Z Responding with unfound resource\r\n2019-08-28T06:20:58.319Z Setting default response status to '404' reason to 'Resource not found'\r\n2019-08-28T06:20:58.319Z Response is an instance of UnfoundRepoResourceReason\r\n2019-08-28T06:20:58.319Z Configured to hide un-authorized resources = false\r\n2019-08-28T06:20:58.319Z Original response status is auth related = false\r\n2019-08-28T06:20:58.319Z Using original response status of '404' and message 'Forbidden'\r\n2019-08-28T06:20:58.319Z Sending error with status 404 and message 'Forbidden'\r\n2019-08-28T06:20:58.319Z Executing any AfterDownloadErrorAction user plugins that may exist\r\n2019-08-28T06:20:58.319Z Response code wasn't modified by the user plugins\r\n2019-08-28T06:20:58.319Z Sending response with the status '404' and the message 'Forbidden'{code}\r\n[\u00a0|https://artifactory.gcp.anz/artifactory/gradle/gradle-4.6-bin.zip?trace]\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1034", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Request whitelisting of Gradle Distribution supporting site downloads.gradle-dn.com\t\t", "updated": "2019-09-17T08:40:01+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1033": {"assignee": "agarwas2", "created": "2019-08-27T16:42:44+10:00", "creator": "hidera", "description": "Artifactory self serve is running terraform stuff in cloudbuild, not via bamboo.\r\n\r\n\u00a0\r\n\r\nThis was all working when utilising public cloudbuild.\r\n\r\n\u00a0\r\n\r\nIn the move to private cloudbuild, this appears to no longer work, and it appears its due to VPC service controls.\r\n\r\n\u00a0\r\n\r\nNote comments here:\u00a0https://jira.service.anz/browse/PIPS-975\r\n\r\n\u00a0\r\n\r\nCurrent workaround is to manually create/update trigger in GCP.\r\n\r\n\u00a0\r\n\r\nThe required changes needed are in gcp dns, see specific link in comment below.\r\n\r\n\u00a0\r\n\r\nThe issue is a current CNAME entry that maps from \"*.googleapis.com\" to \"restricted.googleapis.com\". That only works for services listed on this page though, and cloudbuild is not on that list:\u00a0[https://cloud.google.com/vpc-service-controls/docs/supported-products]\r\n\r\n\u00a0\r\n\r\nThe solution is to manually add an entry for each service on that list to replace this entry.\r\n\r\ne.g. something like\r\n\r\n* \"bigquery.googleapis.com\" CNAME to \"restricted.googleapis.com\"\r\n\r\n* \"bigtable.googleapis.com\" CNAME to \"restricted.googleapis.com\"\r\n * ...\r\n\r\nBasically need to enumerate all of the API endpoint domains from the services in the above list.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1033", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Get GCP changes working in Terraform running in private cloudbuild", "updated": "2019-11-07T15:29:59+11:00", "estimate": 3.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-1032": {"assignee": "hidera", "created": "2019-08-27T16:41:14+10:00", "creator": "hidera", "description": "Currently terraform provider for artifactory can successfully create remote repos, but fails on any kind of update of a remote repo.\r\n\r\n\u00a0\r\n\r\nhave created bug here (should also open JFrog bug, as its really a JFrog API issue)\r\n\r\n\u00a0\r\n\r\n[https://github.com/atlassian/terraform-provider-artifactory/issues/52]\r\n\r\n\u00a0\r\n\r\nIssue is some of the \"options\" on remote repo config will fail depending upon the package_type. e.g. setting bowerRegistryUrl on anything but a bower remote repo, will fail when trying to do an update (despite it succeeding when doing a create).\r\n\r\n\u00a0\r\n\r\nWork is to fork/patch terraform provider to work successfully for updating remote repos.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1032", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Patch artifactory terraform provider to work updating remote repos", "updated": "2019-09-17T08:40:00+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-1031": {"assignee": "vadrevus", "created": "2019-08-27T16:21:15+10:00", "creator": "vadrevus", "description": "Jenkins cloud build uses jenkins-agent-default from launch pad which will fail with the vpc service controls in place.\r\n\r\nUpdate the code to use artifactory instead of gcr.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1031", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "Update Jenkins cloud build to use Jenkins default image from artifactory", "updated": "2019-09-18T16:41:47+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1030": {"assignee": "castanoa", "created": "2019-08-27T16:10:38+10:00", "creator": "castanoa", "description": "Some pipelines get this error all the time.\r\n\r\nSome others present a time out error.\r\n\r\nInvestigate the issue", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1030", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Spinnaker: OB Is facing retrofit errors in spinnaker prod", "updated": "2019-09-17T08:39:54+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1029": {"assignee": "kuzhinjr", "created": "2019-08-27T12:33:09+10:00", "creator": "kuzhinjr", "description": "Jake form\u00a0 OB reported a Gradle build issue on Slack:\r\n\r\nHey, guys,\r\nI'm hoping someone here can point me in the right direction. I had the ob-maven repo created last week.\r\nI've added a few dependencies to it. When I run ./gradlew build without the new repo listed in the repositories section of build.gradle I get notice of missing dependencies as expected but when I add the repo to the list I get a really weird error that I'm not having any luck with troubleshooting:\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':dependencies'.\r\n> Failed to notify dependency resolution listener.\r\n \u00a0 > java.lang.StackOverflowError (no error message)\r\n4 replies\r\n----\r\n\r\nHere's the build.gradle:\r\nplugins {\r\n \u00a0 \u00a0id 'java'\r\n \u00a0 \u00a0id 'application'\r\n \u00a0 \u00a0id 'idea'\r\n \u00a0 \u00a0id \"com.commercehub.gradle.plugin.avro\" version \"0.7.0\"\r\n \u00a0 \u00a0id 'org.springframework.boot' version '2.1.5.RELEASE'\r\n}\r\n\r\napply plugin: 'io.spring.dependency-management'\r\n\r\ngroup = 'anz.com.pes.streams'\r\nversion = '0.0.1-SNAPSHOT'\r\nsourceCompatibility = 1.11 \u00a0\r\n\r\nmainClassName = 'com.anz.pes.streams.PartyIdEnricherApplication'\r\n\r\njar {\r\n \u00a0 \u00a0archiveBaseName = 'pes-streams'\r\n \u00a0 \u00a0version = \"${version}\"\r\n}\r\n\r\nsourceSets.main.java.srcDir new File(buildDir, 'generated-test-avro-java')\r\n\r\nrepositories {\r\n \u00a0 \u00a0 \u00a0 \u00a0maven {\r\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0url \"[https://artifactory.gcp.anz/artifactory/gradle-plugins/m2]\r\n\"\r\n \u00a0 \u00a0 \u00a0 \u00a0}\r\n \u00a0 \u00a0 \u00a0 \u00a0maven {\r\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0url \"[https://artifactory.gcp.anz/artifactory/maven-central]\r\n\"\r\n \u00a0 \u00a0 \u00a0 \u00a0}\r\n \u00a0 \u00a0 \u00a0 \u00a0maven {\r\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0url \"[https://artifactory.gcp.anz/artifactory/spring-milestone]\r\n\"\r\n \u00a0 \u00a0 \u00a0 \u00a0}\r\n \u00a0 \u00a0 \u00a0 \u00a0maven {\r\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0url \"[https://artifactory.gcp.anz/artifactory/plugins-release]\r\n\"\r\n \u00a0 \u00a0 \u00a0 \u00a0}\r\n \u00a0 \u00a0 \u00a0 \u00a0maven {\r\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0url \"[https://artifactory.gcp.anz/artifactory/ob-maven]\r\n\"\r\n \u00a0 \u00a0 \u00a0 \u00a0}\r\n \u00a0 \u00a0 \u00a0 \u00a0jcenter {\r\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0url \"[https://artifactory.gcp.anz/artifactory/jcenter]\r\n\"\r\n \u00a0 \u00a0 \u00a0 \u00a0}\r\n}\r\n\r\nwrapper {\r\n \u00a0 \u00a0distributionUrl = \"[https://artifactory.gcp.anz/artifactory/gradle/gradle-5.4.1-all.zip]\r\n\"\r\n}\r\n\r\next {\r\n \u00a0 \u00a0kafkaVersion = '2.2.0'\r\n \u00a0 \u00a0confluentPluginVersion = '5.2.1'\r\n \u00a0 \u00a0avroVersion= '1.8.2'\r\n}\r\n\r\ndependencies {\r\n \u00a0 \u00a0implementation \"org.apache.avro:avro:1.8.2\"\r\n \u00a0 \u00a0implementation \"org.apache.kafka:kafka-clients:$kafkaVersion\"\r\n \u00a0 \u00a0implementation \"org.apache.kafka:kafka-streams:$kafkaVersion\"\r\n \u00a0 \u00a0implementation \"io.confluent:kafka-streams-avro-serde:$confluentPluginVersion\"\r\n \u00a0 \u00a0implementation \"io.confluent:kafka-schema-registry-client:$confluentPluginVersion\"\r\n \u00a0 \u00a0implementation \"io.confluent:kafka-avro-serializer:$confluentPluginVersion\"\r\n \u00a0 \u00a0//The line below will be needed when we connect to the party service DB\r\n \u00a0 \u00a0//implementation \"com.oracle:ojdbc7:12.1.0.1\"\r\n \u00a0 \u00a0implementation \"org.apache.commons:commons-lang3:3.4\"\r\n \u00a0 \u00a0implementation \"org.apache.avro:avro:$avroVersion\"\r\n \u00a0 \u00a0implementation \"org.apache.avro:avro-maven-plugin:$avroVersion\"\r\n \u00a0 \u00a0implementation \"com.google.code.gson:gson:2.8.5\"\r\n \u00a0 \u00a0//including this library allows us to see full built-in kafka logs\r\n \u00a0 \u00a0implementation \"org.slf4j:slf4j-api:1.7.26\"\r\n \u00a0 \u00a0implementation \"org.mock-server:mockserver-netty:5.5.4\"\r\n \u00a0 \u00a0implementation \"org.springframework.boot:spring-boot-configuration-processor\"\r\n \u00a0 \u00a0implementation \"org.springframework.boot:spring-boot-starter\"\r\n\r\n \u00a0 \u00a0testImplementation \"org.springframework:spring-web:5.1.7.RELEASE\"\r\n \u00a0 \u00a0testImplementation \"junit:junit:4.12\"\r\n \u00a0 \u00a0testImplementation \"org.apache.curator:curator-test:2.9.0\"\r\n \u00a0 \u00a0testImplementation \"org.apache.kafka:kafka-streams-test-utils:$kafkaVersion\"\r\n \u00a0 \u00a0testImplementation \"org.apache.kafka:kafka-clients:$kafkaVersion:test\"\r\n \u00a0 \u00a0testImplementation \"org.apache.kafka:kafka_2.12:$kafkaVersion:test\"\r\n \u00a0 \u00a0testImplementation \"io.confluent:kafka-schema-registry-client:$confluentPluginVersion\"\r\n \u00a0 \u00a0testImplementation \"io.confluent:kafka-schema-registry:$confluentPluginVersion\"\r\n \u00a0 \u00a0testImplementation \"io.confluent:kafka-schema-registry:$confluentPluginVersion:tests\"\r\n \u00a0 \u00a0testImplementation \"org.springframework.boot:spring-boot-starter-test\"\r\n \u00a0 \u00a0testImplementation \"javax.json:javax.json-api:1.1.4\"\r\n \u00a0 \u00a0testImplementation 'org.glassfish:javax.json:1.1'\r\n}\r\n\r\nconfigurations {\r\n \u00a0 \u00a0all*.exclude module : 'spring-boot-starter-logging'\r\n}\r\n\r\nsourceSets {\r\n \u00a0 \u00a0test {\r\n \u00a0 \u00a0 \u00a0 \u00a0resources {\r\n \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0srcDir 'src/test/avro'\r\n \u00a0 \u00a0 \u00a0 \u00a0}\r\n \u00a0 \u00a0 \u00a0 \u00a0compileClasspath += sourceSets.main.runtimeClasspath\r\n \u00a0 \u00a0}\r\n}\r\n\r\navro {\r\n \u00a0 \u00a0fieldVisibility = \"PRIVATE\"\r\n}\r\n\r\n\r\n\u00a0\r\n\u00a0\r\n\u00a0\r\n[Sirisha|https://app.slack.com/team/U6FQG1M37]\u00a0\u00a0[1 hour ago|https://anzengineering.slack.com/archives/CHDAQ6K52/p1566868724240000?thread_ts=1566799348.216600&cid=CHDAQ6K52]\r\n[@Jake|https://anzengineering.slack.com/team/UE0F3U5RD]\u00a0is the above still an issue?", "fixVersions": ["1.0.0"], "issuetype": "Task", "key": "CNPS-1029", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "kuzhinjr", "status": "Closed", "summary": "OB - Gradle Build Issue ", "updated": "2019-09-17T08:39:59+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-1028": {"assignee": "castanoa", "created": "2019-08-26T15:32:20+10:00", "creator": "castanoa", "description": "Patrick reported that after he declined a manual judgement the whole pipeline became unestable. The application is `sre-helloworld`\r\n\r\nHe can not see the history properly and the filters are not working correctly.\r\n\r\nInvestigate this.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1028", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "[Spinnaker] sre-helloworld pipeline doesn't show history", "updated": "2019-10-21T09:14:46+11:00", "estimate": 21.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1027": {"assignee": null, "created": "2019-08-26T11:02:32+10:00", "creator": "tanga", "description": "Raise risk in JIRA to allow team to apply for local admin - needs to be accepted/signed off by TAL.\r\n\r\nThough not related to local admin per se, can use this as an example of wording and language: https://jira.service.anz/browse/DVE-149", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1027", "labels": [], "lastViewed": "2019-11-25T13:41:45.388000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Raise risk for local admin on Macbook SOE", "updated": "2019-11-22T11:52:01+11:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-1026": {"assignee": "castanoa", "created": "2019-08-26T10:59:24+10:00", "creator": "headenj1", "description": "* \r\n ** Acceptance **\r\n\r\nWe should answer these questions:\r\n # Can we get the groups a user belongs to using fiat endpoints?\r\n # Can we pass the current user from the pipeline to the custom service using webhook?\r\n # Can we use a kubernetes dns endpoint as web hook?\r\n # What language should we use to implement this?\r\n # Can we use custom pipeline stage?", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1026", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "SPIKE: Investigate viability of custom microservice for cloud build", "updated": "2019-10-21T09:16:29+11:00", "estimate": 5.0, "epic_ref": "CNPS-1052", "epic_name": "", "diff_to_upstream": []}, "CNPS-1025": {"assignee": "headenj1", "created": "2019-08-23T15:37:20+10:00", "creator": "vadrevus", "description": "As an engineer, I would like to configure GCB triggers in spinnaker so that:\r\n* Only users belonging to certain roles have write permissions to trigger the stage.\r\n* Only users belonging to certain roles have read permissions to view the stage.\r\n", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1025", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "Role based authorisation for GCB trigger configuration in spinnaker", "updated": "2019-09-17T08:39:58+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-1024": {"assignee": "blackm", "created": "2019-08-23T08:37:48+10:00", "creator": "headenj1", "description": "Proxy team suggested to us that we can shortcut the handoffs / team coordination by getting command centre to organise a bridge.\r\n\r\nWe need to know how to do this\r\n\r\n\u00a0\r\n\r\nAcceptance Criteria: Process is documented and reviewed by the team", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1024", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Document how to engage Command Centre", "updated": "2019-10-21T09:14:31+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1023": {"assignee": "blackm", "created": "2019-08-23T08:36:16+10:00", "creator": "headenj1", "description": "How do the tiered Terraform plans work?\r\n\r\nWhat is the big picture solution\r\n\r\n\u00a0\r\n\r\nAcceptance Criteria: Run a knowledge transfer session with the team", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1023", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Terraform Foundations 101 KT", "updated": "2019-11-18T09:33:04+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1022": {"assignee": "agarwas2", "created": "2019-08-23T08:34:58+10:00", "creator": "headenj1", "description": "There have been a number of incidents where our ability to properly diagnose the issues\u00a0 have been hampered by not having access to the proxy logs\r\n\r\n\u00a0\r\n\r\nAcceptance Criteria: We can access the proxy logs through Splunk", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1022", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "Get access to review Proxy logs ", "updated": "2019-10-21T09:14:33+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1021": {"assignee": "agarwas2", "created": "2019-08-23T08:26:41+10:00", "creator": "headenj1", "description": "Knowledge Transfer for Twistlock solution\r\n\r\nExplain how twistlock solution works - who are the customers and what problem does it solve\r\n\r\nAcceptance Criteria: Run a knowledge transfer session with the team", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1021", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Twistlock 101 KT", "updated": "2019-10-21T09:14:29+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1020": {"assignee": "headenj1", "created": "2019-08-23T08:23:33+10:00", "creator": "headenj1", "description": "Knowledge Transfer for Spinnaker\r\n\r\nAndres will assist on this task\r\n\r\nJonathan to request training material from Armory\r\n\r\nAcceptance Criteria: Run a knowledge transfer session with the team", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1020", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Spinnaker 101 KT", "updated": "2019-09-17T08:39:37+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1019": {"assignee": "clarker", "created": "2019-08-23T08:22:17+10:00", "creator": "headenj1", "description": "EX team want to divest from DC support as soon as we can.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1019", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Identify OCP support structure", "updated": "2019-10-21T09:14:28+11:00", "estimate": 5.0, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1018": {"assignee": null, "created": "2019-08-22T16:52:47+10:00", "creator": "dugalp", "description": "*As a*\u00a0Pipeline Squad\u00a0\r\n*WE WANT*\u00a0to reduce time it takes to deploy Artifactory namespace to GCP with Cloud Build (currently 20 minutes)\u00a0\u00a0\r\n*SO THAT* it can be deployed from scratch in the shortest possible time (5 minutes or less), to be able to test faster in dev/stg before making changes in prod, and ensure maximum up-time of all our applications for our customers.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1018", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Closed", "summary": "Speed up Artifactory deploy ", "updated": "2019-11-01T21:23:04+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1017": {"assignee": "agarwas2", "created": "2019-08-22T12:53:48+10:00", "creator": "dugalp", "description": "Repair Artifactory monitoring sidecar (that was disabled to enable redeploy) so it can be deployed from scratch\r\n\r\n\u00a0\r\n\r\nJasper did work on Artifactory monitoring sidecar.\r\n\r\nIt caused redeploying Artifactory from deleted namespace usecase to stop working, so we disabled his code.\r\n\r\n\u00a0\r\n\r\nThis ticket is to re-enable.\r\n\r\n\u00a0\r\n\r\nSatyam might have more context around root cause of initial issue and if it is resolved (think it was linked to logback).", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1017", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "To Do", "summary": "Re-enable Artifactory monitoring sidecar", "updated": "2019-11-15T10:03:52+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1016": {"assignee": "dugalp", "created": "2019-08-22T12:52:53+10:00", "creator": "dugalp", "description": "*As a*\u00a0Pipeline Squad\u00a0\r\n *WE WANT*\u00a0to understand the hairpin proxy stability from the user perspective given any time window and whitelisted site URL used by GCP Artifactory\r\n *SO THAT* we can track and ensure reliable downloads, thus providing great end-user experience.\r\n\r\nAcceptance: \r\n \u2022 Ability to obtain data and quickly visualize error frequency/rate for a given time period (i.e. 400's and 500's, especially 407 which appears to be higher than others) for any URL\r\n\r\n\u00a0\r\n\r\nNote: A similar story exists for download speed monitoring CNPS-986\u00a0but doesn't include error frequency monitoring per remote site.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1016", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "To Do", "summary": "Set up stackdriver monitoring for proxy stability ", "updated": "2019-12-02T09:48:31+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-1015": {"assignee": "dugalp", "created": "2019-08-22T12:51:01+10:00", "creator": "dugalp", "description": "To prevent future re-occurences and allow detection, without refactoring the script, create secondary service account for monitoring purposes or backup purposes in case of lock \u2013 add it to the existing \"application\" configured in proxy.\r\n\r\nAcceptance:\r\n \u2022 New service account can connect to existing whitelisted sites used for monitoring directly from pod to gather live metrics with \\{{wget}} command", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1015", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Create secondary hairpin proxy service account ", "updated": "2019-09-17T08:39:57+10:00", "estimate": null, "epic_ref": "CNPS-1012", "epic_name": "", "diff_to_upstream": []}, "CNPS-1014": {"assignee": "dugalp", "created": "2019-08-22T12:50:05+10:00", "creator": "dugalp", "description": "To reduce the time taken to approve a password change, change service account owner from Rakesh to someone in Delivery Acceleration and include secondary owner who is in the Delivery Acceleration squad\r\n\r\nAcceptance:\r\n \u2022 [http://cmdb.apps.anz|http://cmdb.apps.anz/]\u00a0shows the new owners after being changed.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1014", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Change hairpin proxy service account owner ", "updated": "2019-09-17T08:39:57+10:00", "estimate": null, "epic_ref": "CNPS-1012", "epic_name": "", "diff_to_upstream": []}, "CNPS-1013": {"assignee": "dugalp", "created": "2019-08-22T12:45:52+10:00", "creator": "dugalp", "description": "*As a*\u00a0Pipeline Squad\u00a0\r\n *WE WANT* to\u00a0be able to refer to a documented process to get various required\u00a0 teams working together on an incident involving a Pipeline squad owned GCP application (i.e. Artifactory, Spinnaker, etc)\r\n *SO THAT*\u00a0we can\u00a0ensure maximum up-time of all our applications for our customers.\r\n\r\n\u00a0\r\n\r\n,\u00a0\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1013", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Document incident escalation process", "updated": "2019-09-17T08:39:59+10:00", "estimate": null, "epic_ref": "CNPS-1012", "epic_name": "", "diff_to_upstream": []}, "CNPS-1012": {"assignee": null, "created": "2019-08-22T12:41:48+10:00", "creator": "dugalp", "description": "Refer to the post-mortem for the recent outage incident regarding Artifactory:\r\n\r\n[https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/docs/postmortems/0006-artifactory-remote-repository-outage.md]", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-1012", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Closed", "summary": "Artifactory post-mortem action items", "updated": "2019-10-24T15:53:38+11:00", "estimate": null, "epic_ref": null, "epic_name": "Artifactory post-mortem actions", "diff_to_upstream": []}, "CNPS-1011": {"assignee": null, "created": "2019-08-22T10:15:37+10:00", "creator": "hidera", "description": "Currently we only manually test Artifactory by accessing remote repos, doing docker pulls, uploading to local repo, etc.\r\n\r\n\u00a0\r\n\r\nThis should be automated, to give greater confidence that Artifactory is functioning correctly after any changes to Artifactory.", "fixVersions": [], "issuetype": "Bug", "key": "CNPS-1011", "labels": ["art"], "lastViewed": "2019-11-22T11:57:32.138000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "Automated testing of Artifactory", "updated": "2019-11-22T11:57:31+11:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-1010": {"assignee": "vadrevus", "created": "2019-08-22T09:52:29+10:00", "creator": "headenj1", "description": "The CSP squad have requested the ability to call cloudbuild from spinnaker. This feature has been tested as a spike. It can be enabled with testing from the customer.\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1010", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Onboarding CSP for using Spinnaker Cloudbuild triggers ", "updated": "2019-09-17T08:39:56+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1009": {"assignee": "agarwas2", "created": "2019-08-21T14:19:46+10:00", "creator": "tanga", "description": "Request from Jake Nelson (slack message below):\r\n{code}\r\nJake Today at 12:34\r\n@Andy Tang, can we please get http://maven.icm.edu.pl/artifactory/repo/ added as a remote? We need this fairly quickly if possible. We need it so that we can consume the Confluent Kafka maven packages.\r\n\r\n\r\nJake  24 minutes ago\r\nI'm trying to get:\r\nio.confluent:kafka-streams-avro-serde:5.2.1\r\nio.confluent:kafka-schema-registry-client:5.2.1\r\nio.confluent:kafka-avro-serializer:5.2.1\r\n{code}\r\n\r\nAcceptance Criteria\r\n* Create remote repo as requested (see updated in comments).\r\n* Create Artifactory test", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-1009", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Artifactory - create confluent maven repo for OB", "updated": "2019-10-21T09:14:50+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1008": {"assignee": "vadrevus", "created": "2019-08-21T11:36:03+10:00", "creator": "vadrevus", "description": "As a customer, I would like to trigger cloud build using private cloud builders from spinnaker.\r\n", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1008", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "Trigger private cloud builders from spinnaker", "updated": "2019-09-17T08:39:56+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-1007": {"assignee": null, "created": "2019-08-20T16:13:50+10:00", "creator": "blackm", "description": "Current our TF source includes a custom GKE cluster and node pool configuration.\r\n\r\nSwitch to the CS provided module (built by Contino and Open Banking) and make pull requests necessary to add the features we require.\r\n\r\nAcceptance:\r\n- Replace custom TF google_container_cluster and google_container_node_pool resources with ", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1007", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Migrate to CS provided GKE cluster module", "updated": "2019-09-12T22:28:42+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-1006": {"assignee": "agarwas2", "created": "2019-08-20T11:08:28+10:00", "creator": "agarwas2", "description": null, "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1006", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Deploy permissions for dse-images docker repo", "updated": "2019-09-20T16:16:24+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-1005": {"assignee": "headenj1", "created": "2019-08-19T14:31:25+10:00", "creator": "headenj1", "description": "The DCX squad have requested the ability to call cloudbuild from spinnaker. This feature has been tested as a spike. It can be enabled with testing from the customer. We will work with Andrei to test this\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-1005", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "onboard DCX to test spinnaker triggered cloudbuilds ", "updated": "2019-09-17T08:39:55+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-1004": {"assignee": null, "created": "2019-08-19T13:55:48+10:00", "creator": "castanoa", "description": "This will potentially simplify the permissions model of spinnaker.\u00a0\r\n\r\n[https://www.spinnaker.io/setup/security/authorization/pipeline-permissions/]\r\n\r\nThis is a potential breaking change. See below for more details.\r\n\r\n**Acceptance**\r\n * Application permissions are not needed anymore.\r\n * Permissions are given per pipeline\r\n * `Run As` accounts are not needed anymore\r\n * Existing pipelines are migrated to the new model\r\n\r\n---------------------------------------------------------------------------\r\n\r\nI did a spike on it with this results:\r\n * It is a change that need to be rolled out *in* *sync with our customers* because it *will change* their pipelines, so testing needs to be done.\r\n * It doesn't work out of the box. The *-local files are only copied into halyard when the init container runs, which is not the case in a re deploy. Workaround is to manually delete halyard, wait for it to come up and run `hal deploy apply`\r\n * The Spinnaker UI is cached and doesn't update with the new fields. I had to force refresh for them to appear. Investigate how to do this better.\r\n * The migration doesn't seem to work. The pipelines permissions are not pre-populated as expected. Investigate this.\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-1004", "labels": [], "lastViewed": "2019-11-22T11:43:23.448000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Enable Pipeline Permissions", "updated": "2019-11-22T11:43:22+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-1003": {"assignee": "blackm", "created": "2019-08-16T09:09:55+10:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-1003", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Prioritise setting up Spinnaker in individual namespaces", "updated": "2019-08-20T16:39:01+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1002": {"assignee": "agarwas2", "created": "2019-08-16T08:29:15+10:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-1002", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Meeting to kickstart DC stack migration plan", "updated": "2019-08-20T16:43:41+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-1001": {"assignee": "hidera", "created": "2019-08-15T16:22:03+10:00", "creator": "hidera", "description": "see PIPS-1000\r\n\r\n\u00a0\r\n\r\nWe currently have a \"generic\" remote repo setup to mirror package repositories for Alpine linux.\r\n\r\n\u00a0\r\n\r\nHowever there are issues with this, that we are going to require a workaround for.\r\n\r\n\u00a0\r\n\r\nThe issue is that when you have a \"generic\" remote, it doesn't know which files are \"metadata\" files (such as the index of package information), and once downloaded, it never gets updated.\r\n\r\n\u00a0\r\n\r\nSpecifically for Alpine the file APKINDEX.tar.gz is involved.\r\n\r\n\u00a0\r\n\r\nWhen Alpine update versions of the package, it appears they: update this index file, upload new version of the package, remove old version of the package.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nThis essentially makes generic remote repos unusable for Alpine Linux packages unless we implement workarounds such as: api deleting relevant file from cache, artifactory plugin that can \"expire\" specific files forcing them to be updated.\r\n\r\n\u00a0\r\n\r\nworkarounds:\r\n * api call to delete relevant file from cache, before trying to update it\r\n * use plugin\u00a0expireFilesMetadata as specified here:\u00a0[https://www.jfrog.com/jira/browse/RTFACT-9985]\u00a0to force expiration of the metadata file APKINDEX.tar.gz\r\n\r\nCurrent manual workaround: manually delete from cache via webapp", "fixVersions": [], "issuetype": "Bug", "key": "CNPS-1001", "labels": ["art"], "lastViewed": "2019-11-22T12:03:32.134000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "Workaround for Alpine remote repo package metadata frozen", "updated": "2019-11-22T12:03:42+11:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-1000": {"assignee": "hidera", "created": "2019-08-15T16:20:42+10:00", "creator": "hidera", "description": "We currently have a \"generic\" remote repo setup to mirror package repositories for Alpine linux.\r\n\r\nThis doesn't actually work and we require JFrog to implement a \"Alpine Linux\" type of remote repos similar to how there is a \"Debian Linux\" type of remote repos.\r\n\r\nOther people have requested it in the past:\u00a0[https://www.jfrog.com/jira/browse/RTFACT-9985]\r\n\r\n\u00a0\r\n\r\nHowever there are issues with this, that we are going to require a workaround for.\r\n\r\n\u00a0\r\n\r\nThe issue is that when you have a \"generic\" remote, it doesn't know which files are \"metadata\" files (such as the index of package information), and once downloaded, it never gets updated.\r\n\r\n\u00a0\r\n\r\nSpecifically for Alpine the file APKINDEX.tar.gz is involved.\r\n\r\n\u00a0\r\n\r\nWhen Alpine update versions of the package, it appears they: update this index file, upload new version of the package, remove old version of the package.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nThis essentially makes generic remote repos unusable for Alpine Linux packages unless we implement workarounds such as: api deleting relevant file from cache, artifactory plugin that can \"expire\" specific files forcing them to be updated.\r\n\r\n\u00a0\r\n\r\nSee PIPS-1001 for workaround.", "fixVersions": [], "issuetype": "Bug", "key": "CNPS-1000", "labels": ["art"], "lastViewed": "2019-11-22T11:57:51.680000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Request Alpine remote repo support from JFrog", "updated": "2019-11-22T12:04:09+11:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-999": {"assignee": "tanga", "created": "2019-08-15T10:16:37+10:00", "creator": "steenkaj", "description": "The licenses for artifactory.gcp.anz as set to expire on September 10th.\r\n\r\nAC: Action required to apply the new licenses before that date\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-999", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "steenkaj", "status": "Story Done", "summary": "Artifactory Licence update", "updated": "2019-09-17T08:39:52+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-998": {"assignee": "tanga", "created": "2019-08-14T17:27:06+10:00", "creator": "tanga", "description": "*Description*\r\nCurrently cloudbuild has a step that references an image in launchpad.  This should be moved to reference Artifactory.\r\n\r\nhttps://github.service.anz/ex/spin-config/blob/master/cloudbuild.yaml\r\n{code:yaml}\r\n<SNIPPET>\r\n\r\n- name: gcr.artifactory.gcp.anz/cloud-builders/gcloud\r\n  id: 'Extract the IPs of the target clusters to check connectivity'\r\n  entrypoint: 'sh'\r\n  args:\r\n  - '-c'\r\n  - |\r\n    cat validate.tpl | sed s/_LAUNCHPAD_PROJECT_ID/$_LAUNCHPAD_PROJECT_ID/g > validate.yaml\r\n    echo \"\" >> ip-list;\r\n    echo \"\" >> kubeconfig-ip-map;\r\n    for file in out/kubeconfs/*/*; \r\n    do\r\n      target=`cat $file | grep https: | cut -d / -f 3 | cut -d : -f 1 | tr -d '\"'`; \r\n      echo  $file - $target  >> kubeconfig-ip-map;\r\n      echo $target >> ip-list; \r\n    done  \r\n{code}\r\n\r\nhttps://github.service.anz/ex/spin-config/blob/master/validate.tpl\r\n{code:yaml}\r\napiVersion: batch/v1\r\nkind: Job\r\nmetadata:\r\n  name: validate-kubefiles\r\n  labels:\r\n    app: validate-kubefiles\r\nspec: \r\n  template:    \r\n    spec:\r\n      containers:\r\n      - name: validate-kubefiles\r\n        image: asia.gcr.io/_LAUNCHPAD_PROJECT_ID/alpine:3.6\r\n        command: [\"/bin/sh\"]\r\n        args: [\"-c\", \"for IP in `cat /validate/ip-list` ; do nc -z -w 2 $IP 443; if [[ $? -ne 0 ]]; then echo problem with $IP; exit 1; fi; done ; exit 0\"]\r\n        volumeMounts:\r\n          - name: validate-ip-list\r\n            mountPath: /validate\r\n      volumes:\r\n        - name: validate-ip-list\r\n          configMap:\r\n            name: validate-ip-list        \r\n      restartPolicy: \"Never\"\r\n{code}\r\n\r\n*Acceptance Criteria*\r\n* Launchpad image reference repointed to corresponding Artifactory image.\r\n* Remove variable from Terraform trigger.\r\n* spin-config runs successfully in DEV/STG/PROD.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-998", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Remove launchpad image from spin-config cloudbuild", "updated": "2019-09-17T08:39:52+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-997": {"assignee": "castanoa", "created": "2019-08-13T15:59:24+10:00", "creator": "tanga", "description": "Suspect some alerts are still going to da@anz.com, need to move them over to DAPipelineAlerts@anz.com.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-997", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Fix alerts to use DAPipelineAlerts@anz.com", "updated": "2019-10-21T09:15:12+11:00", "estimate": 1.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-996": {"assignee": "agarwas2", "created": "2019-08-13T13:41:34+10:00", "creator": "brekelj1", "description": "A production Artifactory deployment faced a bump in the road. The Artifactory HA members did not start because a startup script failed because it had insufficient permissions to write to /var/org/jfrog/artifactory . After disabling injection of the logback.xml into /opt/jfrog/artifactory/etc/logback.xml ([https://github.service.anz/ex/engineering-acceleration-infrastructure/commit/a9496ba7b537c02aa6f3ae28817dcd9a32ceacc4]), the Artifactory HA members started successfully.\r\n\r\nThe permission issue was not encountered in a previous deployment because StatefulSet pods merely restarted with previously initialized volumes, instead of being created with empty volumes.\r\n\r\nAC:\r\n * Enable logback.xml and JMX monitoring again that was disabled in commits, and merge it in master.\r\n * After the above changes: when deleting the artifactory namespace (so we can do a \"fresh\" Kubernetes deployment), no permission issue occurs and Artifactory works as expected.\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-996", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "brekelj1", "status": "Backlog", "summary": "Artifactory Stackdriver Logging Permissions Root Cause Analysis", "updated": "2019-09-23T13:50:34+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-995": {"assignee": "brekelj1", "created": "2019-08-13T10:47:36+10:00", "creator": "brekelj1", "description": "Since we released JMX metrics on Artifactory, it is producing log entries like the following:\r\n{code:java}\r\n2019-08-12 17:22:31.606 AEST\r\nError in attempt to update metric descriptor googleapi: Error 400: Field metricDescriptor.labels[0].key had an invalid value of \"_type\": Label key contains invalid characters., badRequest\r\nExpand all | Collapse all {\r\n insertId: \"f5k4fd2kzv9wpep1o\" \r\n jsonPayload: {\u2026} \r\n logName: \"projects/anz-ex-services-prod-4525d2/logs/stderr\" \r\n metadata: {\u2026} \r\n receiveTimestamp: \"2019-08-12T07:22:37.090784894Z\" \r\n resource: {\u2026} \r\n severity: \"ERROR\" \r\n sourceLocation: {\u2026} \r\n timestamp: \"2019-08-12T07:22:31.606234Z\" \r\n}{code}\r\nAlthough these errors are not critical and safe to ignore, they are misleading and spammy.\r\n\r\nThis issue is about ensuring these logs are not produced anymore. Possible solutions:\r\n\r\nAccept criteria:\r\n * Investigate whether we can prevent the above logs from being output.\r\n * If feasible, code changes to avoid the above logs are merged into master and released in PROD, otherwise a justification for why is is unfeasible is given in this ticket.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-995", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Backlog", "summary": "Artifactory JMX error logs", "updated": "2019-09-23T13:50:34+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-993": {"assignee": "steenkaj", "created": "2019-08-12T11:53:32+10:00", "creator": "headenj1", "description": "The licenses for artifactory.gcp.anz as set to expire on September 10th.\r\n\r\nAction required to renew these before that date\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-993", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Artifactory Licence renewal", "updated": "2019-08-20T16:43:40+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-992": {"assignee": "agarwas2", "created": "2019-08-08T16:50:34+10:00", "creator": "agarwas2", "description": "A few users reported errors while trying to pull docker images, specifically \r\n\r\nhub.artifactory.gcp.anz/forgerock/git:6.0.0\r\ngcr.artifactory.gcp.anz/cloud-builders/gcloud:latest\r\n\r\nThis happened just after [~dugalp] reported that he saw issues with the hairpin proxy. Potentially related to that but further investigation needed. \r\n\r\nIssue was resolved by zapping the cache for gcloud and deleting the forgerock from the hub cache. ", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-992", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Investigate errors with docker pull", "updated": "2019-09-17T08:39:51+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-991": {"assignee": "castanoa", "created": "2019-08-08T09:29:00+10:00", "creator": "castanoa", "description": "The reason is that it can't find config map kong-stdout-v000\r\n\r\nIf I delete the config map, it works for a while but the error come back again.\r\n\r\nThis logs shows the error:\r\n\r\nhttps://console.cloud.google.com/logs/viewer?interval=PT1H&project=anz-ex-services-prod-4525d2&organizationId=380471816720&minLogLevel=0&expandAll=false&timestamp=2019-08-07T06:28:04.781000000Z&customFacets=&limitCustomFacetWidth=true&scrollTimestamp=2019-08-07T06:27:32.972766453Z&advancedFilter=resource.type%3D%22k8s_container%22%0Aresource.labels.project_id%3D%22anz-ex-services-prod-4525d2%22%0Aresource.labels.location%3D%22australia-southeast1%22%0Aresource.labels.cluster_name%3D%22anz-ex-services-prod-gke%22%0Aresource.labels.namespace_name%3D%22csp-spinnaker%22%0A%22kong-stdout-v000%22&dateRangeStart=2019-08-07T05:28:04.781Z", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-991", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Deployment of sit-integration-api-gateway failing", "updated": "2019-08-20T16:43:40+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-990": {"assignee": null, "created": "2019-08-07T15:47:54+10:00", "creator": "tanga", "description": "[~zhangs6]\u00a0from CSP has requested we enable the http file artifact type in Spinnaker.\r\n\r\n*Slack message*\r\n{code}\r\nStanley Zhang 14:33\r\nre: the http file artifact, we have values files which we use when baking the manifest, right now they\u2019re coming from gcs, and our helm chart is coming from artifactory\r\nwe\u2019d like to get these files (which are generated from ci and should be being versioned, checksum\u2019d, etc) from artifactory\r\nthe contents are not sensitive within anz and unauthenticated pull from artifactor will work in ouir case\r\n{code}\r\n\r\n*Tasks*\r\n* Investigate how to enable and configure accordingly in spin-config\r\n* https://www.spinnaker.io/setup/artifacts/http/\r\n\r\n*Acceptance Criteria*\r\n* Spinnaker pipeline can pull and bake from Artifactory via URL\r\n* Deployed to DEV/STG/PROD", "fixVersions": [], "issuetype": "Story", "key": "CNPS-990", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Backlog", "summary": "Enable http artifact type", "updated": "2019-09-23T13:50:32+10:00", "estimate": null, "epic_ref": "CLS-545", "epic_name": "", "diff_to_upstream": []}, "CNPS-989": {"assignee": "tanga", "created": "2019-08-07T15:42:01+10:00", "creator": "tanga", "description": "[~zhangs6] requested helm artifactory to be configured to: https://artifactory.gcp.anz:443/artifactory/csp-helm-local/ and to remove the test Artifactory repos used for testing via PIPS-980\r\n\r\n*Tasks*\r\n* Add https://artifactory.gcp.anz:443/artifactory/csp-helm-local/ to helm config.\r\n* Remove https://artifactory.gcp.anz/artifactory/omni-helm-snapshots-virtual/ from helm config\r\n* Delete following repos from Artifactory:\r\n** https://artifactory.gcp.anz:443/artifactory/omni-helm-snapshots/\r\n** https://artifactory.gcp.anz:443/artifactory/omni-helm-snapshots-virtual/", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-989", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Spinnaker - configure helm artifactory repo for CSP", "updated": "2019-08-20T16:43:38+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-988": {"assignee": "castanoa", "created": "2019-08-07T12:35:47+10:00", "creator": "castanoa", "description": "Prod incident:\u00a0INC1475166", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-988", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Redis production ran out of space", "updated": "2019-08-20T16:43:38+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-987": {"assignee": null, "created": "2019-08-07T12:15:06+10:00", "creator": "clarker", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-987", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Closed", "summary": "[Spinnaker] Investigate cause of Spinnaker memory/performance issues", "updated": "2019-10-30T14:31:42+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-986": {"assignee": "sarkers1", "created": "2019-08-07T11:33:42+10:00", "creator": "agarwas2", "description": "Artifactory downloads artifacts from remote repositories using the \"hairpin\" proxy in the ANZ perimeter. Every time an artifact is downloaded artifactory writes a log indicating the speed of download. This speed should be extracted as a metric and tracked to be alerted about performance issues with the hairpin proxy\r\n\r\nAn example of such a log message can in the attached screenshot. The query to retrieve that is below \r\n\r\nresource.type=\"k8s_container\"\r\nresource.labels.namespace_name=\"artifactory\"\r\ntextPayload:provisioning-b342 \r\n\r\n(the text payload field might need to be modified to be fit for the task)\r\n\r\nAcceptance Criteria - \r\n\r\n# Create a distribution metric from the log message that extracts the downloaded speed. \r\n# Metric should be visible in \"Logs Based Metrics\" section in Google Console\r\n\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-986", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create log metric that tracks download speeds for artifactory remote artifacts", "updated": "2019-11-13T13:18:41+11:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-985": {"assignee": "castanoa", "created": "2019-08-06T13:35:16+10:00", "creator": "castanoa", "description": "**Acceptance**\r\n * Spinnaker helm chart is in version\u00a01.14.0\r\n * Spinnaker config is updated as expected", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-985", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Upgrade spinnaker to latest helm chart", "updated": "2019-09-17T08:39:49+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-984": {"assignee": null, "created": "2019-08-05T17:07:45+10:00", "creator": "tanga", "description": "*Background*\r\n As part of PIPS-980 we have enabled the Helm chart artifact type.\r\n\r\nCurrently set in [https://github.service.anz/ex/spin-config/blob/master/internal-config/production.halconfig:]\r\n{code:java}\r\n    helm:\r\n      enabled: true\r\n      accounts:\r\n      - name: omni-helm-snapshots-virtual\r\n        repository: https://artifactory.gcp.anz/artifactory/omni-helm-snapshots-virtual/\r\n{code}\r\nIt's not using the customer-config pattern for pubsub as this is a static list that will be shared across all customers - ie a dropdown list of all helm virtual repos in Artifactory (Spinnaker has no RBAC to filter this list).\r\n\r\n*Scope*\r\n This ticket is to automate the population of the helm account config as follows:\r\n * Query Artifactory for Helm charts virtual repos\r\n * Update Spinnaker config file (/spin-config/internal-config/production.halconfig)\r\n ** Suggest doing this by extracting static values into separate yaml file and using ytt to merge (see ytt snippet below)\r\n ** Single yaml file per dev/stg/prod - generated by script in first dot point above.\r\n ** Need to refactor prod logic to use /internal-config (currently points to /customer-config only)\r\n{code:java}\r\nhttps://get-ytt.io/#example:example-multiple-data-values\r\n\r\nconfig.yml\r\n  #! it's useful sometimes to split data values\r\n  #! into multiple files and have them be combined\r\n  #! before templating happens, for example,\r\n  #! for splitting default and production values\r\n\r\n  #@ load(\"@ytt:data\", \"data\")\r\n\r\n  accounts: #@ data.values.helmAccounts\r\n\r\nvalues-defaults.yml\r\n  #@data/values\r\n  ---\r\n  helmAccounts:\r\n    - name: spinnaker-helm-virtual-dev\r\n      repository: https://artifactory-dev.ex.gcpnp.anz:443/artifactory/spinnaker-helm-virtual/\r\n    - name: spinnaker-helm-virtual-stg\r\n      repository: https://artifactory-stg.ex.gcpnp.anz:443/artifactory/spinnaker-helm-virtual/\r\n{code}\r\n\r\n*Acceptance Criteria*\r\n * Helm repo config automatically generated via script.\r\n ** Deployment of spin-config aligns Spinnaker Helm Artifact dropdown to Helm virtual repos in Artifactory.\r\n * Deployed to production.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-984", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Backlog", "summary": "Automate helm repository account config", "updated": "2019-11-07T14:58:20+11:00", "estimate": null, "epic_ref": "CLS-545", "epic_name": "", "diff_to_upstream": []}, "CNPS-983": {"assignee": null, "created": "2019-08-05T16:27:24+10:00", "creator": "clarker", "description": "Currently: staging-* and prod-*\r\n\r\nAC: Should be\u00a0staging-dashboards-* and prod-dashboards-*.\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-983", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Closed", "summary": "Stackdriver Dashboards git tag should be more specific", "updated": "2019-08-20T16:43:37+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-982": {"assignee": "kuzhinjr", "created": "2019-08-05T15:25:17+10:00", "creator": "clarker", "description": "logback.xml\r\n\r\nactual:\r\n\r\n{{<!--}}\r\n {{See README.md for information on how this logback.xml should be updated.}}\r\n {{-->}}\r\n {{<?xml version=\"1.0\" encoding=\"UTF-8\"?>}}\r\n\r\nexpected:\r\n\r\n{{<?xml version=\"1.0\" encoding=\"UTF-8\"?>}}\r\n{{<!--}}\r\n{{See README.md for information on how this logback.xml should be updated.}}\r\n{{-->}}", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-982", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Story Done", "summary": "Fix comment in logback.xml", "updated": "2019-08-20T16:43:37+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-981": {"assignee": "castanoa", "created": "2019-08-05T11:54:24+10:00", "creator": "castanoa", "description": "This has been experienced by several teams. Try to find a way to improve the deployment performance.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-981", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spinnaker is taking 10 mins to refresh cache", "updated": "2019-08-20T16:43:36+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-980": {"assignee": "tanga", "created": "2019-08-02T13:04:19+10:00", "creator": "tanga", "description": "*Issue*\r\n[~zhangs6] reported that his Spinnaker pipeline cannot pull a helm chart from artifactory.\r\n* Using custom type in Spinnaker pipeline with reference url.\r\n** reference url: https://artifactory.gcp.anz:443/artifactory/omni-generic-snapshots/apply-frontend/deployments/build_trigger.tar.gz\r\n** webhook (which is working fine): https://spinnaker-api.gcp.anz/webhooks/webhook/apply-fuschia\r\n* Pointing to generic (not helm) type Artifactory repo.\r\n\r\nSlack message\r\n{code}\r\nStanley Zhang 17:28\r\nHi ex, have a question about using artifacts from gcp artifactory with spinnaker - i have a helm chart stored on artifactory (`https://artifactory.gcp.anz/artifactory/omni-generic-snapshots/apply-frontend/deployments/build_trigger.tar.gz`) and i have defined an artifact in our spinnaker pipeline as type http/file with the URL to the file as the reference.\r\n\r\ni am getting this in the bake manifest stage\r\n\"context\": {\r\n        \"exception\": {\r\n          \"details\": {\r\n            \"error\": \"timeout\",\r\n            \"errors\": [],\r\n            \"kind\": \"NETWORK\"\r\n          },\r\n          \"exceptionType\": \"RetrofitError\",\r\n          \"operation\": \"createBake\",\r\n          \"shouldRetry\": false,\r\n          \"timestamp\": 1564635601495\r\n        },\r\n(edited)\r\nthe pipeline works with the same artifact in gcs\r\n{code}\r\n\r\n*Triage*\r\nSat with [~zhangs6] to triage:\r\n* Suspect it's due to Spinnaker not being able to pull the artifact using a custom type.\r\n* Looking in spinnaker logs, can't see any useful trace information\r\n* Decided best use of effort is to enable helm chart artifact type as I know this will work vs trying to *fix* custom type setup (not sure if this will even work).\r\n* curl on reference url works fine: {noformat}curl -v --noproxy \"*\" https://artifactory.gcp.anz:443/artifactory/omni-generic-snapshots/apply-frontend/deployments/build_trigger.tar.gz{noformat}\r\n\r\nNext steps\r\n* Create Artifactory local and virtual helm chart repos\r\n* Configure Spinnaker to enable helm chart type with above repos\r\n* Configure Spinnaker pipeline accordingly", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-980", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Spinnaker - enable helm chart artifact type for omni", "updated": "2019-08-20T16:43:35+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-979": {"assignee": "castanoa", "created": "2019-08-01T16:32:17+10:00", "creator": "castanoa", "description": "ANZx builds are timing out when trying to deploy to spinnaker.\u00a0\r\n\r\nSame is happening to OB.\r\n\r\nCould be related to VPC service controls.\r\n\r\nInvestigate", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-979", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "ANZx cant deploy to Spinnaker because of timeout", "updated": "2019-08-20T16:43:35+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-978": {"assignee": null, "created": "2019-08-01T14:07:48+10:00", "creator": "hutchisc", "description": "The github status name under which the cloud build status is recorded is hardcoded as \"Google Cloud Builds\". We previously tried to make it unique by using a Build ID, but it turns out the name is used in the github UI for branch protection so a non-human-readable and totally unique name broke existing workflows.\r\n\r\nInstead we should be able to name cloud build configs and triggers so they have human readable names and can be differentiated when multiple builds run on the same commit, but they should not be so unique that every build has a different name, so it can be used as a branch protection gate.\r\n\r\nProposed solution documented in a design doc: https://github.service.anz/ex/gitsync-code/pull/37", "fixVersions": [], "issuetype": "Story", "key": "CNPS-978", "labels": [], "lastViewed": "2019-11-25T10:03:46.420000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Make GitHub status name customisable", "updated": "2019-11-22T16:59:33+11:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-977": {"assignee": "hidera", "created": "2019-08-01T10:46:03+10:00", "creator": "brekelj1", "description": "AC:\r\n1. Source code of all terraform folder in artifactory-config repository is works with terraform 0.12, and defines the same resources as the 0.11 source code.\r\n2. Changes tested in DEV.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-977", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Story Done", "summary": "artifactory-config upgrade to terraform 0.12", "updated": "2019-10-21T09:16:28+11:00", "estimate": 2.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-976": {"assignee": "brekelj1", "created": "2019-08-01T10:45:59+10:00", "creator": "brekelj1", "description": "AC:\r\n1. Source code of all terraform folder in artifactory-config repository is works with terraform 0.12, and defines the same resources as the 0.11 source code.\r\n2. Changes tested in DEV.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-976", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Closed", "summary": "artifactory-config upgrade to terraform 0.12", "updated": "2019-08-20T16:43:34+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-975": {"assignee": "hidera", "created": "2019-08-01T09:18:34+10:00", "creator": "agrawad", "description": "In preparation for prod artifactory automation, we need to test the prod artifactory repo configuration on dev artifactory using the pipeline.\r\n\r\nThis test will give us confidence to apply the automation in prod.\r\n\r\n\u00a0\r\n\r\nA/C\r\n\r\nRepo configuration from prod artifactory can successfully be applied to dev.\r\n\r\ntest wherever possible by downloading artefacts using remote repo and/or uploading artefacts to local repo.\r\n\r\nCreate, edit and delete repo using the code to validate the code.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-975", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Test prod artifactory config for repo on Dev artifactory", "updated": "2019-09-17T08:39:51+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-974": {"assignee": null, "created": "2019-08-01T07:45:24+10:00", "creator": "hutchisc", "description": "It has been observed that the archive-ubuntu remote repository set up in GCP prod artifactory performs rather slowly when fetching from the remote URL. Adding an au-archive-ubuntu remote repository to a remote URL targeting an Australian mirror saw much faster speeds.\r\n\r\nNow we are seeing slow speeds with the debian-snapshot remote repository.\r\n\r\nThe internet is not that slow that we should be so slow to a mirror in another country. This needs to be investigated to find the root cause for the slowness.\r\n\r\nTODO([~hidera]): Add more detail to this description from current observations.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-974", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Poor speeds to non-au remote URLs", "updated": "2019-09-12T22:17:39+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-973": {"assignee": "agarwas2", "created": "2019-07-31T16:44:48+10:00", "creator": "agarwas2", "description": "Audit logging for different services can be enabled to get valuable usage information. This story is to enable ADMIN_READ, DATA_WRITE and DATA_READ events logging for all services in our GCP projects below\r\n\r\nanz-ex-services-dev\r\nanz-ex-launchpad-dev\r\nanz-ex-services-stg\r\nanz-ex-services-prod\r\nanz-ex-launchpad-prod\r\n\r\nThis needs to be done via terraform using an undocumented resource - more information here https://github.com/terraform-providers/terraform-provider-google/issues/3066", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-973", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Enable audit logging ", "updated": "2019-08-20T16:43:33+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-972": {"assignee": null, "created": "2019-07-31T14:46:09+10:00", "creator": "hutchisc", "description": "Sometimes transient failures prevent a sync from working. We should add retries to the sync if it fails.\r\n{code}\r\nfatal: unable to access 'https://github.service.anz/csp/csp-shared-dockerfiles/': Could not resolve host: github.service.anz\r\n{code}\r\nis an example of a recent failure. The syncs on either side worked - this looks like just a blip in DNS. A retry probably would have seen the sync work.\r\n\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-972", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Add retry for syncs", "updated": "2019-09-12T22:26:25+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-971": {"assignee": "clarker", "created": "2019-07-30T14:06:24+10:00", "creator": "brekelj1", "description": "Dashboards can be deployed into production as per PIPS-927, but as per PIPS-927 DEV/STG/PROD all use the API key from DEV. This is risky because if someone deletes the DEV API key deployments to PROD stop working.\r\n\r\nThis issue addresses creating one API key for each environment (DEV/STG/PROD).\r\n\r\nAC:\r\n- Dashboard automation is using a PROD API key during PROD deployments\r\n- Code changes are merged into master", "fixVersions": [], "issuetype": "Story", "key": "CNPS-971", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Backlog", "summary": "Dashboards - API key in STG/PROD", "updated": "2019-09-23T13:50:34+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-970": {"assignee": "clarker", "created": "2019-07-30T11:20:39+10:00", "creator": "clarker", "description": "Acceptance Criteria:\r\n * Code changes to successfully export Kubernetes metrics into Stackdriver, merged into master\r\n * Tested and deployed in DEV/STG/PROD\r\n * Documented\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-970", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "clarker", "status": "Closed", "summary": "Get Kubernetes Metrics into Stackdriver", "updated": "2019-08-20T16:43:33+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-969": {"assignee": "hutchisc", "created": "2019-07-29T16:14:51+10:00", "creator": "hutchisc", "description": "Debian container images are very common, so we should set up remote repositories for Debian archives.\r\n\r\nThe current set of URLs we'll probably need are:\r\n* {{deb.debian.org}} - backed by a CDN\r\n* {{snapshot.debian.org}} - timelocked package versions for reproducible builds\r\n* {{security.debian.org}} - this might not be needed as I think {{deb.debian.org}} also serves it\r\n* {{archive.debian.org}} - for older archived releases\r\n\r\nThese may need whitelisting in the proxy if not already done.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-969", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Add Debian remote repositories to gcp artifactory", "updated": "2019-08-20T16:43:31+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-968": {"assignee": "clarker", "created": "2019-07-29T16:03:38+10:00", "creator": "macdonl4", "description": "Certain pod state metrics (such as the current status of a pod) are not in the core set of pod metrics provided by GKE's StackDriver integration.\r\n\r\nSuggested solution:\u00a0[https://github.com/kubernetes/kube-state-metrics]\r\nh3. Acceptance Criteria\r\n * An alert can be created that triggers whenever all of a given workload's pods are unhealthy for a certain period of time.\r\n * The integration of the solution is in source code.\r\n * The integration of the solution is decoupled from other namespaces.\r\n * Code changes to successfully export Kubernetes state metrics into Stackdriver, merged into master.\r\n * Solution is tested and deployed in DEV/STG/PROD.\r\n * Design is documented.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-968", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Story Done", "summary": "Integrate pod state metric monitoring into StackDriver", "updated": "2019-08-20T16:43:22+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-967": {"assignee": "headenj1", "created": "2019-07-29T14:10:37+10:00", "creator": "hutchisc", "description": "[~limk22] reported on slack (#eng-acceleration):\r\n{quote}Artifactory says \"This item is not cached\" - any idea why? \r\nhttps://artifactory.gcp.anz/artifactory/webapp/#/artifacts/browse/tree/General/backbase/net/minidev/json-smart/maven-metadata.xml\r\nHowever I can download the file from backbase https://repo.backbase.com/repo/net/minidev/json-smart/maven-metadata.xml to my laptop{quote}\r\n\r\nWhen trying to Download the file via the artifactory UI, the response is\r\n{code}\r\n{\r\n  \"errors\" : [ {\r\n    \"status\" : 404,\r\n    \"message\" : \"403\"\r\n  } ]\r\n}\r\n{code}\r\n\r\nThis is blocking Katherine and her team from getting work done that needs the backbase repo.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-967", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Backbase artifactory repo is failing to return some files", "updated": "2019-08-20T16:43:30+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-966": {"assignee": "tanga", "created": "2019-07-29T11:22:00+10:00", "creator": "tanga", "description": "*Tasks*\r\n * Create CD tool assessment criteria\r\n * Assess Harness and Spinnaker against criteria\r\n * Document findings\r\n\r\n*Reference material*\r\n Install guide:  [^Harness On-Premise - Kubernetes Version.docx] \r\nURL: [https://harness-dev.ex.gcpnp.anz|https://harness-dev.ex.gcpnp.anz/]\r\n Login / Password: andy.tang@anz.com / admin\r\n\r\nLab 1 - attached [^Kubernetes V2 Continuous Delivery Workshop (Partner Version).html] \r\nLab 2 - [https://docs.harness.io/article/zim6pw6hd5-blue-green-workflows]\r\nLab 3 - attached  [^Helm Continuous Delivery Workshop (Partner Version) (3).html] \r\n\r\n\r\nMore reference info:\r\n [https://docs.harness.io/article/ii558ppikj-helm-deployments-overview]\r\n [https://docs.harness.io/article/crzdm3458j-kubernetes-workflow-commands]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-966", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Harness POC", "updated": "2019-10-21T09:14:44+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-965": {"assignee": "hutchisc", "created": "2019-07-29T10:32:09+10:00", "creator": "hutchisc", "description": "[~zhangs6] has requested that the {{csp_buildbot}} GCP prod artifactory user be able to overwrite artifacts in the {{omni-*-snapshots}} repo - more specifically, {{omni-generic-snapshots}}, {{omni-maven-snapshots}}, {{omni-snapshots}}.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-965", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "csp_buildbot needs artifactory overwrite perms on omni-*-snapshots", "updated": "2019-08-20T16:43:30+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-964": {"assignee": "brekelj1", "created": "2019-07-29T10:19:11+10:00", "creator": "brekelj1", "description": "The security team requires that we have Audit Logs and alerts on authorization of specific APIs in GCP, before they can approve additional IAM permissions.\r\n\r\n-To enable monitoring (PIPS-927) we require EX's admins to have access to the Service Usage API so they can create API keys.- (we can use the DEV API key in all projects)\r\n\r\nAC:\r\n1. Code changes and pipeline to enable Service Usage API in DEV/STG/PROD merged into master (e.g. terraform).\r\n2. Ability to view Audit Logs for enabled Service Usage APIs in DEV/STG/PROD.\r\n3. Answer to the question: how can we alert on invalid access requests?\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-964", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Closed", "summary": "Audit logging", "updated": "2019-08-20T16:43:29+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-963": {"assignee": null, "created": "2019-07-29T09:04:32+10:00", "creator": "hutchisc", "description": "The shell script at the centre of gitsync - {{sync_repos.sh}} logs json messages by manually constructing a json string. It uses the field name {{message}} for the log message. The rest of gitsync uses {{msg}} as the field for the message (as defined by the Go logrus logger package we use).\r\n\r\nThese should be unified to use the same field name.\r\n\r\nOne place where this causes issues is with splunk. When running the search:\r\n{code}\r\nindex=au_k8s_default_app k8s:labels:app::launchpad\r\n{code}\r\nyou can see the messages from {{sync_repos.sh}}. But if you try to filter out the heartbeat messages (or any other really) with\r\n{code}\r\nindex=au_k8s_default_app k8s:labels:app::launchpad msg != \"heartbeat\"\r\n{code}\r\nthat also excludes the messages from {{sync_repos.sh}} presumably because they don't have a {{msg}} field.\r\n\r\nIf we rename {{message}} to {{msg}}, that should not happen.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-963", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Rename log field \"message\" to \"msg\"", "updated": "2019-09-12T22:26:24+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-962": {"assignee": "agarwas2", "created": "2019-07-26T10:54:17+10:00", "creator": "agarwas2", "description": "Update all GKE private authorised networks to ensure compliance with organisations security posture. Additionally with the introduction of VPC service controls GKE master ranges will not be reachable from external IPs without specific access contexts created. \r\n\r\nAcceptance criteria- \r\n\r\n* Change master ranges and remove any public addresses \r\n* List is approved by security partner (get approval on GH)\r\n* Master range is accessible from private cloud build range, User subnets (833/839 and VDI)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-962", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Update master authorised networks for GKE cluster", "updated": "2019-08-20T16:43:29+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-961": {"assignee": "blackm", "created": "2019-07-25T14:02:33+10:00", "creator": "hutchisc", "description": "Sean Duxbury has asked for a way to pull alpine packages through artifactory in the #eng-acceleration channel. This is useful for docker images as that is a very common base image for compact images.\r\n\r\nArtifactory does not support alpine directly, but there is a ticket on JFrog jira describing how to set it up: https://www.jfrog.com/jira/browse/RTFACT-9985?focusedCommentId=68691&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-68691\r\n\r\nWe should do this.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-961", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Add alpine remote repository to gcp artifactory", "updated": "2019-08-20T16:43:32+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-960": {"assignee": null, "created": "2019-07-25T13:39:23+10:00", "creator": "macdonl4", "description": "Artifactory is being backed up through regular DB backups and GCS bucket versioning. A restoration script is needed to automate the various steps to be taken when Artifactory is to be restored.\r\nh3. Acceptance Criteria\r\n * Script takes as input a specific time that a DB backup exists for\r\n * Script checks that no instances of Artifactory are running in GKE before making any changes\r\n * Script reverts all GCS objects (ie. artifacts) to their state at the inputted time\r\n * Script deletes/restores any GCS objects as appropriate if they either didn't exist before or don't exist anymore\r\n * Script performs a DB restore with the backup for inputted time\r\n * Script logs its activities and stores them in some sort of (non-local) persistent storage for auditing purposes", "fixVersions": [], "issuetype": "Story", "key": "CNPS-960", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "macdonl4", "status": "Backlog", "summary": "Create Artifactory restore script", "updated": "2019-09-12T22:17:37+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-959": {"assignee": null, "created": "2019-07-25T11:33:09+10:00", "creator": "sarkers1", "description": "*Problem:*\r\nCurrently, artifactory alerts are created manually using the Stackdriver console(gui).\r\n\r\n*Solution:*\r\nAutomated alerts creation process using terraform.\r\n\r\n*Acceptance Criteria:*\r\n * Create alerts using terraform\r\n * Each alerts specify the conditions, notifications and optional documentation to help the team to resolve the issue\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-959", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Backlog", "summary": "[Artifactory][LogMetrics] Create Stackdriver alerts as code (TF)", "updated": "2019-09-12T22:19:22+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-958": {"assignee": "sarkers1", "created": "2019-07-25T11:13:34+10:00", "creator": "sarkers1", "description": "*Problem:*\r\n\r\nCurrently, Stackdriver doesn't have any Trace data to analyze. However,\u00a0it is important to measure the latency of Artifactory endpoints to detect when a system's performance is not operating within specification.\r\n\r\n*Solution:*\r\n\r\nFind out some suitable optins to show the trace data inside Stackdriver console for artifactory.\r\n\r\n*Acceptance Criteria:*\r\n * Tracing data are showing in Stackdriver.\r\n * Create analysis report to understand the application behavior\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-958", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sarkers1", "status": "Backlog", "summary": "[Artifactory] Tracing with Stackdriver for Artifactory on GKE", "updated": "2019-09-23T13:50:34+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-957": {"assignee": "hidera", "created": "2019-07-25T10:02:29+10:00", "creator": "hidera", "description": "From [~agarwas2]\r\n\r\n\u00a0\r\n\r\n\"We might need to pause the artifactory migration again. @Lex can you have a look at the binary store config for prod artifactory? If you compare it to the config in the version of the helm chart it looks like there is a local eventual-provider which shouldn\u2019t be there. I think that\u2019s causing the files to stay on the PVC because of which artifactory is running out of space. We might need to open an incident to fix it (would guess we might need to manually remove the existing config map)\r\n\r\nAlso opened a google case to investigate why we can\u2019t save dashboards (even thinh couldn\u2019t)\"", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-957", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "artifactory binary-store write to volume issue", "updated": "2019-08-20T16:43:28+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-956": {"assignee": "hidera", "created": "2019-07-23T16:45:12+10:00", "creator": "hidera", "description": "artifactory deploy needs to talk to:\r\n * jfrog docker registry\r\n * jfrog helm charts repo\r\n\r\nWe should have remote repos pointing to these in artifactory.\r\n\r\nThis will require whitelisting the relevant domains.\r\n\r\n\u00a0\r\n\r\nWork around has been to manually upload/push whats needed into 'engx' local repo in artifactory.\r\n\r\nAcceptance: artifactory deploy is not pointing to engx local repos on artifactory", "fixVersions": ["1.1.0"], "issuetype": "Bug", "key": "CNPS-956", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "whitelist domains and create jfrog remotes for artifactory deploy", "updated": "2019-10-21T09:14:41+11:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-955": {"assignee": "vadrevus", "created": "2019-07-23T15:52:44+10:00", "creator": "vadrevus", "description": "As the VPC service controls have been turned on ,the spinnaker deployment trigger fails using external cloud builders.\r\n\r\nThe cloudbuild job for spinnaker in https://github.service.anz/ex/engineering-acceleration-infrastructure needs to be updated to use private cloud builders.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-955", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "Update spinnaker deployment to use private cloud builders", "updated": "2019-08-20T16:43:27+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-954": {"assignee": "hidera", "created": "2019-07-23T12:23:48+10:00", "creator": "hidera", "description": "artifactory cloudbuild deploy steps successfully working utilising private cloudbuild, and not utilising public internet.", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-954", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "PrivateCloudBuild for artifactory deploy", "updated": "2019-08-20T16:43:19+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-953": {"assignee": null, "created": "2019-07-23T07:58:58+10:00", "creator": "hutchisc", "description": "Spinnaker fiat service accounts and their roles have no configuration files with Spinnaker. Front50 has an API for creating/modifying them, and we provision them using shell scripts that run {{curl}} against the API.\r\n\r\nhttps://www.spinnaker.io/setup/security/authorization/service-accounts/ has some of the details.\r\n\r\nThe helper script method is fragile, leaves stuff lying around and is not automated. The stuff lying around comes from when a script is deleted - nothing removes the service account from spinnaker.\r\n\r\nWe can do this with a script that uses json(net) as an input, retrieves the existing service accounts using the API, compares the existing and desired state and makes the changes. This can all be done from a cloudbuild pipeline in {{spin-config}}.\r\n\r\nThe first step is to refactor the current {{spin-config}} cloudbuild, removing all the shell scripting from the YAML file and moving it to a script. We should also build one container image with all the tools needed to run this (gcloud, ytt, jsonnet, etc). The service account helpers can then be added to this script. I expect we can probably get away with a single step in the cloud build.\r\n\r\nA follow-up setup outside the scope of this ticket would be to remove ytt and replace it with jsonnet, now that we will have jsonnet in the {{spin-config}} container image. This has been discussed as a goal for a little while now, so this gives a good opportunity to progress it.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-953", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Closed", "summary": "Convert spinnaker service account helper scripts to json(net)", "updated": "2019-08-20T16:43:28+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-952": {"assignee": "hutchisc", "created": "2019-07-22T17:01:42+10:00", "creator": "hutchisc", "description": "TL;DR We need to add a gocenter ([https://gocenter.io)|https://gocenter.io%29/]\u00a0remote go repo and add that to the virtual go repo at the lowest priority.\r\n\r\nSome go modules published on github & co are not published with the correct metadata. Go proxies are meant to account for this and generate it. Artifactory appears not be a proper Go proxy, and instead relies on the JFrog service gocenter to do it for it. This means we need to add it to the go virtual repo. It should be the lowest priority so we don't hit it unless we really need to.\r\n\r\nBrendan Wreford ([~wrefordb]) can help verify this - he has a test case that fails. The test case has been tested in staging by adding a gocenter remote and a go virtual and using that.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-952", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Go repositories not working 100% from artifactory", "updated": "2019-08-20T16:43:27+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-951": {"assignee": "headenj1", "created": "2019-07-19T15:26:29+10:00", "creator": "hutchisc", "description": "Require generic remote created for PhantomJS Binary mirror as located at: https://cnpmjs.org/downloads\r\n\r\n-As an aside there does already exist a cnpmjs npm mirror configured that also points to https://cnpmjs.org/downloads but that will need to be reconfigured to point to https://registry.npm.taobao.org to ensure that it is functioning as intended.-", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-951", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Add GCP prod artifactory generic remote for PhantomJS Binaries", "updated": "2019-09-17T08:39:44+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-950": {"assignee": "hidera", "created": "2019-07-19T13:40:43+10:00", "creator": "agrawad", "description": "Automate the mechanism to grant permission for the repo for user(s) and groups.\r\n\r\nAcceptance:\r\n - A pull request merge updates Artifactory config\r\n - User(s), groups(s) can be removed from the config.", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-950", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Artifactory - Automate Repo Permissions ", "updated": "2019-10-21T09:14:23+11:00", "estimate": 2.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-949": {"assignee": "agrawad", "created": "2019-07-19T13:36:28+10:00", "creator": "agrawad", "description": "We want to enable all customers to follow a GitOps approach, defining all their config in code and raising pull requests to our repos.\r\n\r\nArtifactory allows configuration via YAML.\r\n\r\nCreate a mechanism whereby a pull request can create & update a repository - but not delete!\r\n\r\nAcceptance:\r\n\r\nOne can create a repo via pull request\r\nOne can update a repo via pull request\r\nOne cannot delete a repo via pull request", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-949", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Artifactory - Automate definition of virtual repositories", "updated": "2019-08-20T16:43:16+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-948": {"assignee": "agrawad", "created": "2019-07-19T13:35:39+10:00", "creator": "agrawad", "description": "We want to enable all customers to follow a GitOps approach, defining all their config in code and raising pull requests to our repos.\r\n\r\nArtifactory allows configuration via YAML.\r\n\r\nCreate a mechanism whereby a pull request can create & update a repository - but not delete!\r\n\r\nAcceptance:\r\n * One can create a repo via pull request\r\n * One can update a repo via pull request\r\n * One cannot delete a repo via pull request", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-948", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Artifactory - Automate definition of remote repositories", "updated": "2019-08-20T16:42:45+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-947": {"assignee": "hutchisc", "created": "2019-07-19T10:50:38+10:00", "creator": "hutchisc", "description": "[~limk22] has asked to have the Backbase maven remote repository added to GCP production Artifactory.\r\n\r\nThe artifact repository is at https://repo.backbase.com/repo/ and will need credentials to be supplied by Katherine when we set it up.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-947", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Add Backbase maven remote repository to Artifactory", "updated": "2019-08-20T16:43:26+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-946": {"assignee": null, "created": "2019-07-17T10:05:38+10:00", "creator": "hutchisc", "description": "Add a pull request template to the gitsync-config repository that asks the submitter to\r\n* Confirm they have followed the instructions in adding-syncpair.md\r\n* Tell them to send their PR to the #ghe-gcs-sync channel\r\n* What else?\r\n\r\nMake these check boxes and reject any review where they are not checked.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-946", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Add PR template for gitsync-config", "updated": "2019-09-12T22:26:23+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-945": {"assignee": "headenj1", "created": "2019-07-17T08:55:45+10:00", "creator": "hutchisc", "description": "The secrets configuration is a bit of a mess - the naming is a bit all over the place.\r\n\r\nUse consistent names:\r\n* ghe-ORG for github enterprise secrets for the organisation ORG\r\n* gcp-PROJECT for GCP secrets for the project PROJECT\r\n\r\nThese should be the kubernetes metadata names of the secrets. We should also name the secret deployment configs the same way. The secret key material should be named {{deployments/secrets/ghe/ORG/token.txt}} and {{deployments/secrets/gcp/PROJECT/key.json}}", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-945", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Refactor secrets config", "updated": "2019-08-20T16:43:26+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-944": {"assignee": null, "created": "2019-07-17T08:24:59+10:00", "creator": "hutchisc", "description": "Gitsync-config should use SOPS or something similar so we can store the secrets it uses encrypted in the repository. These secrets can be decrypted by the deployment pipeline and installed into openshift.\r\n\r\nThis will allow our customers to provide the encrypted secrets to us in a pull request, rather than needing them to come around and airdrop the secrets to us.\r\n\r\nIt also means the deployment pipeline can deploy the secrets, which is currently a manual process.\r\n\r\nIt will also make production deployment simpler as we can have a pipeline that generates the deployment configs for handover to the ops folks. This is a \"maybe\" as I'm not sure about securing the unencrypted secrets in this process.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-944", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Store encrypted secrets in gitsync-config repo", "updated": "2019-09-12T22:26:22+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-943": {"assignee": null, "created": "2019-07-17T07:58:56+10:00", "creator": "hutchisc", "description": "The bamboo plans for building gitsync (https://dcbamboo.service.dev:8443/browse/CLOUD-EXGSC) and deploying the gitsync config (https://dcbamboo.service.dev:8443/browse/CLOUD-EXGTSYN) use some generic container images. The builder uses \"anz-dependencies\" (whatever that is) and the config deployer uses \"ics-terraform\". The config deployed relies on a binary checked into the repository and downloads two more binaries from dcartifactory (which is going away).\r\n\r\nThis is a bit of a mess. The config deployment should have it's own custom image with the binaries it needs (openshift CLI, jsonnet and jq), and the builder should be some sort of standard Go build image (with access to the Global Root CA v2 cert to put into the generated image). This interacts a little with PIPS-906 (Build gitsync on cloud pipeline), which could use the same image.\r\n\r\nThe config deployment image should also have gitsync itself in it, as gitsync has a config validation mode which ensures some additional parts of the config are checked that are not validated by just running jsonnet over the config (such as ensuring that each repository ID is unique).", "fixVersions": [], "issuetype": "Story", "key": "CNPS-943", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Build container image for Bamboo plans", "updated": "2019-09-12T22:26:21+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-942": {"assignee": "castanoa", "created": "2019-07-16T15:51:00+10:00", "creator": "castanoa", "description": "The TLS router currently need to be built by every team and deployed to the GKE cluster.\r\n\r\nIf we have the TLS router in Artifactory, teams won't have to build the image, instead they will reference the Artifactory version.\r\n\r\n*Acceptance*\r\n * TLS router is uploaded to artifactory\r\n * Spin config documentation reflects the new set up", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-942", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Put TLS Router container image in Artifactory", "updated": "2019-08-20T16:43:25+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-941": {"assignee": "castanoa", "created": "2019-07-16T12:08:24+10:00", "creator": "castanoa", "description": "Currently we have a tool to generate kubeconfig files. [https://github.service.anz/ex/spin-config/tree/master/utils/spin-config-generator]\r\n\r\nExpand this tool to generate kube-config files that can be submited via PR to our repo.\r\n\r\n*Acceptance*\r\n * Given a service account and a cluster, the tool generate the spin-config file with the format defined here:\u00a0https://github.service.anz/ex/spin-config/blob/master/docs/onboarding/PR-SELF-SERVICE.md\r\n * The kube-config for that service account is encrypted and added to the file.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-941", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Generate SpinConfig automatically using the existing Kube-config tool", "updated": "2019-08-20T16:43:24+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-940": {"assignee": "castanoa", "created": "2019-07-16T11:57:54+10:00", "creator": "castanoa", "description": "CSP squad has a tool to generate kube config files.\r\n\r\nPort it to our repo so our customer can use it.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-940", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Port Spin-config tool from CSP to our repo", "updated": "2019-08-20T16:43:24+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-939": {"assignee": null, "created": "2019-07-16T10:44:45+10:00", "creator": "hutchisc", "description": "Get a service account for gitsync to use to access github.\r\n\r\nThe current process relies on per-user tokens, whether a personal access token or an oauth token. The latter sort of look like \"gitsync\" tokens because it is associated with a \"Gitsync\" oauth application, but all oauth tokens are delegated permissions from some user that creates the token. The sync process should not rely on a particular user being active in github, particularly as it is not easy to tell which user an oauth token is delegated for. Also, if the user that issued the token loses permission to write to the org's repos, syncing can break in a non-obvious way.\r\n\r\nInstead with a service account set up and gitsync having the creds for that account, users of gitsync would just grant the appropriate privileges to that gitsync user to do its job. No more setup is needed. This will make it much easier to set up new github orgs in gitsync.\r\n\r\nSince github is in prod, the service account will also be in prod (GLOBAL). However, gitsync runs in both nonprod (omni.service.test) and prod (cpaas.service.anz). I'm not sure if we should have a separate service account for each. It seems unnecessary, but security policies may dictate something else.\r\n\r\nWe may be able to create separate credentials for the same account (personal access tokens, or oauth tokens), where we give separate creds to the prod and non-prod instance. This allows the creds for one instance to be revoked without affecting the other instance.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-939", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Get gitsync service account for github", "updated": "2019-09-12T22:26:20+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-938": {"assignee": "hidera", "created": "2019-07-15T10:06:35+10:00", "creator": "hidera", "description": "Reported by both @joel.wood & \"@Vinay Pillai\" on slack.\r\n\r\n\u00a0\r\n\r\nOn specific packages, artifactory returns a 500 error when trying to do a npm install.\r\n\r\n\u00a0\r\n\r\nIf you look at this more closer you get a response like.\r\n\r\n\u00a0\r\n{code:java}\r\n{\r\n  \"errors\" : [ {\r\n    \"status\" : 500,\r\n    \"message\" : \"sharding-cluster can't locate 8b954760ef9f4454c97cd3b33cca74a28f0877eb in any of it's sub providers \"\r\n  } ]\r\n} {code}", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-938", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Artifactory select npm packages unavailable.", "updated": "2019-08-20T16:43:23+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-937": {"assignee": "steenkaj", "created": "2019-07-11T15:04:23+10:00", "creator": "hidera", "description": "See Deepak for more information.\r\n\r\n\u00a0\r\n\r\nNot satisfied with quality of support from recent interactions from JFrog.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-937", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Follow up with JFrog on support issues.", "updated": "2019-08-20T16:43:23+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-936": {"assignee": "blackm", "created": "2019-07-11T15:03:09+10:00", "creator": "hidera", "description": "Including:\r\n * capturing summary of days events\r\n * \"handing over\" to the next days person\r\n * announcing at standup who is on that day and the next\r\n * taking ownership of tickets spanning multiple days", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-936", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Document support roster person process and expectations", "updated": "2019-08-20T16:43:23+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-935": {"assignee": "agrawad", "created": "2019-07-11T12:01:30+10:00", "creator": "agrawad", "description": "In order to build pipeline for Artifactory automation, we need to install Terraform from Artifactory as we cant talk to internet via private cloud build. We need to do that via Artifactory. The URL [https://releases.hashicorp.com/terraform]\u00a0is whitelisted from dev artifactory but not from prod.\r\n\r\n\u00a0\r\n\r\nAC\r\n\r\nURL [https://releases.hashicorp.com/terraform]\u00a0whitelisted for prod Artifactory.\r\n\r\nUpdate whitelist page in confluence.\u00a0https://confluence.service.anz/display/EX/Whitelisted+URLs", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-935", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Whitelist remote repo URL for prod Artifactory", "updated": "2019-08-20T16:43:22+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-934": {"assignee": "clarker", "created": "2019-07-11T11:18:17+10:00", "creator": "brekelj1", "description": "AC:\r\n * Code changes to successfully export JMX metrics of artifactory into stackdriver, merged into master\r\n * Test/Deploy in DEV/STG/PROD.\r\n * If required:\r\n ** Document pattern in artifactory readme ([https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/docs/guides/artifactory/artifactory.md])\r\n ** Raise any subsequent tickets for surfacing the metrics in dashboards (eg if non standard).\r\n\r\nIdeas:\r\n * Prometheus exporter sidecar ([https://github.com/prometheus/jmx_exporter])\r\n * -Artifactory uses the logback framework so might be able to leverage that without a sidecar.- EDIT: not for metrics.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-934", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Story Done", "summary": "Export JMX metrics of Artifactory to Stackdriver", "updated": "2019-08-20T16:43:18+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-933": {"assignee": "kuzhinjr", "created": "2019-07-11T11:06:50+10:00", "creator": "brekelj1", "description": "Investigate how to pipe the Artifactory log files into stackdriver:\r\n\r\nartifactory.log - I believe this already gets piped to stackdriver - verify this.\r\n access.log\r\n request.log\r\n import.export.log\r\n Catalina logs\r\n\r\nNote - Artifactory uses the logback framework so might be able to leverage that without a sidecar.\r\n\r\nReferences\r\n * [https://www.jfrog.com/confluence/display/RTF/Artifactory+Log+Files]\r\n * [https://jfrog.com/blog/love-your-logs-it-pays-off/]\r\n * [https://logback.qos.ch/manual/index.html]\r\n\r\nAC:\r\n * Code changes to exports all 4 system log files to stackdriver are merged into master\r\n * All 4 system logs are visible in stackdriver\r\n * Test/Deploy in DEV/STG/PROD.\r\n * If required:\r\n ** Document pattern in artifactory readme ([https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/docs/guides/artifactory/artifactory.md])\r\n ** Raise any subsequent tickets for surfacing the metrics in dashboards (eg if non standard).", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-933", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Story Done", "summary": "Artifactory \"file logging\" should be integrated with stackdriver", "updated": "2019-08-20T16:43:19+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-932": {"assignee": "sarkers1", "created": "2019-07-11T10:56:35+10:00", "creator": "brekelj1", "description": "How to check:\r\n # Google_console-> STACKDRIVER -> Monitoring pane, which routes to stackdriver Monitoring console based on project/workspace\u00a0[https://app.google.stackdriver.com/?project=anz-ex-services-prod-4525d2\r\n ]\r\n # In the Dashboard pane, click Create Dashboard and try to save it which will give this error {color:#de350b}\" There was an error persisting the dashboard changes. CONTACT SUPPORT\".\r\n For example, this dashboard:{color}\u00a0[https://app.google.stackdriver.com/dashboards/15848911740286131658?project=anz-ex-services-prod-4525d2]\r\n # If check the chrome developer console, which shows blocked:mixed-content status\r\n [http://maxblockpage.service.anz/blockpage.aspx?Time=11%2FJul%2F2019%3A11%3A53%3A35%20%2B1000&ID=84966769&Client_IP=10.186.141.25&User=-&Site=-&URI=-&Status_Code=405&Decision_Tag=OTHER-NONE-NONE-NONE-NONE-NONE-NONE-NONE&URL_Cat=-&WBRS=-&DVS_Verdict=-&DVS_ThreatName=-&Time_Based=0&Reauth_URL=-]\r\n\r\nOutcome Note:\u00a0 From browser log it appears that it is using the HTTP/1.1 PATCH method to post data and our current proxies does not support this method.\u00a0", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-932", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Closed", "summary": "Can't save stackdriver dashboards when on ANZ network", "updated": "2019-10-28T12:35:07+11:00", "estimate": 8.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-931": {"assignee": null, "created": "2019-07-11T10:53:35+10:00", "creator": "brekelj1", "description": "AC:\r\n * Alerting criteria based on data collected after PIPS-929\r\n * Code changes to automate/realize the alerts (via terraform) merged into master", "fixVersions": [], "issuetype": "Story", "key": "CNPS-931", "labels": [], "lastViewed": null, "priority": "Minor", "project": "CNPS", "reporter": "brekelj1", "status": "Backlog", "summary": "Establish baseline for Spinnaker for each metric in PIPS-929", "updated": "2019-09-12T22:20:32+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-930": {"assignee": "sarkers1", "created": "2019-07-11T10:50:02+10:00", "creator": "brekelj1", "description": "AC:\r\n * Alerting criteria based on data collected after PIPS-928\r\n * Code changes to automate/realize the alerts (via terraform) merged into master", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-930", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Story Done", "summary": "Establish baseline for artifactory for each metric in PIPS-928", "updated": "2019-08-20T16:43:20+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-929": {"assignee": "clarker", "created": "2019-07-11T10:43:51+10:00", "creator": "brekelj1", "description": "AC:\r\n * Documented a set of metrics/SLOs (service level objectives) that can be used to monitor availability and throughput of Spinnaker, and can be used to scale Spinnaker\r\n * For each metric: concrete steps on how to implement/activate instrumentation, integrated with stackdriver\r\n * For each metric: why is it useful or meaningful with respect to SLO?", "fixVersions": [], "issuetype": "Story", "key": "CNPS-929", "labels": [], "lastViewed": null, "priority": "Minor", "project": "CNPS", "reporter": "brekelj1", "status": "Backlog", "summary": "Determine a useful set of Spinnaker custom metrics (including possibly app level metrics)", "updated": "2019-09-17T08:44:01+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-928": {"assignee": "clarker", "created": "2019-07-11T10:42:50+10:00", "creator": "brekelj1", "description": "AC:\r\n * Documented a set of metrics/SLOs (service level objectives) that can be used to monitor availability and throughput of artifactory, and can be used to scale artifactory\r\n * For each metric: concrete steps on how to implement/activate instrumentation, integrated with stackdriver\r\n * For each metric: why is it useful or meaningful with respect to SLO?\r\n\r\nFor example:\r\n * Throughput with respect to GCS reading/writing (or upload/download latency divided by payload size)\r\n * SQL latency\r\n * Latency of login/metadata requests\r\n\r\nSee failure scenario's confluence page (Pipelines > Artifactory on EX confluence space)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-928", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Story Done", "summary": "Determine a useful set of artifactory custom metrics (including possibly app level metrics)", "updated": "2019-08-20T16:43:18+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-927": {"assignee": "brekelj1", "created": "2019-07-11T10:38:10+10:00", "creator": "brekelj1", "description": "Acceptance Criteria:\r\n * Documentation and script to export Stackdriver Dashboard to code is merged in master branch\r\n * Cloudbuild can successfully create/edit/delete dashboards that were previously exported into PROD\r\n * Dashboards specs can be parameterized so that they work in DEV/STG/PROD", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-927", "labels": [], "lastViewed": null, "priority": "High", "project": "CNPS", "reporter": "brekelj1", "status": "Story Done", "summary": "Find out how to export Stackdriver Dashboard created in UI to code", "updated": "2019-08-20T16:43:17+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-926": {"assignee": "brekelj1", "created": "2019-07-11T10:33:51+10:00", "creator": "brekelj1", "description": "Acceptance criteria:\r\n * Code changes to create a Stackdriver Dashboard through terraform are merged\r\n * When terraform is applied the dashboard shows CPU metrics (doesn't matter what, just to figure out terraform part)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-926", "labels": [], "lastViewed": null, "priority": "High", "project": "CNPS", "reporter": "brekelj1", "status": "Closed", "summary": "Terraform Stackdriver Dashboard Automation", "updated": "2019-08-20T16:43:17+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-925": {"assignee": null, "created": "2019-07-11T10:28:13+10:00", "creator": "brekelj1", "description": "Acceptance criteria:\r\n * Code changes to configure redirect in helm-charts/artifactory-ha\r\n * Artifactory deployed from code changes correctly redirects from http to https", "fixVersions": [], "issuetype": "Story", "key": "CNPS-925", "labels": [], "lastViewed": "2019-11-22T11:54:55.108000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Closed", "summary": "Artifactory http redirect to https", "updated": "2019-11-22T11:54:53+11:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-924": {"assignee": "agarwas2", "created": "2019-07-11T09:28:45+10:00", "creator": "agarwas2", "description": "An access token needs to be created for ANZx to be able to interact with artifactory using CI which does not require personal API tokens. Access token needs to be encrypted using ANZx KMS key and copied to their bucket.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-924", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create artifactory access token for ANZx", "updated": "2019-09-17T08:39:43+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-923": {"assignee": "blackm", "created": "2019-07-10T09:25:22+10:00", "creator": "blackm", "description": "Remove feature toggle to release automation infra to prod:\r\n\r\nAcceptance:\r\n\r\n[https://github.service.anz/ex/engineering-acceleration-infrastructure/pull/198]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-923", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Release automation infra to Prod", "updated": "2019-08-20T16:43:16+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-922": {"assignee": "hidera", "created": "2019-07-09T15:57:49+10:00", "creator": "hidera", "description": "All cloudbuilds will need to happen in \"private\" cloudbuild.\r\n\r\nMake twistlock cloudbuild jobs work without needing to connect out to the public internet.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-922", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "twistlock cloudbuild working as private cloudbuild", "updated": "2019-08-20T16:43:15+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-921": {"assignee": null, "created": "2019-07-09T15:07:05+10:00", "creator": "tanga", "description": "*NOTEs*\r\n* Not currently required as we have an alternative solution for the use case of triggering a spinnaker webhook (direct curl via cloudbuild CI)\r\n* Keeping this in backlog for context in case other plugins are needed (ie need automated pattern for plugin installation in general)\r\n\r\nBuild automation of Artifactory plugin and config installation.\r\n\r\nFirst plugin needed is webhook: https://github.com/jfrog/artifactory-user-plugins/tree/master/webhook\r\n\r\n*References*\r\n* https://www.jfrog.com/confluence/display/RTF/User+Plugins\r\n\r\n*Acceptance Criteria*\r\n* Plugin groovy scripts and config stored as code in github.\r\n* Installs plugins and config via pipeline.\r\n** Automated verification of plugin install (eg curl endpoint to validate).\r\n** Updates to plugin via code can be deployed separately to Artifactory itself.\r\n** Plugin works as expected - can trigger Spinnaker pipeline\r\n* Generic/Extensible pattern that can be used for any Artifactory plugin.\r\n\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-921", "labels": [], "lastViewed": "2019-11-22T12:03:08.141000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Automate Artifactory webhook plugin install", "updated": "2019-11-22T12:03:07+11:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-920": {"assignee": null, "created": "2019-07-09T14:01:54+10:00", "creator": "tanga", "description": "Assess and POC webhook from Artifactory docker repo to trigger Spinnaker pipeline.\r\n\r\nMVP - use vanilla webhook.groovy script, trigger pipeline with empty payload, latest docker image used in pipeline.\r\nNice to have - trigger pipeline with docker image metadata, pipeline deploys image defined in metadata.\r\n\r\nLook at work done to date for Helm webhook - see parent story (PIPS-702) for info and linked JIRA tickets.\r\n\r\n*Considerations*\r\n* Configure Artifactory webhook trigger.  May need to modify webhook.groovy script.\r\n* Test ability to pull docker image from Artifactory via Spinnaker pipeline.\r\n* Automate Artifactory and Spinnaker config respectively.\r\n\r\n*Acceptance Criteria*\r\n* Breakdown tasks and create required JIRA tickets.\r\n\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-920", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Backlog", "summary": "SPIKE: Artifactory docker webhook", "updated": "2019-11-22T11:56:22+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-919": {"assignee": "tanga", "created": "2019-07-09T13:23:16+10:00", "creator": "tanga", "description": "{color:#DE350B}*NOTES* - no longer required\r\n* see https://github.service.anz/ex/spin-config/blob/master/docs/develop/HELM_ARTIFACT_TYPE.md\r\n* keeping ticket for context below.\r\n{color}\r\n\r\nCurrent MVP (PIPS-900) deploys the latest version of the helm artifact regardless of which version triggers the webhook (eg if you deploy an older version, the latest version will be deployed regardless).\r\n\r\nThis ticket is to enhance the webhook behaviour as per Acceptance Criteria:\r\n* Artifactory webhook triggers with metadata in the payload (current state it's a blank payload).\r\n* Spinnaker can consume the payload and deploy the artifact as per defined in the metadata.\r\n\r\nNotes:\r\n* Leverage the CSP modification to webhook.groovy and webhook.config.json\r\njfrog plugin: https://github.com/jfrog/artifactory-user-plugins/tree/master/webhook | [^jfrog_webhook.groovy] \r\ncsp plugin: https://github.service.anz/csp/artifactory-user-plugins/tree/master/webhook | [^csp_webhook.groovy] \r\ncsp config: [^csp_webhook.config.json] \r\nmodified csp config for helm only and to specify repo: [^csp_modified_helm_webhook.config.json] \r\ncsp PR for webhook: https://github.com/jfrog/artifactory-user-plugins/pull/273\r\n\r\n\r\n* Currently CSP webhook.groovy generates metadata but it causes an error in Spinnaker as the json is not in an array format (required by Spinnaker - see https://www.spinnaker.io/guides/user/pipeline/triggers/webhooks/#passing-artifacts).\r\nCurrent payload structure (notice missing square brackets *[]* pairing)\r\n{code}\r\n{\r\n\t\"artifacts\":\r\n\t\t{\r\n\t\t\t\"type\": \"helm/chart\",\r\n\t\t\t\"name\": \"productservice\",\r\n\t\t\t\"version\": \"1.1.8\",\r\n\t\t\t\"reference\": \"https://artifactory-dev.ex.gcpnp.anz/spinnaker-helm/productservice-1.1.8.tgz\"\r\n\t\t}\r\n}\r\n{code}\r\nRequired payload structure\r\n{code}\r\n{\r\n\t\"artifacts\": [\r\n\t\t{\r\n\t\t\t\"type\": \"helm/chart\",\r\n\t\t\t\"name\": \"productservice\",\r\n\t\t\t\"version\": \"1.1.8\",\r\n\t\t\t\"reference\": \"https://artifactory-dev.ex.gcpnp.anz/spinnaker-helm/productservice-1.1.8.tgz\"\r\n\t\t}\r\n\t]\r\n}\r\n{code}\r\n\r\n* Likely to require modification to Spinnaker code to consume metadata OR CSP's webhook groovy to send metadata that can be consumed (ie within *artifacts* payload).  Tested combinations of pipeline setup to date (all failures) attached for reference. [^payload_spinnaker_combinations.md] ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-919", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Enhance Artifactory helm webhook", "updated": "2019-08-20T16:43:39+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-918": {"assignee": "agrawad", "created": "2019-07-09T10:25:49+10:00", "creator": "agrawad", "description": "Private cloud build has no access to internet so the artifactory plugins required for artifactory automation were uploaded to dev artifactory. These artifacts will need to migrated to Prod artifactory (in EngX) repo which is created to store eng Acc artefacts.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-918", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Closed", "summary": "Migrate T/F artifactory plugins to prod artifactory", "updated": "2019-09-17T08:39:47+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-917": {"assignee": null, "created": "2019-07-09T10:20:54+10:00", "creator": "agrawad", "description": "Currently the plugins required for Artifactory automation are complied on the local machine and then uploaded to the Artifactory for consumption. A pipeline needs to be built which monitors the artefacts in Github, rebuilds the binary and upload to Artifactory.\r\n\r\nfor eg, in the artifactory config repo, artifactory provider is being used which was built on the local machine and saved on the Artifactory manually.\r\n\r\n[https://artifactory-dev.ex.gcpnp.anz:443/artifactory/ArtifactoryAutomation-local/terraform-provider-artifactory|https://artifactory-dev.ex.gcpnp.anz/artifactory/ArtifactoryAutomation-local/terraform-provider-artifactory]\r\n\r\nFollowing steps were used to build above artefact:\r\ncurl -L -O https://github.com/atlassian/terraform-provider-artifactory/archive/v${ARTIFACTORY_PROVIDER_VERSION}.tar.gz\r\ntar xzf v${ARTIFACTORY_PROVIDER_VERSION}.tar.gz --strip-components 1\r\ngo mod download\r\nCGO_ENABLED=0 GOOS=linux go build\r\n\u00a0\r\nA/C\r\nPipeline to monitor Github, build binary and upload to Artifactory.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-917", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Closed", "summary": "Pipeline for T/F Artifactory Plugin", "updated": "2019-09-17T08:39:48+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-916": {"assignee": "blackm", "created": "2019-07-09T10:08:31+10:00", "creator": "tanga", "description": "Research and propose an Artifactory repository naming standard, considering artifact promotion process.\r\n\r\n*References*\r\n* https://jfrog.com/whitepaper/best-practices-structuring-naming-artifactory-repositories/\r\n* https://jfrog.com/blog/the-significance-of-names/\r\n* https://www.jfrog.com/confluence/display/RTF/Repository+Layouts\r\n\r\n*Acceptance Criteria*\r\n* Document proposal.\r\n* Socialise with team for review and endorsement.\r\n\r\n*Notes*\r\n* Need to consider artifact promotion process (eg snapshot vs release folders or tagging for docker images or meta data for binaries, etc)\r\n** Do we handle this via repo naming or some other mechanism?\r\n** Do we actually need this for docker considering we are planning to use binary auth: https://cloud.google.com/binary-authorization/docs/overview", "fixVersions": [], "issuetype": "Story", "key": "CNPS-916", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Artifactory repository naming standard", "updated": "2019-11-16T08:07:19+11:00", "estimate": 1.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-915": {"assignee": null, "created": "2019-07-09T09:26:53+10:00", "creator": "vadrevus", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-915", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Closed", "summary": "Patternise usecases for Artifactory", "updated": "2019-08-20T16:43:13+10:00", "estimate": null, "epic_ref": "CNPS-907", "epic_name": "", "diff_to_upstream": []}, "CNPS-914": {"assignee": null, "created": "2019-07-09T09:26:10+10:00", "creator": "vadrevus", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-914", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Closed", "summary": "Patternise use of Gitsync", "updated": "2019-08-20T16:43:13+10:00", "estimate": null, "epic_ref": "CNPS-907", "epic_name": "", "diff_to_upstream": []}, "CNPS-913": {"assignee": null, "created": "2019-07-09T09:25:36+10:00", "creator": "vadrevus", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-913", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Closed", "summary": "Patternise Twistlock", "updated": "2019-08-20T16:43:12+10:00", "estimate": null, "epic_ref": "CNPS-907", "epic_name": "", "diff_to_upstream": []}, "CNPS-912": {"assignee": null, "created": "2019-07-09T09:24:49+10:00", "creator": "vadrevus", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-912", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Closed", "summary": "Patternise Spinnaker ", "updated": "2019-08-20T16:43:12+10:00", "estimate": null, "epic_ref": "CNPS-907", "epic_name": "", "diff_to_upstream": []}, "CNPS-911": {"assignee": "headenj1", "created": "2019-07-08T15:51:43+10:00", "creator": "hutchisc", "description": "The pull request review process for gitsync config changes needs to be documented so anyone in the team can pick up a PR and review it with consistency.\r\n\r\nThis may lead to automation for much of it (hopefully).", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-911", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Write up gitsync PR review process", "updated": "2019-08-20T16:43:11+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-910": {"assignee": "headenj1", "created": "2019-07-08T14:47:10+10:00", "creator": "brekelj1", "description": "Add the capability to deploy Twistlock into a custom namespace, via the GKE_NAMESPACE makefile variable.\r\n\r\nKey areas:\r\n * How do secrets work? Assume we can use the same dev secrets for multiple concurrent Twistlocks?\r\n * How does DNS work? Can we talk to Twistlock by IP address? What about SSL certs\r\n * How do we support users via oAuth, or do we just manually add users in sandbox Twistlock?\r\n\r\nAcceptance:\r\n * Two instances of Twistlock running in parallel in dev GKE cluster\r\n * Answers the above questions", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-910", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "brekelj1", "status": "Story Done", "summary": "Enable Twistlock to be deployed into custom namespace", "updated": "2019-09-17T08:39:27+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-909": {"assignee": "vadrevus", "created": "2019-07-08T12:06:37+10:00", "creator": "castanoa", "description": "When VPC service controls get enabled, we won't be able to use Public Cloud builders.\r\n\r\nWe should migrate all of our cloud build jobs to use private worker pool.\r\n\r\nAcceptance:\r\n\r\n * Spinnaker is deployed using private cloud builders.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-909", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Migrate Spinnaker deploy to use private cloud builders", "updated": "2019-08-20T16:43:10+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-908": {"assignee": "tanga", "created": "2019-07-08T09:30:55+10:00", "creator": "agarwas2", "description": "See https://confluence.service.anz/display/IaaScs/GCP+Firewall+Request for examples. \r\nEmail history attached for reference:  [^FW_ Firewall rule for access to GKE master for production .eml] \r\n\r\nRaise on-prem firewall rules request for:\r\n\r\n*Non Prod* - Firewall rules to allow VDI access to non production GKE clusters\r\nIn order to have access to EX applications in non production environments from VDIs firewall rules on premises have to be provisioned. \r\nNew firewall rule needs to be provisioned allowing VDI ranges to ex-services-dev and ex-services-stg primary ranges\r\n\r\n*Prod* - Firewall rules to allow user access from AU offices, VDI and ANZ Connect to GKE cluster.\r\nThis allows kubectl from ANZ network (currently need to tether to Optus network).\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-908", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Firewall rules for GKE non prod and prod", "updated": "2019-08-20T16:43:10+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-907": {"assignee": null, "created": "2019-07-08T09:29:59+10:00", "creator": "vadrevus", "description": "As we onboard customers to use various services like Spinnaker, Artifactory, GitSync, Twistlock :\r\n* We need patterns for each of the services that demonstrate the capabilities offered by the service.\r\n* These patterns need to be designed as per ANZ 's networking/security policies.\r\n* These patterns would help customers map their use-cases to the existing service  capability.\r\n* This will also help draw more customers to the platform as there are tried and tested patterns , teams could use to get their projects on board.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-907", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Closed", "summary": "Patternise Service capability of the Pipelines squad", "updated": "2019-08-16T10:52:06+10:00", "estimate": null, "epic_ref": null, "epic_name": "Patternise Services", "diff_to_upstream": []}, "CNPS-906": {"assignee": null, "created": "2019-07-08T08:12:40+10:00", "creator": "hutchisc", "description": "Use the cloud pipeline to build gitsync. This has the following subtasks:\r\n* Sync gitsync-code to google cloud source repositories\r\n* Add a cloudbuild.yaml file to perform the build\r\n* Automatically version the container image that is the output of the build\r\n* Push the container image to production cloud artifactory\r\n* Change the deployment manifest to pull the image from artifactory and not a local repository\r\n\r\nWe also need to figure out how to get the ANZ Global Root CA TLS cert into the image. This is needed for gitsync to be able to talk to github enterprise (github.service.anz). We cannot manually put this cert into artifactory as per policy (https://confluence.service.anz/display/EX/Artifactory+%28GCP%29+Policy), so how does the cloudbuilder get the cert?", "fixVersions": [], "issuetype": "Story", "key": "CNPS-906", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Build gitsync on cloud pipeline", "updated": "2019-09-12T22:26:19+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-905": {"assignee": null, "created": "2019-07-05T14:58:52+10:00", "creator": "hutchisc", "description": "A question on #eng-acceleration came up about npm scopes (https://docs.npmjs.com/misc/scope) and artifactory:\r\n\r\n{quote}Vinay Pillai [2:44 PM]\r\n I have a registry been setup in gcp artifactory - integration-ob-npm\r\nVinay Pillai [2:47 PM]\r\n i published one of my custom modules der, but the dependencies have to fetched from another registry. Is there any way we can do this without using scopes?\r\n\r\nOliver Gassman\r\n[2:50 PM]\r\n I believe scopes is the only way. On the topic of scopes, we should definitely have some sort of npm scopes registry for what is used internally, as I can think of 5 spread across GCP and DC at present that I\u2019ve either contributed to or am adjacent to.\r\n\r\nVinay Pillai [2:55 PM]\r\n Thanks @Oliver Gassman\r\nI was able to make it work with scopes only..so wanted to find if any other way to fetch dependencies. adding scope in front makes it difficult to publish in internal anz artifactory and gcp one together\r\nanyways thanks for the info.. :slightly_smiling_face:\r\n\r\ncamh [2:55 PM]\r\n From my reading of https://docs.npmjs.com/misc/scope, it looks like if your package is published somewhere else, a scope tells you where, right?\r\n\r\nOliver Gassman [2:56 PM]\r\n it\u2019s a simple way of namespacing groups of packages\r\n\r\ncamh [2:56 PM]\r\n from an artifactory perspective, we just need repos set up appropriately. the rest looks like it is driven by the client\r\n\r\nOliver Gassman [2:56 PM]\r\n you can set a different registry based on each defined scope from the default\r\n\r\ncamh [2:57 PM]\r\n i imagine we could set up a virtual repo in artifactory that can have a pull-through mirror as well as local packages so they all look like they come from the same place - i know it can do that with docker so I'd be surprised if not with npm\r\n\r\nOliver Gassman [2:57 PM]\r\n so in an application they may be installing some React components from DC, a forms library from GCP, and getting the rest of their 3rd party dependencies from SDCP or the internet\r\nyeah definitely worth looking in to\r\n{quote}\r\n\r\nWe should engage with [~gassmano] to flesh out some requirements here and better understand how npm repos/scope/etc work so we can provide a more useful artifactory service for our npm users.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-905", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Spike: Find out if we can better support npm scopes with artifactory", "updated": "2019-11-22T11:56:21+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-904": {"assignee": "hutchisc", "created": "2019-07-05T11:45:32+10:00", "creator": "hutchisc", "description": "Create an {{anzx-docker}} repository in the GCP production artifactory (https://artifactory.gcp.anz) as a repo of type {{docker}}. For the repository permissions, use the same group as has been done for the {{anzx-helm}} repository, or if no group, [~fornarom] will provide a list of users.\r\n\r\nThe {{anzx-docker}} repository has already been created in the GCP staging artifactory (https://artifactory.gcpnp.anz). The prod one should be set up the same way.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-904", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Add anzx-docker repo to artifactory", "updated": "2019-08-20T16:43:09+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-903": {"assignee": null, "created": "2019-07-05T07:22:07+10:00", "creator": "hutchisc", "description": "Gitsync is not able to reload its config so it needs to be restarted whenever the config changes. This can interrupt a running sync and also loses history. While there are other issues that address this (drain [PIPS-859], persistent history [PIPS-860]), they are more complicated than reloading configs. Some config changes will require a restart as new secrets may need to be mounted in the container, but the majority of our config changes could be done without a restart.\r\n\r\nReloading should be done by sending a POST request to {{/reload}}. If the new config is not valid, an error should be emitted and the config ignored, with gitsync continuing to run with the old config.\r\n\r\nIt may make sense to add the configmap_reload sidecar to automatically trigger the reload when the configmap changes.\r\n\r\nAcceptance criteria:\r\n* A gitsync config change that adds a syncpair for an existing GHE org and an existing GCP project (i.e. no new secrets needed) can be deployed by just merging the change to the master branch of the gitsync-config repository without gitsync restarting to apply that config change.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-903", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Support gitsync config reload", "updated": "2019-09-12T22:17:23+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-902": {"assignee": "castanoa", "created": "2019-07-04T11:31:24+10:00", "creator": "castanoa", "description": "When VPC service controls get enabled, we won't be able to use Public Cloud builders.\r\n\r\nWe should migrate all of our cloud build jobs to use private worker pool.\r\n\r\n*Acceptance*\r\n * We can deploy to staging gke from private worker pool\r\n * We can reach staging ilb from private worker pool\r\n * Same for prod", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-902", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Migrate Spin-config to use private cloud builders", "updated": "2019-08-20T16:39:03+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-901": {"assignee": "vadrevus", "created": "2019-07-04T11:26:30+10:00", "creator": "castanoa", "description": "This service account will be used to pull code from GHE.\r\n\r\nThe current approach (git OAUTH app) is not supported by DCBamboo.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-901", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Create Service Account to be used in Bamboo", "updated": "2019-08-20T16:43:09+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-900": {"assignee": "tanga", "created": "2019-07-04T10:18:17+10:00", "creator": "tanga", "description": "Enable an Artifactory helm chart repository webhook to trigger Spinnaker pipeline.  This requires work on both Artifactory (webhook plugin) and Spinnaker (Pipeline configuration).\r\n\r\n*Acceptance Criteria*\r\n* Push of a new helm chart artifact triggers a Spinnaker pipeline.\r\n* Latest version of helm chart artifact is bound to pipeline (not hardcoding version in pipeline).\r\n\r\n*Notes*\r\n* Webhook payload as provided by CSP does not work.\r\n* Not fussed whether the payload meta data is passed or not, as long as Acceptance Criteria is met.\r\n* Current testing to date you need to hardcode version for meta data to be parsed in Spinnaker.\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-900", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Artifactory helm chart webhook", "updated": "2019-08-20T16:43:08+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-899": {"assignee": "castanoa", "created": "2019-07-03T14:31:03+10:00", "creator": "castanoa", "description": "Requested by email from Anurag:\r\n\r\n--------------------------------\r\n\r\nHi Andres,\r\n\r\n\u00a0Hope you are doing good. Can you please add below names in the access list for Jenkins (Read + Write + Edit) access :\r\n\r\n\u00a0O'Kane, Ryan\r\n\r\nNicholson, Kenneth\r\n\r\nHaritas, Gurpreet Kaur\r\n\r\nRAMAIAH SRINIVASAN, MANOJ KUMAR\r\n\r\nChoo, Chin Wei\r\n\r\nChen, Lei\r\n\r\nDuxbury, Sean\r\n\r\n\u00a0\r\n\r\nThanks\r\n\r\nAnurag", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-899", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Add more users to Jenkins for CSP", "updated": "2019-08-20T16:43:07+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-898": {"assignee": null, "created": "2019-07-02T16:35:50+10:00", "creator": "tanga", "description": "{color:#DE350B}*NOTE* - no longer required, we are adding directly into hal-config.  See PIPS-980{color}\r\n\r\nAdd helm chart config to internal-config as per pubsub pattern.\r\n\r\n*Acceptance Criteria*\r\n* Can configure helm chart via yaml file under internal-config folder.\r\n* Deploy spin-config cloudbuild successfully.\r\n* Can create pipeline in Spinnaker with helm chart artifact type.\r\n* Create ticket to port approach to cust-config so customers can self service.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-898", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Add helm chart config to internal-config", "updated": "2019-08-20T16:39:03+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-897": {"assignee": "castanoa", "created": "2019-07-02T14:53:15+10:00", "creator": "castanoa", "description": "Add a TLS router to spinnaker demo to test the configuration of most of our clients.\r\n\r\n**Acceptance**\r\n\r\nTLS router is installed in the cluster and spinnaker can deploy using it.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-897", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Add TLS router to spinnaker demo", "updated": "2019-08-20T16:43:07+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-896": {"assignee": "tanga", "created": "2019-07-01T11:36:13+10:00", "creator": "tanga", "description": "Turn on helm chart support and test ability to pull helm chart from Artifactory via Spinnaker pipeline.\r\n\r\n*Acceptance Criteria*\r\n* Enable Helm chart artifact type in Pipelines.\r\n* Test pipeline via manual execution.\r\n* Document in readme.\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-896", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "SPIKE: Enable helm chart support", "updated": "2019-08-20T16:43:06+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-895": {"assignee": "hidera", "created": "2019-07-01T10:19:52+10:00", "creator": "agrawad", "description": "Received request from Sandeep Kamath via Slack to get onboarded to Artifactory to store their binaries.\r\n\r\n\u00a0\r\n\r\nContact Person: Sandeep Kamath\r\n\r\nTribe - Customer Authentication\r\n\r\nDomain - Digital\r\n\r\nApplication details \u2013 Forgerock Identity Gateway : IG works as an HTTP gateway, based on reverse proxy architecture. IG is deployed on a network so it can intercept both client requests and server responses.\r\n\r\nArtefacts:\u00a0war, tar.gz , fpr, docker, zip\r\n\r\n\u00a0\r\n\r\nSandeep has agreed to wait till we finish Artifactory\u00a0automation so that we can use him as a test case. Agreed/Expected date of onboarding 7th July 14th July.\r\n\r\nAC\r\n\r\nCA successfully onboarded to Artifactory. (Preferably using automation)\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-895", "labels": [], "lastViewed": null, "priority": "Lowest", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Artifactory onboarding for Customer Authentication(Digital)", "updated": "2019-10-21T09:14:24+11:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-894": {"assignee": "agarwas2", "created": "2019-07-01T09:57:49+10:00", "creator": "blackm", "description": "Somehow SAML did not roll out to the staging/production Twistlock. Fix this.\r\n\r\nAcceptance:\r\n\r\n- SAML/oAuth of users is implemented and deployed", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-894", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Implement SAML correctly", "updated": "2019-08-20T16:43:06+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-893": {"assignee": null, "created": "2019-07-01T08:44:18+10:00", "creator": "hutchisc", "description": "Gitsync has no measures to manage concurrency. Every incoming request is served concurrently with any others in progress, whether requests from a webhook or a tag sync triggered by a pubsub message.\r\n\r\nThis means we may be concurrently syncing the same repository to the same destination. This does not cause reliability issues as git itself is robust enough to handle concurrent pushes to the same repo, but we do occasionally see an error in the logs in these circumstances. But it does mean we are doing more work than necessary. There is never a need to have more than one sync to a destination going at once.\r\n\r\nWe can also potentially have many many syncs running concurrently, perhaps causing /tmp disk space issues.\r\n\r\nIt would make sense to:\r\n1. Limit the number of concurrent syncs in progress at once\r\n2. Limit the number of concurrent syncs in progress for a syncpair to one\r\n\r\nPoint 1 implies a worker pool which can be sized appropriately.\r\nPoint 2 implies queueing requests per-syncpair. This affords the opportunity to drop requests as two requests to sync in the same direction in the queue can be collapsed to one as the end result will be the same after the first.\r\n\r\nPoint 2 is important to have for PIPS-861 (Keep gitsync directories across syncs) as that would mean we could possibly have multiple git operations running on the same local repo. Again, git should take care of integrity, but we would see errors and they would be spurious.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-893", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Manage gitsync concurrency better", "updated": "2019-09-12T22:17:21+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-892": {"assignee": null, "created": "2019-06-28T11:58:23+10:00", "creator": "hidera", "description": "Atlassian have written a artifactory terraform provider.\r\n\r\nIt looks good, although it doesn't appear to set all the flags that are available on things like repositories.\r\n\r\ne.g. There is a boolean enableDebianSupport flag on repos, that it doesn't appear to have an option for setting.\r\n\r\nWe likely will need to implement this ourselves. Ideally we will raise PR upstream and get this merged into the upstream project.\r\n\r\nIt looks like the underlying go-artifactory library supports these flags, but not the terraform provider.\r\n\r\nWill need to determine that we require the additional functionality, then implement it, which will require some golang coding.\r\n", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-892", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Closed", "summary": "Add support for extra options in upstream artifactory-terraform provider", "updated": "2019-09-17T08:39:48+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-891": {"assignee": "hidera", "created": "2019-06-28T11:53:31+10:00", "creator": "hidera", "description": "Now we have refactored our artifactory deploy, it should be easier to update to most recent version of both the helm chart, and artifactory itself.\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-891", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Update to latest version of Artifactory & its helm chart", "updated": "2019-08-20T16:43:05+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-890": {"assignee": null, "created": "2019-06-28T10:59:28+10:00", "creator": "castanoa", "description": "*Acceptance*\r\n * The demo app will push a helm chart to Artifactory\r\n * Spinnaker will trigger when the helm chart changes\r\n * Spinnaker will pull the helm chart to deploy to GKE", "fixVersions": [], "issuetype": "Story", "key": "CNPS-890", "labels": ["Spinnaker_Auto_tests"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Backlog", "summary": "Use Artifactory to push/pull helm charts for spinnaker automatic tests", "updated": "2019-11-27T10:52:39+11:00", "estimate": 3.0, "epic_ref": "CLS-507", "epic_name": "", "diff_to_upstream": []}, "CNPS-889": {"assignee": null, "created": "2019-06-28T10:34:01+10:00", "creator": "castanoa", "description": "Use artifactory to push the new version of the demoapp.\r\n\r\n**Acceptance**\r\n * Cloud build will push images to Artifactory docker registry.\r\n * Spinnaker will trigger from Artifactory image changes\r\n * GKE will pull images from Artifactory docker registry.\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-889", "labels": ["Spinnaker_Auto_tests"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Backlog", "summary": "Use Artifactory to push/pull docker images for spinnaker automation test", "updated": "2019-11-27T10:52:39+11:00", "estimate": 3.0, "epic_ref": "CLS-507", "epic_name": "", "diff_to_upstream": []}, "CNPS-888": {"assignee": "castanoa", "created": "2019-06-28T10:31:08+10:00", "creator": "castanoa", "description": "This is to test the configuration where a single bucket has multiple k8s configuration files for multiple applications.\r\n\r\n\u00a0\r\n\r\nCurrently CSP and OB are using spinnaker this way.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-888", "labels": ["Spinnaker_Auto_tests"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Add second trigger to spinnaker automation test pipeline", "updated": "2019-09-02T10:25:48+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-887": {"assignee": null, "created": "2019-06-28T10:20:03+10:00", "creator": "hutchisc", "description": "Add an endpoint {{/debug}} that can be used to raise the log level to debug for a period of time. I suggest 15min by default, with a parameter to provide a different time.\r\n\r\nUsually debug output can be too verbose to want all the time, but it can be very useful when diagnosing an issue, so turning it on and off at runtime is valuable for this. We want to make sure it does not get left on permanently, which is why it should always be time limited. You could set something like 365days if you really wanted a long time/permanent.\r\n\r\nIt should also be able to be explicitly turned off when no longer needed.\r\n\r\nIt might also be useful to just enable debug level for a syncpair rather than the entire app. this should be doable as each sync operation has its own logger, so we can set the level when we create the logger.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-887", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Add debug endpoint to gitsync", "updated": "2019-09-12T22:17:20+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-886": {"assignee": "castanoa", "created": "2019-06-28T09:34:04+10:00", "creator": "castanoa", "description": "It requires pubsub config to have `subscription.yaml` suffix.\u00a0\r\n\r\nRemove that restriction since we have those files in a folder", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-886", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spin-config not deploying pubsub config in dev", "updated": "2019-08-20T16:43:04+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-885": {"assignee": null, "created": "2019-06-28T09:26:25+10:00", "creator": "hutchisc", "description": "The github docs lie (https://developer.github.com/webhooks/#delivery-headers) - it says a webhook delivery has a GUID for that delivery. The U in GUID is short for \"Unique\", but I have observed that if you put multiple webhooks on a repo for a push event but to different URLs, each event gets delivered with the same GUID.\r\n\r\nThis was noticed for the engineering-acceleration-infrastructure repository that gets synced to multiple GCP projects. A webhook for each project is invoked, and each event has the same GUID. Since we index the logs by GUID, we overwrite one set with the other as they have the same GUID.\r\n\r\nThis could be addressed in a few ways:\r\n1. Move the global history to be a per-syncpair history. Then GUIDs only need to be unique to the syncpair which they do appear to be. This is something I'm considering anyway as the global history on it's own is a bit verbose. Most people will not care about a global history, just a history for their syncpairs.\r\n2. Change the model of src repo -> dest repo from 1:1 to 1:N. 1:N is how some syncs are done, but with multiple 1:1 syncs. By using a 1:N model, we only pull the src repo once and then sync to multiple projects. This would also simplify the configuration. Other changes planned for terraform configs lead us in this direction.\r\n\r\nBoth these things should be done anyway so this issue will get resolved one way or another.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-885", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "GHE Event GUID is not unique", "updated": "2019-09-12T22:17:18+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-884": {"assignee": null, "created": "2019-06-28T08:40:20+10:00", "creator": "hutchisc", "description": "When the gitsync endpoint it called to do a sync, it looks in the body of the request for a json message, as GHE sends a payload with each event. For a Push event, we can extract the commit hash that triggered the push and we record the sync status as a github status on that commit.\r\n\r\nHowever we sometimes see requests without this hash (really, not fitting the pattern of a Push event). We log this, but no other info. It would be nice if we also logged the payload or something so we can tell how gitsync is being triggered. Perhaps we can extract the hash from different message types if they are common, but we wont know unless we know what the events we receive are. So log them.\r\n\r\nSome of the github event payloads seem to be very large, so we don't necessarily want to log the whole payload.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-884", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Log event types received by gitsync", "updated": "2019-09-23T13:50:37+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-883": {"assignee": "blackm", "created": "2019-06-27T16:09:49+10:00", "creator": "tanga", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-883", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Book internal showcase", "updated": "2019-08-20T16:42:52+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-882": {"assignee": null, "created": "2019-06-27T16:09:45+10:00", "creator": "tanga", "description": "Define approach for capacity planning for each of our services (Spinnaker, Artifactory, Twistlock, gitsync):\r\n* What metrics do we want to use (eg CPU, memory, disk space, etc)?\r\n* How we capture baseline and available headroom?  (eg performance load test, paper based, etc)?\r\n* How do we forecast for next 2/3/5 years?\r\n* How we architect for high availablity based on above?\r\n* Do we actually care about any of the above if we can implement autoscaling based on metrics?\r\n\r\n*Notes*\r\n* Have excluded Jenkins as assumption is that it will have been decommissioned by the time this ticket is picked up.\r\n* Performance testing is not a trivial exercise.\r\n\r\n*Acceptance Criteria*\r\n* Document and socialise approach with team.\r\n** Metrics and testing approach should ideally should be standard across each service.\r\n* Create JIRA tickets for each service to action.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-882", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Backlog", "summary": "Define approach for service capacity planning", "updated": "2019-09-23T13:50:33+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-881": {"assignee": "vadrevus", "created": "2019-06-27T16:09:42+10:00", "creator": "tanga", "description": "* Create epic\r\n* Create one story per service (eg spinnaker, artifactory, twistlock, gitsynch)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-881", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Create epic for patternising service capability", "updated": "2019-08-20T16:42:50+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-880": {"assignee": "tanga", "created": "2019-06-27T16:09:38+10:00", "creator": "tanga", "description": "Change process here: https://confluence.service.anz/display/EX/DA+Change+Process\r\n\r\nNo further action needed for this.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-880", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Document DA Change Process", "updated": "2019-08-20T16:42:49+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-879": {"assignee": "headenj1", "created": "2019-06-27T12:14:24+10:00", "creator": "castanoa", "description": "This is required to prove out CloudBuild integration so we can decommission Jenkins.\r\n\r\n*Reference*\r\nhttps://www.spinnaker.io/setup/ci/gcb/\r\n* Looks like we may need pub/sub setup as well for ClouldBuild to send status back to Spinnaker - suggest we split this out to separate ticket if we get the ClouldBuild stage working without it.\r\n\r\n*Acceptance*\r\n* CloudBuild stage can trigger test CloudBuild pipeline.\r\n* Roll out change to DEV/STG/PROD.\r\n* Documentation if required.\r\n* Create JIRA ticket to add to demo pipeline.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-879", "labels": ["Spinnaker_Auto_tests"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Enable CloudBuild stage Spinnaker", "updated": "2019-08-20T16:43:15+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-878": {"assignee": "headenj1", "created": "2019-06-27T11:59:20+10:00", "creator": "hutchisc", "description": "The gitsync status page has no unicorns. To me, every sync pair is its own special unicorn, so they should have unicorns.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-878", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Gitsync doesn't have enough unicorns", "updated": "2019-08-20T16:43:02+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-877": {"assignee": "agarwas2", "created": "2019-06-27T11:10:22+10:00", "creator": "castanoa", "description": "Michael Fornaro reached out asking for help on this.\r\n\r\nContext from slack:\r\n\r\nSo we had our GKE nodes whitelisted by satyam\r\n [https://github.service.anz/ics/terraform-gcp-foundations/pull/733#partial-pull-merging]\r\n\r\n\u00a0\r\n\r\nWe want to be able to have our GKE nodes pull images through artifactory\r\n This was my error when hitting prod artifactory\r\n{code:java}\r\nWarning Failed 18s kubelet, gke-abt-cluster-worker-pool-742c5328-nt94 Failed to pull image \"hub.artifactory.gcp.anz/kiali/kiali:v0.16\": rpc error: code = Unknown desc = Error response from daemon: Get https://hub.artifactory.gcp.anz/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers){code}\r\nAnd so naturally I wanted to try NP artifactory and here was the error from trying that.\r\n{code:java}\r\nWarning Failed 9s (x2 over 22s) kubelet, gke-abt-cluster-worker-pool-24f8d0a8-tvq5 Failed to pull image \"hub.artifactory.gcpnp.anz/kiali/kiali:v0.16\": rpc error: code = Unknown desc = Error response from daemon: Get https://hub.artifactory.gcpnp.anz/v2/: dial tcp: lookup hub.artifactory.gcpnp.anz on 169.254.169.254:53: no such host\r\n Warning Failed 9s (x2 over 22s) kubelet, gke-abt-cluster-worker-pool-24f8d0a8-tvq5 Error: ErrImagePull{code}\r\nJust to give further context, our GCP project we've already had the dummy DNS setup which is a work around to the GCP DNS issue however still unable to solve it.\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-877", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "ANZx cant connect to Artifactory to pull docker images", "updated": "2019-08-20T16:43:02+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-876": {"assignee": "tanga", "created": "2019-06-27T10:58:42+10:00", "creator": "tanga", "description": "*Issue*\r\nWhen Artifactory tries to connect to Spinnaker (eg call webhook) you get the following error in the logs.\r\n\r\nReason is that Artifactory cannot verify Spinnaker's cert (has no issuer or intermediary) as it doesn't exist in Artifactory's java truststore.\r\n\r\nReason it works in the browser is that it has smart to construct the certificate chain at runtime.\r\n\r\n*Fix*\r\nAdd full certificate chain to Spinnaker's certificate (Digicert Root, Digicert Intermediary, Spinnaker)\r\n\r\n*Acceptance Criteria*\r\n* Deploy new certificate chain to Spinnaker dev/stg/prod\r\n* Artifactory can call Spinnaker webhook in dev\r\n\r\n*Error*\r\n{code}\r\nartifactory-artifactory-ha-member-1 artifactory-ha 2019-06-26 05:26:02,562 [http-nio-8081-exec-7] [INFO ] (o.a.e.UploadServiceImpl:361) - Deploy to 'spinnaker-helm:productservice-1.1.8.tgz' Content-Length: 11705\r\nartifactory-artifactory-ha-member-1 artifactory-ha Exception in thread \"pool-19-thread-1\" java.lang.Error: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1148)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.lang.Thread.run(Thread.java:748)\r\nartifactory-artifactory-ha-member-1 artifactory-ha Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.Handshaker.fatalSE(Handshaker.java:302)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.Handshaker.fatalSE(Handshaker.java:296)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1514)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.Handshaker.processLoop(Handshaker.java:1026)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.Handshaker.process_record(Handshaker.java:961)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1062)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:250)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.lang.reflect.Method.invoke(Method.java:498)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.metaclass.MethodMetaProperty$GetBeanMethodMetaProperty.getProperty(MethodMetaProperty.java:76)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.callsite.GetEffectivePojoPropertySite.getProperty(GetEffectivePojoPropertySite.java:64)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:296)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat WebHook.callPost(webhook.groovy:728)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.lang.reflect.Method.invoke(Method.java:498)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnCurrentN(ScriptBytecodeAdapter.java:82)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat WebHook.this$dist$invoke$1(webhook.groovy)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat WebHook$PostTask.methodMissing(webhook.groovy)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.lang.reflect.Method.invoke(Method.java:498)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat groovy.lang.MetaClassImpl.invokeMissingMethod(MetaClassImpl.java:936)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat groovy.lang.MetaClassImpl.invokePropertyOrMissing(MetaClassImpl.java:1259)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1212)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:174)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat WebHook$PostTask.run(webhook.groovy:960)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \t... 2 more\r\nartifactory-artifactory-ha-member-1 artifactory-ha Caused by: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:387)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.validator.PKIXValidator.engineValidate(PKIXValidator.java:292)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.validator.Validator.validate(Validator.java:260)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.X509TrustManagerImpl.validate(X509TrustManagerImpl.java:324)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:229)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:124)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1496)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \t... 49 more\r\nartifactory-artifactory-ha-member-1 artifactory-ha Caused by: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.provider.certpath.SunCertPathBuilder.build(SunCertPathBuilder.java:141)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.provider.certpath.SunCertPathBuilder.engineBuild(SunCertPathBuilder.java:126)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat java.security.cert.CertPathBuilder.build(CertPathBuilder.java:280)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \tat sun.security.validator.PKIXValidator.doBuild(PKIXValidator.java:382)\r\nartifactory-artifactory-ha-member-1 artifactory-ha \t... 55 more\r\nartifactory-artifactory-ha-member-1 artifactory-ha 2019-06-26 05:26:04,356 [art-exec-3] [INFO ] (o.a.a.h.HelmServiceImpl:212) - Starting Helm index calculation for spinnaker-helm\r\n{code}", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-876", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Add full chain for Spinnaker ssl certificate", "updated": "2019-08-20T16:43:01+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-875": {"assignee": "hutchisc", "created": "2019-06-26T09:26:58+10:00", "creator": "hutchisc", "description": "The bamboo plan for deploying gitsync config changes ([https://dcbamboo.service.dev:8443/browse/CLOUD-EXGTSYN]) is not working:\r\n\r\n{code}\r\n 26-Jun-2019 08:03:13 Start deployment file check\r\n 26-Jun-2019 08:03:13 Validating config file is well formed: config/canary/ex-canary.jsonnet\r\n 26-Jun-2019 08:03:13 Validating deployment file is valid jsonnet: deployments/canary/ex-canary.jsonnet\r\n 26-Jun-2019 08:03:13 cat: /dev/fd/63: No such file or directory\r\n 26-Jun-2019 08:03:13 Checking image is present for: deployments/canary/ex-canary.jsonnet\r\n 26-Jun-2019 08:03:13 cat: /dev/fd/63: No such file or directory\r\n 26-Jun-2019 08:03:13 Image configured is \r\n 26-Jun-2019 08:03:34 Error from server (InternalError): an error on the server (\"service unavailable\") has prevented the request from succeeding\r\n 26-Jun-2019 08:03:34 END deployment file check\r\n 26-Jun-2019 08:03:34 Deploying from: deployments/canary/ex-canary.jsonnet\r\n 26-Jun-2019 08:03:44 error: the path \"/dev/fd/63\" does not exist\r\n{code}\r\n\r\nThis is likely due to the update of cntnrlib in the gitsync-config repo, commit [https://github.service.anz/ex/gitsync-config/commit/c93484fa612c5ed070dc583a9e9bc7f895677c20].\r\n\r\nThe {{/dev/fd/63}} error is usually related to process substitution ( {{<(command)}} ) as it uses the highest available FD (looks like 63 in this case). The changes to cntnrlib did use some process substitution. But it works on my machine!\r\n\r\nMaybe a bash version issue?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-875", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "gitsync config bamboo deployment is broken", "updated": "2019-08-20T16:43:00+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-874": {"assignee": "agarwas2", "created": "2019-06-26T09:24:01+10:00", "creator": "agarwas2", "description": "Artifactory uses HMAC credentials via an [Interoperability API |https://cloud.google.com/storage/docs/interoperability]that Google provides to access Google Storage Buckets. This is not ideal since it requires the credentials to be tied to a particular user (Matt Black in our case). It also was a contributing factory to a recent [artifactory outage|https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/post-mortem-artifactory-bucket/docs/postmortems/0004-artifactory-prod-to-dev-bucket.md].\r\n\r\nThe issue was raised with the JFrog team via a Github [Issue|https://cloud.google.com/storage/docs/interoperability] and we were advised that the feature is coming soon.\r\n\r\nThis story is to track the progress of said feature so that the work to switch to native authentication with GCS can be undertaken. ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-874", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Track artifactory upgrade that allows usage of google service accounts for GCS authentication", "updated": "2019-08-20T16:42:59+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-873": {"assignee": "hidera", "created": "2019-06-26T09:08:16+10:00", "creator": "agarwas2", "description": "One contributing factor to the recent artifactory outage (detailed [here|https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/post-mortem-artifactory-bucket/docs/postmortems/0004-artifactory-prod-to-dev-bucket.md]) was the use of defaul values in the makefile. Coupled with the use of interop keys for artifactory authentication (being tracked in PIPS-857) it allowed an issue to go undetected into production\r\n\r\nScope of the story and DOD is to remove the default values and error out if required values are not present. ", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-873", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Don't use default values in makefile", "updated": "2019-10-21T09:14:40+11:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-872": {"assignee": "hutchisc", "created": "2019-06-26T08:41:38+10:00", "creator": "agarwas2", "description": "The following remote repositories have been requested by CSP \r\n\r\njcenter (maven remote, https://jcenter.bintray.com)\r\nmaven-central (maven remote, https://repo1.maven.org/maven2 was: http://central.maven.org/maven2)\r\nplugins-release (maven remote, https://repo.spring.io/plugins-release/)\r\nspring-milestone (maven remote, https://maven.springframework.org/milestone/)\r\ngradle (maven remote, https://services.gradle.org/distributions)\r\ngradle-plugins (maven remote, https://plugins.gradle.org/) \r\nsonatype (maven remote, https://oss.sonatype.org/content/repositories/public)\r\nnpmjs-org (npm remote, https://registry.npmjs.org)\r\ncnpmjs (npm -generic- remote, https://cnpmjs.org/downloads)\r\nnode-sass (generic remote, https://npm.taobao.org/mirrors/node-sass/)\r\nnodejs-dist (generic remote, https://nodejs.org/dist/)\r\nhomebrew (generic remote, https://homebrew.bintray.com)  \r\n\r\nThese repositories are needed to build the various services that come under the CSP umbrella and are needed to support migration of the services to GCP.\r\n\r\nScope of this story is to add and test the above repositories in non production and then replicate in production. The test should validate that you can pull dependencies via the appropriate utility (eg gradle for gradle-plugins remote)\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-872", "labels": ["artifactory"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Add new remote repositories to Artifactory", "updated": "2019-08-20T16:42:28+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-871": {"assignee": "castanoa", "created": "2019-06-25T16:23:57+10:00", "creator": "tanga", "description": "*Issue*\r\nTejas Cherukara reported in slack that their csp pubsub trigger was not working for spinnaker.\r\n\r\nConfirmed with him that this is the config in question:\r\nhttps://github.service.anz/ex/spin-config/blob/staging-spinnaker-v0.6.1/customers-config/pubsub/psv2-subscription.yaml\r\n{code}\r\nname: psv2\r\nproject: anz-cx-csp-np-5527c6\r\nsubscriptionName: psv2\r\n{code}\r\n\r\n*Triage*\r\nNo errors reported on csp's end, even when putting a new trigger on the queue.\r\n\r\nLogs on spin-echo:\r\n{code}\r\n2019-06-24 16:53:05.923 AEST\r\n2019-06-24 06:53:05.922 ERROR 1 --- [ Gax-12] c.n.s.e.p.google.GooglePubsubSubscriber : Subscription name projects/anz-cx-csp-np-5527c6/subscriptions/psv2 could not be found (will not retry):\r\nExpand all | Collapse all {\r\n insertId:  \"e5ftjj3tcshlfgbld\"  \r\n logName:  \"projects/anz-ex-services-prod-4525d2/logs/stdout\"  \r\n metadata: {\u2026}  \r\n receiveTimestamp:  \"2019-06-24T06:53:21.495420536Z\"  \r\n resource: {\u2026}  \r\n severity:  \"INFO\"  \r\n textPayload:  \"2019-06-24 06:53:05.922 ERROR 1 --- [         Gax-12] c.n.s.e.p.google.GooglePubsubSubscriber  : Subscription name projects/anz-cx-csp-np-5527c6/subscriptions/psv2 could not be found (will not retry): \r\n\"  \r\n timestamp:  \"2019-06-24T06:53:05.923410878Z\"  \r\n}\r\n{code}", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-871", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Spinnaker pubsub trigger not working for csp", "updated": "2019-08-20T16:42:58+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-870": {"assignee": "headenj1", "created": "2019-06-25T16:07:23+10:00", "creator": "headenj1", "description": "New customers being onboarded to spinnaker need to create serviceacccounts in their kubernetes clusters.\r\n\r\nThe openBanking team have created some terraform code for automating this\r\n\r\nhttps://github.service.anz/ob/openbanking-infrastructure/tree/master/terraform/modules/spinnaker/service-account\r\n\r\nUsage: https://github.service.anz/ob/openbanking-infrastructure/blob/master/terraform/nonprod/ob/cd/spinnaker.tf", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-870", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "update spinnaker onboarding documentation", "updated": "2019-08-20T16:42:41+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-869": {"assignee": "agrawad", "created": "2019-06-25T15:34:59+10:00", "creator": "agrawad", "description": "GitSync pair is required to be created for the new repo in dev/stg.\r\n\r\nA/C\r\n * create repo in CSR\r\n * create gitSync pair\r\n * create webhook\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-869", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "GitSync pair for artifactory automation", "updated": "2019-08-20T16:39:05+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-868": {"assignee": "castanoa", "created": "2019-06-25T12:20:10+10:00", "creator": "castanoa", "description": "*Acceptance criteria*\r\n * It has GCR and bucket triggers\r\n * Deploys to dev from stg", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-868", "labels": ["Spinnaker_Auto_tests"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Create a basic demo pipeline to be used for testing", "updated": "2019-08-20T16:42:58+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-867": {"assignee": "tanga", "created": "2019-06-25T10:33:04+10:00", "creator": "tanga", "description": "*Issue*\r\nSpinnaker spin-clouddriver pod takes ~ 2 hours to restart.\r\n\r\nTo replicate consistently:\r\n* Delete spinnaker namespace\r\n* Run cloudbuild (engineering-acceleration) - all pods green, no monitoring daemon sidecar\r\n* Run cloudbuild (spin-config) - spin-clouddriver pod has following error, monitoring daemon sidecar added:\r\n{code}\r\n2019-06-21 16:54:44.441 AEST\r\n06:54:44 ERROR clouddriver failed http://localhost:7002/spectator/metrics with <urlopen error [Errno 111] Connection refused>\r\nExpand all | Collapse all {\r\n insertId:  \"yf95ody41h741l6hf\"  \r\n logName:  \"projects/anz-ex-services-stg-236d8f/logs/stderr\"  \r\n metadata: {\u2026}  \r\n receiveTimestamp:  \"2019-06-21T06:54:51.485166047Z\"  \r\n resource: {\u2026}  \r\n severity:  \"ERROR\"  \r\n textPayload:  \"06:54:44 ERROR clouddriver failed http://localhost:7002/spectator/metrics with <urlopen error [Errno 111] Connection refused>\r\n\"  \r\n timestamp:  \"2019-06-21T06:54:44.441540233Z\"  \r\n}\r\n{code}\r\n\r\n*Notes*\r\n* Pod is in error initially, then eventually turns green after ~ 2 hours.\r\n!spin-clouddriver_pod_error.png|thumbnail!\r\n!spin-clouddriver_pod_green_eventually.png|thumbnail!.\r\n* Can sometimes replicate issue by just running cloudbuild for spin-config (ie without deleting namespace).  [~castanoa] hit this issue in prod yesterday (24/06) when deploying new spin-config.\r\n!Screen Shot 2019-06-24 at 5.38.23 pm.png|thumbnail! \r\n !spin-clouddriver_pod_green_eventually_prod.png|thumbnail! \r\n* Issue seen in stg and prod so far, haven't replicated in dev. \r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-867", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "spin-clouddriver pod takes two hours to restart", "updated": "2019-08-20T16:40:10+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-866": {"assignee": "agarwas2", "created": "2019-06-25T10:03:51+10:00", "creator": "headenj1", "description": "Need to engage cloudservices for this, it's all manual not stored as code.\r\n\r\nUpdate and add/delete existing oauth URIs to following:\r\n [https://spinnaker-api-dev.ex.gcpnp.anz|https://spinnaker-api-dev.ex.gcpnp.anz/]\r\n [https://spinnaker-dev.ex.gcpnp.anz|https://spinnaker-dev.ex.gcpnp.anz/]\r\n [https://spinnaker-api-stg.ex.gcpnp.anz|https://spinnaker-api-stg.ex.gcpnp.anz/]\r\n [https://spinnaker-stg.ex.gcpnp.anz|https://spinnaker-stg.ex.gcpnp.anz/]\r\n [https://spinnaker-api.gcpnp.anz|https://spinnaker-api.gcpnp.anz/]\r\n [https://spinnaker.gcpnp.anz|https://spinnaker.gcpnp.anz/]\r\n\r\nExisting entries under [anz-ex-launchpad-dev project|https://console.cloud.google.com/apis/credentials/oauthclient/337411266113-9l0vba13glcv9784nfe5liih5qojuoca.apps.googleusercontent.com?project=anz-ex-launchpad-dev-ec347b] (API & Services -> Credentials -> Spinnaker): \r\n !Screen Shot 2019-06-21 at 2.24.27 pm.png|thumbnail!\r\n\r\n\u00a0\r\n\r\nThe task is to update the callback urls with the list provided.\r\n\r\n**Acceptance**\r\n\r\n- The callback urls in launchpad dev are updated.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-866", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Update oauth URIs for anz-ex-launchpad-dev", "updated": "2019-11-12T09:43:04+11:00", "estimate": 2.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-865": {"assignee": "hidera", "created": "2019-06-25T09:10:04+10:00", "creator": "agrawad", "description": "A/C\r\n * A confluence page with design diagram.\r\n * Process for our customers to follow. (Git Hub)", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-865", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Documentation  for Artifactory Automation", "updated": "2019-10-21T09:14:38+11:00", "estimate": 2.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-864": {"assignee": "blackm", "created": "2019-06-24T15:41:56+10:00", "creator": "blackm", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-864", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Acquire iam.serviceAccountKeyAdmin role for EX_ADMIN group", "updated": "2019-08-20T16:42:53+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-863": {"assignee": null, "created": "2019-06-21T17:18:21+10:00", "creator": "hutchisc", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-863", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Collect and report repository and sync metrics", "updated": "2019-11-21T10:28:15+11:00", "estimate": 3.0, "epic_ref": "CLS-517", "epic_name": "", "diff_to_upstream": []}, "CNPS-862": {"assignee": null, "created": "2019-06-21T17:17:56+10:00", "creator": "hutchisc", "description": null, "fixVersions": [], "issuetype": "Story", "key": "CNPS-862", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Allow gitsync to scale horizontally", "updated": "2019-06-21T17:17:56+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-861": {"assignee": null, "created": "2019-06-21T17:11:17+10:00", "creator": "hutchisc", "description": "Each gitsync sync run creates a fresh directory and does a full clone of the source repo into it. When the sync is complete, it deletes the directory.\r\n\r\nIf we have persistent storage, we should be able to configure syncpairs to be kept persistently across sync runs so we don't need a full clone from the source each time. This should significantly speed up syncing for large repositories.\r\n\r\nWe don't currently keep repos around because we don't know how much space we have and how much we're using. Once we convert the sync shell script to go code (PIPS-569), we can collect some metrics for each repository and get a better idea of space usage.\r\n\r\nWe need to consider if this persistent storage should be shared across multiple instances of gitsync if we scale it out horizontally. We would want to make sure we don't run multiple sync operations on the same repo from multiple gitsync instances.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-861", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Keep gitsync directories across syncs", "updated": "2019-06-21T17:17:39+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-860": {"assignee": null, "created": "2019-06-21T17:05:26+10:00", "creator": "hutchisc", "description": "The sync history and logs are lost on gitsync restart as they are only stored in memory. Add an option to store them persistently on disk.\r\n\r\nWe could store them in a sqlite database on a persistent volume. We could store them in some other sql database (harder onprem than gcp). We could easily store logs on disk, one file per sync command, named with the ID of the command. Serving becomes a simple static fileserver.\r\n\r\nThe history will still be best stored in a db as it is structured data.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-860", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Store gitsync history and logs persistently", "updated": "2019-06-24T13:59:29+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-859": {"assignee": null, "created": "2019-06-21T16:58:25+10:00", "creator": "hutchisc", "description": "Add a {{/drain}} endpoint that stops gitsync accepting new requests, but it completes any requests already in progress or queued. This should be a POST request.\r\n\r\nAdd a {{/quit}} endpoint that drains the server and quits when there is no more work left. This should be a POST request and should be parameterisable with request data. You should be able to request an immediate quit, and perhaps we should require a token be provided so people cannot accidentally quit the server, since we don't have any sort of auth.\r\n\r\nAdd a {{/health}} endpoint that can be used by a readiness probe. It should return an error if the server is drained so that the kubenetes service does not send traffic to a drained server.\r\n\r\nThese three features are required for an uninterrupted upgrade of gitsync. First start a new gitsync pod with a new version, and then drainquit the old version. The old version will continue to complete its requests and exit when done. In the meantime, traffic will to the new instance.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-859", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Add gitsync drain, quit and health endpoint", "updated": "2019-06-24T14:00:00+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-858": {"assignee": "blackm", "created": "2019-06-21T14:56:32+10:00", "creator": "castanoa", "description": "Create another GCP project in the Non Prod VPC that we can use as a target for Spinnaker Staging and Prod.\r\n\r\nThe idea is to pre configure a set of typical pipelines that will be triggered as part of the build to be sure that the new release is correct.\r\n\r\n\u00a0\r\n\r\n**Acceptance**\r\n * New project created in the NON prod VPC\r\n * The project contains an empty GKE cluster\r\n * At least a /27 CIDR range assigned to it.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-858", "labels": ["Spinnaker_Auto_tests"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Create new GCP project to act as target for Spinnaker automated tests of pipelines.", "updated": "2019-08-20T16:42:51+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-857": {"assignee": null, "created": "2019-06-21T13:01:03+10:00", "creator": "blackm", "description": "Currently the Artifactory binary-store bucket has object versioning turned on.\r\n\r\nInvestigate the impact of having versioning on artifacts at the GCS level, as Artifactory itself should be versioning. I think this flag should be off.\r\n\r\n[https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/foundation/anz-ex-services/artifactory.tf#L143]\r\n\r\nAcceptance:\r\n * Discover any reason to keep the versioning on\r\n * If there is no reason.. Turn it off!", "fixVersions": [], "issuetype": "Story", "key": "CNPS-857", "labels": [], "lastViewed": "2019-11-22T11:54:15.080000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "To Do", "summary": "Artifactory bucket object versioning", "updated": "2019-11-22T11:55:27+11:00", "estimate": null, "epic_ref": "CNPS-1293", "epic_name": "", "diff_to_upstream": []}, "CNPS-856": {"assignee": "headenj1", "created": "2019-06-21T09:05:57+10:00", "creator": "hutchisc", "description": "The status page (served on {{/status}}) is a bunch of json that is programmatically generated. It has the necessary data for diagnosis but it is not user-friendly - it is not consumed by software even though it is json.\r\n\r\nSince we have started using html templates for the {{/history}} handler, do the same for the status page. This gives us the opportunity to make a much nicer layout and it can evolve without changing the code.\r\n\r\nIt also allows us to add Sync buttons to the page so users can manually trigger a sync without needing to know the curl/wget command or to push a bogus commit to their repo.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-856", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Make gitsync status page a template", "updated": "2019-08-20T16:42:57+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-855": {"assignee": "castanoa", "created": "2019-06-20T17:19:39+10:00", "creator": "tanga", "description": "Cloudbuild will fail if there is a pre-existing *csp-spinnaker-install-using-hal* k8s job (eg in an error state from a previous run).\r\n\r\nAdd a initial step to delete the job if it exists, pretty much copy the last step as the first step:\r\nhttps://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/helm-charts/spinnaker-v3/cloudbuild.yaml\r\n\r\n{code}\r\n  #Delete the job\r\n- name: gcr.io/cloud-builders/kubectl\r\n  entrypoint: sh\r\n  args:\r\n      - '-c'\r\n      - |\r\n        kubectl delete job ${_SPINNAKER_NAMESPACE}-install-using-hal --namespace ${_SPINNAKER_NAMESPACE}\r\n  env:\r\n  - 'CLOUDSDK_COMPUTE_REGION=${_CLOUDSDK_COMPUTE_REGION}'\r\n  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'\r\n{code}\r\n\r\n*Acceptance*\r\n- Cloudbuild runs successfully (not worth the effort trying to simulate a job failure).", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-855", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Add initial job clean up step to cloudbuild", "updated": "2019-08-20T16:42:53+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-854": {"assignee": null, "created": "2019-06-20T15:20:15+10:00", "creator": "tanga", "description": "*Issue/Problem*\nFind a way to have Spinnaker with multiple namespaces (one per dev potentially).  This is so we can POC/test/develop on Spinnaker in parallel without impacting other team members (eg version upgrades).\n\nNon prod only, not required for production.\n\nConsiderations:\n* IP allocation (currently done in Terraform)\n* Gsuite oauth login (currently based on DNS entry) - happy to access and login to instance via direct IP.\n* Not concerned about having valid ssl certs.\n* Solution should be as simple as possible, Ideally as simple as changing an environment variable to a different namespace.\n\n*Acceptance Criteria*\n* Different Spinnaker instance can be stood up in a different namespace, with it's own secrets, volumes, dns, IPs, etc.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-854", "labels": ["Tests&Automation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Enable Spinnaker to be deployed into custom namespace", "updated": "2019-11-16T08:58:52+11:00", "estimate": 13.0, "epic_ref": "CNPS-1044", "epic_name": "", "diff_to_upstream": []}, "CNPS-853": {"assignee": null, "created": "2019-06-20T14:31:26+10:00", "creator": "blackm", "description": "Onboard ANZx to TwistLock.\r\n\r\nAdd details to this ticket about what is being setup for this to provide some tracking.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-853", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Twistlock for ANZx", "updated": "2019-11-16T09:16:50+11:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-850": {"assignee": "agarwas2", "created": "2019-06-20T13:40:42+10:00", "creator": "blackm", "description": "Risk are asking us to close off the pen-test report that Aka undertook some months ago.\r\n\r\nAcceptance:\r\n- Create a one-pager showing that every finding in the Pen-Test on EX, is now a closed JIRA ticket", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-850", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Round up results from previous Pen-Test", "updated": "2019-10-21T09:14:39+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-849": {"assignee": "tanga", "created": "2019-06-20T13:38:45+10:00", "creator": "tanga", "description": "*Issue/Problem*\r\nWe have a risk where an invalid customer kubeconfig can break Spinnaker.  This is currently manually tested per PR and is not scalable.\r\n\r\n*Solution*\r\nAdd TVT step to spin-config cloud build to automatically validate customer's kubeconfig.\r\n\r\n*Acceptance Criteria*\r\n* CloudBuild pipeline performs TVT.\r\n* Automated rollback if TVT fails.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-849", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Check target clusters are reachable before updating spinnaker", "updated": "2019-08-20T16:43:05+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-848": {"assignee": "hidera", "created": "2019-06-20T11:43:49+10:00", "creator": "hidera", "description": "Satyam had issue with docker pulls immediately after we tore down staging artifactory & stood up a new one.\r\n\r\nIssue was artifactory trying to grab something off disk it had in cache.\r\n\r\nBut the new deploy, meant we started with a few volume, so nothing in the cache.\r\n\r\nHis solution was to delete-content in cache, and this fixed things.\r\n\r\nTask is to understand this, and what needs to happen to make this not affect users.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-848", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Understand caching issues when tearing down & standing up artifactory", "updated": "2019-08-20T16:42:56+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-847": {"assignee": null, "created": "2019-06-20T11:43:35+10:00", "creator": "castanoa", "description": "Include documentation about how to onboard new customers and typical troubleshooting activities for team member in spin-config repo.\r\n\r\n[https://confluence.service.anz/display/EX/Quick+starter]\r\n \u00a0\r\n *Acceptance*\r\n Team member on support will have a centralise documentation place for spinnaker issues.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-847", "labels": [], "lastViewed": "2019-11-22T11:42:41.491000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Document onboard process for team members.", "updated": "2019-11-22T11:42:40+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-846": {"assignee": null, "created": "2019-06-20T11:42:44+10:00", "creator": "castanoa", "description": "Halyard config is generated when spinnaker deploys and also when spin-config is run. We should do this only when spin config is run so that it becomes single source of truth.\r\n\r\nQuestion to answer/refactor as part of this ticket: \r\n* With a fresh spinnaker install (ie delete namespace first)\r\n* After deploying from cloudbuild eng-acceleration, the spinnaker pods do not have the monitoring-daemon sidecar.\r\n* After deploying cloudbuild spin-config, the monitoring-daemon sidecar is added.\r\n* Question: what turns on the monitoring-daemon? Which repo should this logic sit in? \r\n\r\n*Acceptance*\r\n- Halyard config only lives in spin config repo\r\n- Secrets have to be configured only in spin config repo.\r\n- When Spinnaker is deployed, it also run spin-config build to config halyard.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-846", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Centralise halyard configuration in spin-config repo", "updated": "2019-09-17T08:39:28+10:00", "estimate": 13.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-845": {"assignee": null, "created": "2019-06-20T11:36:17+10:00", "creator": "headenj1", "description": "This is to allow running it as an independent plan.\r\n\r\n**Acceptace**\r\n * The spinnaker terraform code is moved to infrastructure\r\n * There is a bamboo plan that triggers and deploys the infra pointing to that folder.\r\n\r\n*Dependencies*\r\n\r\n* IaC Squad / SDCP Bamboo\r\n* Service accounts to run terraform", "fixVersions": [], "issuetype": "Story", "key": "CNPS-845", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "Move the spinnaker terraform code to Infrastructure repo", "updated": "2019-11-06T11:45:04+11:00", "estimate": 8.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-843": {"assignee": null, "created": "2019-06-20T11:21:22+10:00", "creator": "vadrevus", "description": "Define alerts for spinnaker. How do we identify if  spinnaker  has reached its capacity.\r\n List scenarios where Spinnaker would send an alert and where the alerts would go to.\r\n\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-843", "labels": ["ProductioniseSpinnaker"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Closed", "summary": "SPIKE: Alerts for Spinnaker", "updated": "2019-11-14T09:56:51+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-842": {"assignee": "castanoa", "created": "2019-06-20T11:17:15+10:00", "creator": "vadrevus", "description": "Orca and Cloud driver , Spinnaker's microservices have different scaling strategies.\r\nExplore the configuration and options to see  how we can cater for horizontally scaling these services for high load\r\n\r\nhttps://www.spinnaker.io/setup/productionize/scaling/horizontal-scaling/", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-842", "labels": ["ProductioniseSpinnaker"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vadrevus", "status": "Story Done", "summary": "How to scale spinnaker horizontally to cater for high load", "updated": "2019-08-20T16:42:55+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-841": {"assignee": null, "created": "2019-06-20T11:15:37+10:00", "creator": "headenj1", "description": "Clean up documentation between engineering acceletation and spin-config repos.\r\n\r\nFor customer onboarding we want to be able to point customers to one location only for documentation. We also want support staff to be abvle to quickly find any documentation that they need in one location", "fixVersions": [], "issuetype": "Story", "key": "CNPS-841", "labels": [], "lastViewed": "2019-11-22T11:42:55.414000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "organise Spinnaker documentation into one place", "updated": "2019-11-22T11:42:54+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-840": {"assignee": null, "created": "2019-06-20T11:13:11+10:00", "creator": "headenj1", "description": "Enable spinnaker to be single pane of glass launch point for all cloud deployment\r\n\r\nTypical workflow may be :\r\n\r\ngithub -> spinnaker -> cloudbuild -> artifactory -> spinnaker -> deploy to GKE\r\n\r\n\u00a0\r\n\r\nPreviously this was not possible because\u00a0 spinnaker was not capable of triggering cloudbuild. This feature is now possible since release 1.14", "fixVersions": [], "issuetype": "Story", "key": "CNPS-840", "labels": [], "lastViewed": "2019-11-22T11:43:16.636000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "SPIKE: Use spinnaker to deploy via cloud build into the different environments", "updated": "2019-11-22T11:43:15+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-838": {"assignee": null, "created": "2019-06-20T10:42:18+10:00", "creator": "blackm", "description": "[~blackm] met some people from Data who want to onboard Twistlock for their work.\r\n\r\nKey points:\r\n * They are in the Shared VPC\r\n * They use Istio\r\n * They want to use the ANZ CA for their certs", "fixVersions": [], "issuetype": "Story", "key": "CNPS-838", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Twistlock for Data", "updated": "2019-11-16T09:16:41+11:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-837": {"assignee": null, "created": "2019-06-19T14:57:40+10:00", "creator": "blackm", "description": "Acceptance:\r\n\r\n- Post our daily roster rotation into Slack channel.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-837", "labels": [], "lastViewed": "2019-11-22T11:52:59.676000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Roster: Slack integration ", "updated": "2019-11-22T11:56:17+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-836": {"assignee": "blackm", "created": "2019-06-19T14:55:27+10:00", "creator": "blackm", "description": "Write the Onboarding section in our Confluence.\r\n\r\nSections:\r\n\r\n-\u00a0Terms of Engagement\u00a0\r\n- Basic SLA (and link to SSD)\r\n- Onboarding links for each tool\r\n- Details of support roster", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-836", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Engagement/Onboarding guide in Confluence", "updated": "2019-08-20T16:42:55+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-835": {"assignee": null, "created": "2019-06-19T14:50:51+10:00", "creator": "blackm", "description": "Although we continue to focus on capabilities over a specific tools, we must investigate new and interesting tools in CI/CD when they come up. [Harness.io|http://harness.io/] is one such.\r\n\r\nBefore starting this card, you should speak to blackm about the scope and understand what we\u2019re doing. This card will take about a week and will involve engagement with Harness engineers, ANZ security and CSP as a use-case.\r\n\r\nAcceptance:\r\n- A working Harness CD deployment in ANZ networks\r\n- A write up completed on architecture, deployment, gitops", "fixVersions": [], "issuetype": "Story", "key": "CNPS-835", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Harness POC", "updated": "2019-09-12T22:28:39+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-834": {"assignee": null, "created": "2019-06-19T14:50:12+10:00", "creator": "blackm", "description": "As part of delivering our Pipelines as a Platform service, we must strive to keep all software on the latest stable release.\r\n\r\nSetup an automated pipeline to test the release of new Artifactory Helm charts and their linked Artifactory docker binaries. Discover a sensible way to \u201ctest\u201d that the Artifactory is not introducing any obvious regressions.\r\n\r\nNote: this is not an automated release process, but a way to automatically pull and test new upstream releases.\r\n\r\nAcceptance:\r\n- Isolated pipeline which automatically tests new Artifactory releases in a sandbox (eg. a new namespace in the dev cluster)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-834", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Automate testing of new releases", "updated": "2019-11-22T11:57:15+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-833": {"assignee": null, "created": "2019-06-19T14:49:50+10:00", "creator": "blackm", "description": "Twistlock can run Defenders on the GCP Artifactory instance which will then scan the docker images in Artifactory.\r\n\r\nSetup this integration in staging and validate the scanning is working and useable in Twistlock Console.\r\n\r\nAcceptance:\r\n- Demonstable automated code for integration of Twistlock and Artifactory\r\n- Demo the scan results to the team\r\n- Book a session with security to determine next steps", "fixVersions": [], "issuetype": "Story", "key": "CNPS-833", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "SPIKE TwistLock scan", "updated": "2019-11-22T11:56:18+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-832": {"assignee": null, "created": "2019-06-19T14:43:49+10:00", "creator": "blackm", "description": "The Launchpad project is now firmly in the \u201clegacy\u201d category. It\u2019s only used to run public Cloud Build jobs which pull [gcr.io/dockerhub.io|http://gcr.io/dockerhub.io] images into GCR in the local anz-ex-launchpad project.\r\n\r\nThese Cloud Build job should be migrated into anz-ex-services, and wherever possible, just remove them (ie if the target image is no longer in use).\r\n\r\nOnce these CB jobs have been migrated, the Launchpad project can be closed down and the IP ranges returned to the ANZ IP pool.\r\n\r\nAcceptance:\r\n- Any still useful Cloud Build jobs are migrated to anz-ex-services project\r\n- Removed all Launchpad code from our repo\r\n- Cloud Services engaged to start the removal process for the two service projects", "fixVersions": [], "issuetype": "Story", "key": "CNPS-832", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Remove Launchpad completely ", "updated": "2019-11-21T10:27:23+11:00", "estimate": 3.0, "epic_ref": "CLS-517", "epic_name": "", "diff_to_upstream": []}, "CNPS-831": {"assignee": null, "created": "2019-06-19T11:18:06+10:00", "creator": "hutchisc", "description": "Make gitsync production ready.\r\n\r\nGitsync was knocked together quickly on the basis that it would only be needed for a month or so, as Github for Business would be coming soon and remove the need for this (Google Cloud Builds can pull straight from public github, so no syncing needed). However Github for Business never happened so gitsync lives on. It's use has become far larger than expected and while it is holding up well, it is not really production ready in a number of dimensions.\r\n\r\nAdditionally, since private cloud build workers are now available for production, we can expect some of the nonprod gitsync uses to move to the prod instance. We cannot hide behind gitsync being \"nonprod\" as an excuse for any issues (so sorry, best effort only!).\r\n\r\nThis epic captures all the tasks I see necessary to make gitsync robust and production manageable.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-831", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Epic in Progress", "summary": "Gitsync production readiness", "updated": "2019-11-21T10:28:13+11:00", "estimate": null, "epic_ref": null, "epic_name": "Gitsync production readiness", "diff_to_upstream": []}, "CNPS-830": {"assignee": null, "created": "2019-06-19T11:09:47+10:00", "creator": "blackm", "description": "Review the code in this repo:\r\n\r\n[https://github.service.anz/unnithas/mirage/]\r\n\r\nThe README explains what it is and what is does - we would like to be confident that the code and approach is sound before we let them migrate 300GB of data to GCP Artifactory.", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-830", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Done", "summary": "Review the OCP migration code", "updated": "2019-08-20T16:42:55+10:00", "estimate": null, "epic_ref": "CNPS-789", "epic_name": "", "diff_to_upstream": []}, "CNPS-829": {"assignee": null, "created": "2019-06-18T16:53:46+10:00", "creator": "soin", "description": "h2. Context\r\n\r\nCurrent user needs to manually create project in our container scanning service to connect their cluster to our container scanning service. If for any reason our container scanning service require a full rebuild, user will need to manually reconfigure each of the project.\r\n\r\nWe would like to encourage self service i.e. allow user to define the project they would like to add to the console using code and add it to our console via automation.\r\nh2. Technical Details\r\n\r\nIn twistlock (our current container scanning service), there is a concept of console and supervisor. The way we engage with our customer is to ask them to provision a console in their cluster and connect to our console i.e. their console become the supervisor [see here for more information|https://docs.twistlock.com/docs/latest/deployment_patterns/projects.html#terminology]\r\n\r\nTo connect the two console, we will need to create a project in the main console. This is done manually at the moment which means it is not repeatable in the event of data loss.\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-829", "labels": ["toil", "SelfService"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "soin", "status": "Closed", "summary": "Allow user to add project to our container scanning service", "updated": "2019-09-17T08:39:46+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-828": {"assignee": "castanoa", "created": "2019-06-18T15:29:17+10:00", "creator": "castanoa", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-828", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Apply new OB spin config", "updated": "2019-08-20T16:42:54+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-827": {"assignee": "agrawad", "created": "2019-06-18T11:11:41+10:00", "creator": "agrawad", "description": "This ticket is to create automation in Artifactory such that customers can create pull request for creation of users, groups, repos etc.\u00a0\r\n\r\n\u00a0\r\n\r\nA/C\r\n * Design of how it is going to work.\r\n * Test test dummy user, group and repo code from desktop.\u00a0\r\n * Create pipelines code.\r\n * Test the code and remove bugs.\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-827", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "PoC automation for artifactory in dev", "updated": "2019-08-20T16:42:45+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-826": {"assignee": "castanoa", "created": "2019-06-17T15:24:42+10:00", "creator": "castanoa", "description": "Onboard ANZx into Spinnaker.\r\n\r\nThey require basic set up with GCS and GCR triggers.\r\n\r\nAlso they are keen to spike canary releases and pipelines as code.\r\n\r\nThey will be using the self service tool.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-826", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spinnaker for ANZx", "updated": "2019-08-20T16:42:54+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-824": {"assignee": "tanga", "created": "2019-06-17T10:52:55+10:00", "creator": "blackm", "description": "Pipelines squad are currently using public Cloud Build, and need to migrate to a Private Cloud Build instance.\r\n\r\n@wrefordb added a new Private Cloud Build worker pool to GCP, which operates in an entirely separate VPC. This VPC is connected to the Shared VPC via a VPN.\r\n\r\nAcceptance:\r\n- A validated POC of running our Cloud Build jobs in Private Cloud Build\r\n- JIRA tickets required to complete the migration", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-824", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "SPIKE Test private cloud builders with VPC Service Controls", "updated": "2019-08-20T16:42:46+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-823": {"assignee": null, "created": "2019-06-17T10:52:09+10:00", "creator": "blackm", "description": "Investigate what would be necessary for us to deploy Spinnaker with Spinnaker.\r\n\r\nAcceptance:\r\n- Architecture diagram across multiple envs\r\n- Plan for testing Spinnaker deployment success\r\n- Rollback plan for failed deployments\r\n- Technical POC (stretch)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-823", "labels": [], "lastViewed": "2019-11-22T11:43:09.070000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "SPIKE Deploy Spinnaker with Spinnaker", "updated": "2019-11-22T11:43:07+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-822": {"assignee": "inagakir", "created": "2019-06-17T10:51:06+10:00", "creator": "blackm", "description": "{code}\r\nAs an engineer providing CD capability with Spinnaker\r\nI want to know if a new deployment didn't break our Spinnaker instance without conducting manual testing\r\nSo that I would not accidentally miss some testing and overlook service failures.\r\n{code}\r\n\r\nh3. Context\r\n\r\nCurrently Spinnaker upgrades and customer config updates are not easily tested and rolled out. Using the demo pipeline project, develop a way to test Spinnaker upgrades in a controlled manner. Attempt to account for all the features in use by our current customers.\r\n\r\nh3. Considerations\r\n\r\n* Use the sandpit project (See first comment for details.)\r\n* How is the pipeline triggered (eg from Cloud Build, Helm, Artifactory)?\r\n* How do we automate triggering the pipeline from different sources?\r\n* How do we validate and report the test results?\r\n* Use all of the features we want to promote with spinnaker: Artifactory triggers (helm and docker), Cloud build stages, blue/green deployments, canary analysis.\r\n\r\nh4. Nice to have\r\n\r\n* Dashboard / History of test runs (maybe a nice to have).\r\n* Automated rollback\r\n\r\nh3. Outcomes\r\n\r\n* Document the design of the Spinnaker test framework. Investigate how to use the Spinnaker API to trigger pipelines and assess results.\r\n* Create cards to implement all of the moving parts of the framework (Some existing cards are linked to this one. Check down below)\r\n** Create a cluster in the sandpit project. \r\n** Create demo pipelines as code covering customer use cases defined above deploying to the sandpit project.\r\n** Automate the execution of those demo pipelines and include it in the deploy process.\r\n\r\nh3. Suggestions\r\n\r\nh4. Goal\r\n\r\nFor every deployment, our Spinnaker is automatically tested and the deployment process finishes with an error if test failed.\r\n\r\nh4. Guidelines/Directions\r\n\r\n* Continue using Cloud Build to manage the whole deployment process.\r\n* A successful build means a new change has been successfully deployed and Spinnaker is confirmed to be healthy with the new change by a test suite.\r\n* The test suite in the initial cut (MVP) may include only one end-to-end test case that exercises an app deployment with Spinnaker. The app may be deployed to the same cluster with Spinnaker (but maybe a separate namespace).\r\n* We want to set up a cluster in *sandpit* project and test a deployment to the cluster to mimic our user's deployment, but this is *NOT* a part of MVP as it's not required to conclude if our Spinnaker is healthy. \u27a1\ufe0f Had a chat with [~blackm], we still want to include this in the same epic.\r\n* We want to have a test suite to cover all our users' deployment scenarios, but this is *NOT* a part of MVP. We raise a card per scenario, and they will be prioritised and implemented one-by-one.\r\n\r\nh4. Overview of MVP\r\n\r\nThe Spinnaker deployment process would look like:\r\n\r\n# Deploy (and wait until all pods are replaced)\r\n# Validate\r\n## Create an application and a pipeline with specific names with {{spin}} command (or overwrite if they already exist). Here the pipeline is triggered with Docker image push.\r\n## Push a docker image that runs a simple http server with one endpoint which returns build number in JSON response.\r\n## Hit the app from the deployment process (i.e. Cloud Build) and confirm the build number matches.\r\n\r\nFor the pipeline, we should be able to reuse a lot of [pipeline-demo repo|https://github.service.anz/ex/pipeline-demo].", "fixVersions": [], "issuetype": "Story", "key": "CNPS-822", "labels": ["Spinnaker_Auto_tests"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "SPIKE: Spinnaker test framework", "updated": "2019-11-15T16:29:13+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-821": {"assignee": "inagakir", "created": "2019-06-17T10:42:28+10:00", "creator": "blackm", "description": "Spinnaker has no ability today to do pipelines-as-code. Explore our options for this, including the Armory product offering.\r\n\r\nAcceptance:\r\n * \u2705Present to team about options, solution, future\r\n * -Create tickets for implementing solution-\u00a0In the discussion after the presentation, the team decided to capture findings and park this for now.\r\n\r\nReferences:\r\n * [https://medium.com/faun/spinnaker-on-gke-from-zero-to-mastery-2-codify-settings-9fe76c507830]\r\n * [https://github.com/spinnaker/dcd-spec]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-821", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "SPIKE: Pipelines as code", "updated": "2019-08-20T16:43:14+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-820": {"assignee": "castanoa", "created": "2019-06-17T10:41:11+10:00", "creator": "blackm", "description": "Spinnaker has a microservice named Orca, which is the orchestration engine. This stores its data in an embedded Redis database which we should externalise to simplify our backup process.\r\n\r\nReference:\r\n[https://www.spinnaker.io/guides/operator/orca-redis-to-sql/]\r\n\r\nAcceptance:\r\n- Implemented terraform code to create a new MySQL instance in CloudSQL\r\n- Migrate from Redis to MySQL as a backend\r\n- Ensure backup snapshots are being sync\u2019d to Cloud Storage (or create a new ticket for this)", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-820", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Externalise Spinnaker Pipelines State", "updated": "2019-10-23T14:23:47+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-819": {"assignee": null, "created": "2019-06-17T10:40:18+10:00", "creator": "blackm", "description": "In order for us to deprecate and remove Jenkins from our stack entirely, we need to test the integration of Cloud Build into the latest Spinnaker release 1.14.\r\n\r\nDevelop the capability for Spinnaker to offload custom script jobs into Cloud Build. A test case is the CSP script which runs tests against a completed deployment in Spinnaker. These tests are executed by a script in Jenkins.\r\n\r\nAcceptance:\r\n- Move CSP\u2019s Spinnaker test stage to Cloud Build\r\n- Create deprecation path for Jenkins", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-819", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Test Cloud Build in Spinnaker", "updated": "2019-09-17T08:39:49+10:00", "estimate": null, "epic_ref": "CNPS-1052", "epic_name": "", "diff_to_upstream": []}, "CNPS-818": {"assignee": null, "created": "2019-06-17T10:39:24+10:00", "creator": "blackm", "description": "Our Engagement docs (link) instruct people to open support tickets via Tech Connect. Incoming customer requests (via Slack/Email/Phone) should also be directed into a new Tech Connect ticket.\r\n\r\nFor us to action new tickets we would like a JIRA integration to add new Tech Connect tickets our \u201cLights On\u201d epic.\r\n\r\nAcceptance:\r\n- Tested new Tech Connect tickets appearing in JIRA epic \u201cLights On\u201d", "fixVersions": [], "issuetype": "Story", "key": "CNPS-818", "labels": [], "lastViewed": "2019-11-22T11:50:48.152000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Tech Connect integration to JIRA", "updated": "2019-11-22T11:56:16+11:00", "estimate": null, "epic_ref": "CNPS-1265", "epic_name": "", "diff_to_upstream": []}, "CNPS-817": {"assignee": "agarwas2", "created": "2019-06-14T16:42:18+10:00", "creator": "headenj1", "description": "Explore being able to run Terraform plans against the Dev project from a local folder", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-817", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "Investigate running TF plans locally", "updated": "2019-09-17T08:39:36+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-815": {"assignee": null, "created": "2019-06-14T15:13:19+10:00", "creator": "headenj1", "description": "Some alerting/monitoring has been configured (eg twistlock) but other monitoring is still required", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-815", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Implement / kick off Monitoring stories", "updated": "2019-08-20T16:42:51+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-814": {"assignee": "dugalp", "created": "2019-06-14T13:57:53+10:00", "creator": "dugalp", "description": "-\u00a0engineering-acceleration-infrastructure/docs/guides/Hairpin/hairpin-proxy.md", "fixVersions": ["1.0.0"], "issuetype": "Task", "key": "CNPS-814", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Done", "summary": "Update hairpin documentation", "updated": "2019-09-17T08:39:46+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-809": {"assignee": null, "created": "2019-06-13T12:17:50+10:00", "creator": "blackm", "description": "Ongoing epic to capture tickets related to continued development and improvement of the GCP Spinnaker.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-809", "labels": [], "lastViewed": "2019-11-22T11:50:07.554000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic Done", "summary": "Spinnaker Platform development and evolution", "updated": "2019-11-22T11:50:06+11:00", "estimate": null, "epic_ref": null, "epic_name": "Spinnaker Platform", "diff_to_upstream": []}, "CNPS-808": {"assignee": null, "created": "2019-06-13T11:44:29+10:00", "creator": "blackm", "description": "We should have a functional implementation of OPA working on our clusters. This is to demonstrate the capability to other teams in the org, and also to better help us test our configuration and deployments.\r\n\r\n\u00a0\r\n\r\nSuggestion:\r\n # Implement a simple CI test stage to run in Cloud Build with conftest using the Rego language\r\n # Implement the same test\u00a0via an AdmissionController in Kubernetes\u00a0\r\n\r\nReference:\r\n\r\n[https://github.com/instrumenta/conftest]\u00a0\r\n\r\n[https://www.openpolicyagent.org/docs/latest/kubernetes-admission-control]\r\n\r\nAcceptance:\r\n * Some variety of working Rego-based configuration test\r\n * Book a showcase to demo to the team", "fixVersions": [], "issuetype": "Story", "key": "CNPS-808", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "SPIKE Open Policy Agent and conftest", "updated": "2019-09-12T22:28:33+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-807": {"assignee": "agarwas2", "created": "2019-06-13T09:26:58+10:00", "creator": "blackm", "description": "Fold all copies of the 1password file into a single one (probably [~agarwas2] copy), and commit to Github repo.\r\n\r\nAcceptance:\r\n * Do the above", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-807", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Reconcile 1password file and add to github", "updated": "2019-08-20T16:42:34+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-806": {"assignee": "headenj1", "created": "2019-06-13T09:14:52+10:00", "creator": "headenj1", "description": "Spinnaker was updated to 1.14.3. This task is to capture document about the implementation of that", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-806", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Document the spinnaker update ", "updated": "2019-08-20T16:42:48+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-805": {"assignee": "dugalp", "created": "2019-06-12T17:49:31+10:00", "creator": "dugalp", "description": "- Update the document engineering-acceleration-infrastructure/docs/guides/artifactory/artifactory.md\r\n - Add a table with:\r\n ** Artifactory URL\r\n ** App Proxy hostname\u00a0\r\n ** App Proxy Port\r\n ** Service account detail (i.e. domain/username)\r\n ** All whitelisted sites per instance", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-805", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Done", "summary": "Update Artifactory documentation with Proxy Configuration ", "updated": "2019-08-20T16:42:48+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-804": {"assignee": "hidera", "created": "2019-06-12T15:56:28+10:00", "creator": "hidera", "description": "It will be useful to be able to have different logging verbosity.\r\n\r\nWe should enable this via a cloudbuild substitution variable so debug mode\r\n\r\n(verbose logging) can be turned on or off.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-804", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hidera", "status": "Story Done", "summary": "Add debug mode for artifactory cloud build", "updated": "2019-08-20T16:42:47+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-803": {"assignee": "dugalp", "created": "2019-06-12T14:51:35+10:00", "creator": "hutchisc", "description": "If I set up https://hub.artifactory.gcp.anz/ as a registry mirror in my docker daemon config:\r\n\r\n\"registry-mirrors\": [\r\n\u00a0 \"https://hub.artifactory.gcp.anz\"\r\n]\r\n\r\nand i try to do a {{docker pull alpine:latest}} (for example), I get the error {{Error response from daemon: Get https://registry-1.docker.io/v2/: Service Unavailable}}.\r\n\r\nIf I use https://hub.artifactory.gcpnp.anz/ as the registry mirror, docker successfully pulls the image.\r\n\r\nWe need to check the prod config against the nonprod config and see why prod is behaving differently.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-803", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "hub.artifactory.gcp.anz not working as registry mirror", "updated": "2019-08-20T16:39:00+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-802": {"assignee": "dugalp", "created": "2019-06-12T12:27:50+10:00", "creator": "blackm", "description": "The \"hairpin\" proxy in the perimeter is believed to be performing poorly. We need to do analysis of this to determine some numbers for the proxy team to investigate.\r\n\r\nQuoting from Simon Gauvreau (see attached email):\r\n # Details about the files that seem to be corrupted (type of file, size, frequency of the issue etc\u2026)\r\n # Details about the application flow, you mentioned 1000->15000 \u201cpackages\u201d being transferred, can you advise if these are concurrent streams, or a single one etc\u2026\r\n # Information about how the corruption has been detected ? and how is this issue recovered / fixed ?\r\n # FQDN / IP addresses about the source / destination of the flow\r\n # Confirmation that the application fully support proxying ?\r\n # Latency appears to be a concern, can you advise how you are measuring this ? Can you provide historical data over a period of time ? Have you identified periods that are worse than others ?\r\n\r\n[~agrawad] and [~agarwas2] can provide more context.\r\n\r\nPatrick Marabeas originally reported the issue with corrupt artifacts in Artifactory coming down from the npmjs.org mirror.\r\n\r\nAcceptance:\r\n - Get as much info as possible from above list and share with Simon G", "fixVersions": [], "issuetype": "Story", "key": "CNPS-802", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Artifactory proxy performance analysis", "updated": "2019-11-01T21:19:16+11:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-801": {"assignee": "sarkers1", "created": "2019-06-12T11:31:02+10:00", "creator": "blackm", "description": "Add the capability to deploy Artifactory into a custom namespace, via the GKE_NAMESPACE makefile variable.\r\n Able to generate the deployment yaml (kube.yaml) from local\r\n Prefix the value name which is not used by the upstream helm charts\r\n\r\nKey areas:\r\n * How do secrets work? Assume we can use the same dev secrets for multiple concurrent Artifactories?\r\n * How does DNS work? Can we talk to Artifactory by IP address? What about SSL certs\r\n * How do we support users via oAuth, or do we just manually add users in sandbox Artifactories?\r\n\r\nAcceptance:\r\n * Answers the above questions\r\n * Allows Artifactory to be deployed into a namespace specified by a parameter.\r\n * Update the readme file regarding the various dependencies of running instances of Artifactory in parallel in dev GKE cluster\r\n * Able to generate kube.yaml (OSx/Darwin) from local\r\n * Artifactory up and running without any issue in dev cluster", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-801", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Parameterise Artifactory namespace", "updated": "2019-08-20T16:42:47+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-800": {"assignee": "agarwas2", "created": "2019-06-11T15:04:09+10:00", "creator": "blackm", "description": "Due to limitations in Google Cloud, the vanity CNAME artifactory.gcp.anz is not available in peered networks. Google have no intention of fixing this limitation.\r\n\r\nUpdate the Cloud Services managed CNAME record to be an A record which points to the correct IP address. This means we will have two A records, not a CNAME->A. The base URL artifactory-prd.ex.gcp.anz could also be removed, as it no longer serves a purpose.\r\n\r\nAcceptance:\r\n * artifactory.gcp.anz is an A record which points at the correct IP \r\n * spinnaker.gcp.anz is an A record which points at the correct IP\r\n * twistlock.gcp.anz is an A record which points at the correct IP\r\n\r\n(IP should be gotten from a data source and not hardcoded in the tfvars)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-800", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Update artifactory.gcp.anz TLD vanity URLs to be A records", "updated": "2019-11-21T10:26:31+11:00", "estimate": 2.0, "epic_ref": "CLS-517", "epic_name": "", "diff_to_upstream": []}, "CNPS-799": {"assignee": "dugalp", "created": "2019-06-11T11:00:37+10:00", "creator": "dugalp", "description": "* Add the\u00a0key for\u00a0relevant Jira projects\r\n * Add a link to the Jira project admins", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-799", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "dugalp", "status": "Story Done", "summary": "Update Onboarding Instructions", "updated": "2019-08-20T16:42:46+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-798": {"assignee": "headenj1", "created": "2019-06-11T10:30:10+10:00", "creator": "headenj1", "description": "Update to version 1.14.3 in prod", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-798", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Update Spinnaker in production", "updated": "2019-08-20T16:42:43+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-797": {"assignee": null, "created": "2019-06-06T15:18:50+10:00", "creator": "headenj1", "description": "update Spinnaker to 1.14.3", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-797", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "update spinnaker in Dev to 1.14.3", "updated": "2019-08-20T16:42:43+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-796": {"assignee": "headenj1", "created": "2019-06-06T15:18:07+10:00", "creator": "headenj1", "description": "update Spinnaker to 1.14.3\r\n\r\nupdate halyard to 1.20.2", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-796", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Update Spinnaker in Staging ", "updated": "2019-08-20T16:42:42+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-795": {"assignee": "headenj1", "created": "2019-06-06T12:18:37+10:00", "creator": "headenj1", "description": "Change to a resource of type :\u00a0 \"google_kms_crypto_key_iam_member\"\r\n\u00a0\r\nThe \"spinnaker-config-encrypt\" role of\u00a0cloudkms.cryptoKeyEncrypter allows any identity which is a member of\u00a0\u00a0domain:anz.com to encrypt secrets which can then be decrypted by cloudbuild\r\n\u00a0\r\n\u00a0\r\n[https://cloud.google.com/billing/reference/rest/v1/Policy#Binding]\r\n\u00a0\r\nWe need to allow the same permisson to identities with `allAuthenticatedUsers` instead\u00a0\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-795", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Allow terraform accounts encrypt kubeconfigs ", "updated": "2019-08-20T16:42:40+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-794": {"assignee": "headenj1", "created": "2019-06-06T10:38:16+10:00", "creator": "hutchisc", "description": "The gitsync config for the nonprod deployment is getting unwieldy. We now have 91 syncpairs that are a bit all over the place.\r\n\r\nWe should split the config into separate files that can be merged together at run time, in such a way that each config file can also be used standalone, allowing for running multiple git sync instances with different configs (such as for when we decide we don't want to run this for others any more).\r\n\r\nAlso clean up the syncpairs that extend the source id field to make it unique (when one source repo is synced to multiple destinations). That can be done much more simply than it is.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-794", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Clean up gitsync config", "updated": "2019-08-20T16:42:41+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-793": {"assignee": "headenj1", "created": "2019-06-05T16:10:08+10:00", "creator": "headenj1", "description": "CSP have requested changes to spinnaker configuration via PR:\r\n\r\n[https://github.service.anz/ex/spin-config/pull/14]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-793", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "review and merge PR for spin configuration for CSP", "updated": "2019-08-20T16:42:39+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-792": {"assignee": "blackm", "created": "2019-06-05T15:50:39+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n\r\nA mechanism for the team to be notified when it's their individual turn to be on support duty for the day. Could be a slack page or confluence page.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-792", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create a rotating roster for pipeline support", "updated": "2019-08-20T16:39:08+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-791": {"assignee": "agrawad", "created": "2019-06-05T15:49:13+10:00", "creator": "rickarm1", "description": "h3. Description\r\n\r\nCurrently our confluence is in-cohesive resulting in customers finding it difficult to find FAQ's, information and support documentation.\r\nh3. Acceptance Criteria\r\n\r\nCleanup of existing confluence space\r\n\r\nCreation of a front door similar to the one found [here|[https://confluence.service.anz/display/IaaScs/GCP+-+Google+Cloud+Platform]]\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-791", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Clean up confluence & create an EX front door", "updated": "2019-08-20T16:39:08+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-790": {"assignee": "headenj1", "created": "2019-06-05T14:04:42+10:00", "creator": "headenj1", "description": "We have had some requests recently including from Clem in OB to enable job resources in spinnaker and from Tejas in CSP to enable CRD autodiscovery\r\n\r\nFrom digging around the docs I see:\r\n\r\nhttps://www.spinnaker.io/reference/halyard/commands/#hal-config-provider-kubernetes-account (edited)\r\n\r\n--kinds: (Default: []) (V2 Only) A list of resource kinds this Spinnaker account can deploy to and will cache. When no kinds are configured, this defaults to \u2019all kinds described here https://www.spinnaker.io/reference/providers/kubernetes-v2/#workloads\r\n\r\nwe have the [] default which doesn\u2019t look like it includes jobs\r\n\r\nBrendan has suggested we enable the --all-kinds flag which might remove the need to have autodiscovery of CRDs\r\n\r\nThe other alternative I think we have is to edit the --kinds field to include all defaults plus job (which would not do anything for CRD discovery)", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-790", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "SPIKE Investigate `--all-kinds` flag for spinnaker config", "updated": "2019-09-17T08:39:30+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-789": {"assignee": null, "created": "2019-06-05T13:30:24+10:00", "creator": "agrawad", "description": "Customers of DC Artifactory will eventually be migrated to SDPC Artifactory or GCP Artifactory. This has created a need to perform some of the work such as Artifactory automation, understand the scope of migration and DR plans.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-789", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Closed", "summary": "This ticket is to capture the work done by EX for DC tools migration. ", "updated": "2019-08-16T08:46:05+10:00", "estimate": null, "epic_ref": null, "epic_name": "DC tools migration", "diff_to_upstream": []}, "CNPS-788": {"assignee": null, "created": "2019-06-05T12:40:35+10:00", "creator": "tanga", "description": "Purpose of this spike is to assess options for backup and recovery of persistent disk PVCs (eg can we snapshot, leverage multi region backups, etc) so we can restore to a point in time.  If we cannot recover need facts as to why.\r\n\r\nThis is a question that is typically asked for Change Records and DR plans.\r\n\r\n*Acceptance Criteria*\r\n* Assess, document and present options to team.\r\n\r\n*References*\r\n* Initial google'ing did not surface any easy way to do this in K8s:\r\nhttps://kubernetes.io/docs/concepts/storage/persistent-volumes/#volume-snapshot-and-restore-volume-from-snapshot-support\r\nhttps://blog.jetstack.io/blog/volume-snapshotting/\r\nhttps://medium.com/@pmvk/kubernetes-backups-and-recovery-efc33180e89d\r\n* Alternatively snapshot actual GCE volume, but need path to restore and mount to pod.\r\n** We don't currently have access via GCP console to manually snapshot so some IAM changes may be required.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-788", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "SPIKE - GKE PVC (persistent disk) back up and restore strategy", "updated": "2019-10-24T15:48:45+11:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-787": {"assignee": "clarker", "created": "2019-06-05T10:31:10+10:00", "creator": "tanga", "description": "There is a risk with Artifactory whereby the binaries stored in GCS may get corrupted (eg DC Artifactory migration).  How we recover from this is unclear - this is a question that is typically asked for Change Records and DR plans.\r\n\r\nPurpose of this spike is to assess options for backup and recovery of GCS based PVCs (eg can we snapshot, leverage multi region backups, etc) so we can restore to a point in time.  If we cannot recover need facts as to why.\r\n\r\nThis will feed into the Artifactory DR plan, and may also be a generic DR pattern for all services that use GCS storage.\r\n\r\n*Acceptance Criteria*\r\n* Assess, document and present options to team.\r\n\r\n", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-787", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "SPIKE - Artifactory PVC (GCS) back up and restore strategy", "updated": "2019-09-17T08:39:44+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-786": {"assignee": "headenj1", "created": "2019-06-05T10:29:28+10:00", "creator": "headenj1", "description": "OB team have raised a new Pull Request for spinnaker config\r\n\r\n[https://github.service.anz/ex/spin-config/pull/13/files]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-786", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Review and merge PR for OB to spin-config", "updated": "2019-08-20T16:42:39+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-784": {"assignee": "hidera", "created": "2019-06-03T15:56:30+10:00", "creator": "headenj1", "description": "     Outcome of the dev/stg artifactory outage:\r\n\r\nEnsure the correct interoperability keys are being used with all environments.\r\n\r\nAcceptance:\r\n - Same interop keys are encoded for each project env\r\n\r\nReference:\r\n\r\nhttps://cloud.google.com/storage/settings?organizationId=380471816720&project=anz-ex-services-stg-236d8f", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-784", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Determine which interop keys are being used for which artifactory", "updated": "2019-08-20T16:42:38+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-783": {"assignee": "tanga", "created": "2019-06-03T15:53:24+10:00", "creator": "headenj1", "description": "Whenever we have an incident we should have a checklist of tasks to perform.\r\n\r\n[~blackm] has written up some information in confluence page:\r\n\r\nhttps://confluence.service.anz/display/EX/Support+Details", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-783", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Create an ANZ Incident engagement checklist", "updated": "2019-09-17T08:39:42+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-782": {"assignee": null, "created": "2019-06-03T15:50:17+10:00", "creator": "headenj1", "description": "output of the dev/stg artifactory outage post portem\r\n\r\nShould we have a dedicated slack channel for our customers to report issues and seek help with artifactory usage?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-782", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Investigate option for creating slack channel for artifactory discussion", "updated": "2019-08-20T16:42:37+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-781": {"assignee": null, "created": "2019-06-03T15:32:51+10:00", "creator": "tanga", "description": "This is a follow up ticket from initial incident (PIPS-754).\r\n\r\n*Tasks*\r\n* Document and advise customers on best practice to manage space (clean up steps, log verbosity, keep last 10 jobs only, etc)", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-781", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Create Jenkins bootstrap jobs in code", "updated": "2019-09-17T08:39:32+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-780": {"assignee": "blackm", "created": "2019-06-03T14:50:58+10:00", "creator": "agrawad", "description": "Create a roadmap for Delivery Acceleration which gives a clear view of what the expected future looks like.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-780", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Closed", "summary": "Create roadmap for the squad", "updated": "2019-08-20T16:42:36+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-779": {"assignee": "blackm", "created": "2019-06-03T14:49:43+10:00", "creator": "agrawad", "description": "Workshop with the team to confirm SME and/or Service Owner approach and understand how this approach can be implemented.\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-779", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Closed", "summary": "SME/Service Owner discussion", "updated": "2019-10-21T09:14:27+11:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-778": {"assignee": "blackm", "created": "2019-06-03T14:44:34+10:00", "creator": "agrawad", "description": "Communicate a firm date on the expected delivery for Twistlock in production", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-778", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Confirm the delivery date for Twistlock", "updated": "2019-08-20T16:42:35+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-776": {"assignee": "blackm", "created": "2019-06-03T10:51:04+10:00", "creator": "blackm", "description": "As a security consultant\r\nI want to know the EX team are being good engineers\r\nSo I can continue to approve their designs\r\n\r\nAs an engineer\r\nI want to know how to store a new secret\r\nSo I can keep my secrets secret\r\n\r\nDocument the overall secrets strategy (with diagrams) such that people inside and outside the team can understand our process.\r\n\r\nAcceptance:\r\n * A reviewed confluence doco with nice diagrams\r\n * Per-service details of secrets\r\n * Discussion of 1password file and primary/secondary/tertiary\r\n * Process to follow when a team member exits\r\n * Process to follow with primary/secondary/tertiary roles\r\n * Mention of why.. how Vault fits in (Matt B/Satyam)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-776", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Document Secrets Management strategy and playbook", "updated": "2019-08-20T16:42:33+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-775": {"assignee": "castanoa", "created": "2019-05-31T11:02:26+10:00", "creator": "headenj1", "description": "The account that triggered pipelines run as is not automated by halyard.\r\n\r\nSee here for details:\u00a0[https://www.spinnaker.io/setup/security/authorization/service-accounts/]\r\n\r\nTo provision these command a curl command is issued from halyard pod. this step could be run by cloudbuild in spin-config trigger\r\n\r\nexample command:\r\n\r\n\u00a0\r\n\r\n{{curl -X POST \\}}\r\n{{ -H \"Content-type: application/json\" \\}}\r\n{{ -d '\\{ \"name\": \"sec-deployer\", \"memberOf\": [\"GCP_Spinnaker_SEC_SRE_NP\"] }' \\}}\r\n{{ spin-front50:8080/serviceAccounts}}\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-775", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Add spinnaker runas accounts to automated config deploy", "updated": "2019-09-17T08:39:50+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-774": {"assignee": "headenj1", "created": "2019-05-31T08:16:23+10:00", "creator": "headenj1", "description": "Currently the helm chart for spinnaker has the version of spinnaker and halyard set the same for all environments. This needs to be refactored to allow for independent versions being run across the different environments during update", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-774", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "refactor spinaker helm chart to allow for indepent env updates", "updated": "2019-08-20T16:42:33+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-773": {"assignee": null, "created": "2019-05-30T11:08:24+10:00", "creator": "tanga", "description": "This is a follow up ticket from initial incident (PIPS-754).\r\n\r\n*Issue*\r\nNo monitoring and alerting for Jenkins, specifically disk space.\r\n\r\n*Notes*\r\n* Check with team on current pattern using stackdriver alerts.\r\n\r\n*Acceptance Criteria*\r\n* Alerts sent to *DAPipelineAlerts@anz.com* email distribution group when Jenkins disk space reaches a specified threshold.\r\n\r\n", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-773", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Monitoring and alerting for Jenkins disk space", "updated": "2019-09-17T08:39:33+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-772": {"assignee": null, "created": "2019-05-30T11:01:24+10:00", "creator": "tanga", "description": "This is a follow up ticket from initial incident (PIPS-754).\r\n\r\n*Issue*\r\nJenkins jobs are created manually via UI console by customers.  These are persisted in the volume, so no ability to redeploy from code if there are any issues with the volume.\r\n\r\n*Tasks*\r\n* Create template Jenkins jobs in code.\r\n* Create bootstrap job to create Jenkins jobs.\r\n* Advise customers of current risk and ask them to port their jobs to this pattern.\r\n\r\n*Acceptance Criteria*\r\n* Jenkins jobs can be created from code via bootstrap.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-772", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Create Jenkins bootstrap jobs in code", "updated": "2019-09-17T08:39:34+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-771": {"assignee": null, "created": "2019-05-29T16:34:31+10:00", "creator": "blackm", "description": "We currently run all our k8s services with a Kubernetes cluster-admin role. This is not desirable. We should test the use of Google Groups for GKE.\r\n\r\nThe [gke-security-groups@anz.com|mailto:gke-security-groups@anz.com] group has been created by Cloud Services. [~blackm] has manager access to add new groups.\r\n\r\nReference:\r\n- [https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control#groups-create-cluster|https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control?authuser=0#groups-create-cluster]\r\n\r\nRough steps:\r\n- Define GKE Groups in our Terraform code\r\n-\u00a0Deploy RoleBindings and ClusterRoleBindings to map k8s service accounts to our namespaces\r\n- Artifactory has a specific service account with access only to its namespace\r\n\r\n\r\nAcceptance:\r\n- Validate if Google Groups for GKE will work\r\n- A deployment plan for rolling this out to production (note.. new cluster required!)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-771", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Use Google Groups for GKE to drive RBAC in our clusters", "updated": "2019-09-12T22:17:06+10:00", "estimate": 5.0, "epic_ref": "CNPS-1051", "epic_name": "", "diff_to_upstream": []}, "CNPS-770": {"assignee": "blackm", "created": "2019-05-29T14:52:54+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n * Update/create BCP details in confluence >\u00a0[https://confluence.service.anz/pages/viewpage.action?pageId=504172325]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-770", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Input BCP plan details into DR plan", "updated": "2019-10-24T15:49:20+11:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-769": {"assignee": "soin", "created": "2019-05-29T14:50:37+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n * Update/create Twistlock DR details in confluence >\u00a0[https://confluence.service.anz/pages/viewpage.action?pageId=504172325]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-769", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Input Twistlock details in DR plan", "updated": "2019-08-20T16:42:31+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-768": {"assignee": "headenj1", "created": "2019-05-29T14:49:37+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n * Update/create Spinnaker DR details in confluence >\u00a0[https://confluence.service.anz/pages/viewpage.action?pageId=504172325]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-768", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Input Spinnaker details to DR plan", "updated": "2019-08-20T16:42:31+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-767": {"assignee": "agarwas2", "created": "2019-05-29T14:48:58+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n * Update/create Artifactory DR details in confluence >\u00a0[https://confluence.service.anz/pages/viewpage.action?pageId=504172325]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-767", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Input Artifactory details to DR plan", "updated": "2019-08-20T16:42:32+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-764": {"assignee": "tanga", "created": "2019-05-29T10:52:19+10:00", "creator": "tanga", "description": "*Issue*\r\nGCP prod Jenkins - 8gig volume is not big enough for customers.\r\nhttps://jenkins.gcp.anz/\r\n\r\nSee linked issue for initial incident (PIPS-754).  This is a follow up ticket to increase the volume capacity.\r\n\r\n*Tasks*\r\n* Increase volume capacity to 200 gig.\r\n* Verify behaviour when resizing volume:\r\n** Does data get retained?  If not need to  process to copy over and resize.\r\n* Document process.\r\n\r\n*Acceptance Criteria*\r\n* Jenkins volume capacity increased to 200 gig (dev/stg/prod)\r\n* Data is retained as part of resizing.\r\n\r\n*Notes*\r\n* According to this blog, can resize dynamically now with k8s v1.11: https://kubernetes.io/blog/2018/07/12/resizing-persistent-volumes-using-kubernetes/\r\n* Approach is to test this out in dev GKE cluster to see if it works.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-764", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Increase Jenkins volume capacity", "updated": "2019-08-20T16:42:30+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-763": {"assignee": "soin", "created": "2019-05-29T10:09:38+10:00", "creator": "rickarm1", "description": "Acceptance Criteria\r\n * Create/review the space on confluence that gives an overview on how twistlock operates\r\n * Add FAQ's that customers would like to refer to\r\n * Flesh out basic TL concepts about what defenders/consoles do & how we setup policies", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-763", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Create Twistlock Knowledge Base/FAQ", "updated": "2019-08-20T16:38:51+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-762": {"assignee": null, "created": "2019-05-29T09:04:03+10:00", "creator": "hutchisc", "description": "To use kubectl against the prod cluster(s), we need to use an Optus hotspot instead of the ANZ network. This is crazy. Crazy, crazy, crazy.\r\n\r\nLet's fix this, please.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-762", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Allow access to prod cluster with kubectl from ANZ network", "updated": "2019-08-20T16:42:36+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-761": {"assignee": null, "created": "2019-05-29T08:27:24+10:00", "creator": "hutchisc", "description": "If we intend to continue to auto-upgrade kubernetes versions on nodepools, we should monitor the k8s version of the nodes so we can show the current version and the history on a dashboard. This makes it clear when the nodes get upgraded, which can be helpful when diagnosing production issues - it's always good to know if something has changed.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-761", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Closed", "summary": "Monitor GKE node versions if auto-upgrade is used", "updated": "2019-09-17T08:39:36+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-759": {"assignee": null, "created": "2019-05-29T07:25:41+10:00", "creator": "hutchisc", "description": "GCP Artifactory is reachable by a NodePort service so it can be reached internally across regions (ILBs are region-bound). Our customers are using an IP address of one of the nodes, and that is fragile as if the node pool is recreated (such as when an automated k8s upgrade occurs), the IP addresses change.\r\n\r\nIf we can give a name to one of the node IP addresses automatically, our customers can use that name and have a more robust reference to artifactory.\r\n\r\nWe will also need to add the name to the artifactory certificate SANs.\r\n\r\nWe will also need to monitor the node via the name so as to alert us if it becomes unavailable.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-759", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Closed", "summary": "Add DNS name for GCP Artifactory NodePort", "updated": "2019-09-17T08:39:35+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-758": {"assignee": null, "created": "2019-05-28T17:02:42+10:00", "creator": "soin", "description": "h4. Context\r\n\r\nCurrent user management strategy for twistlock is manual, we need to think about how to allow role based access and remove the manual process for user creation\r\nh4. Scope\r\n\r\n? Should user of twistlock be able to add user through code?\r\nh4. Workaround?\r\n\r\nYes, manually add user to twistlock when user ask\r\n Note: we dont currently keep a list of user anywhere\r\nh4. Risk\r\n\r\nMedium\r\n - Not implementing this will increase toil in the team and effect our ability to deliver higher value work\r\n - Not having the backup plan implemented also increase the risk of this as we have to manually add all the user again\r\n\r\nh4. Technical note\r\n\r\n[#PIPS-494]\u00a0tried to integrate twistlock with gsuite SAML. It looks like user works but group doesnt work. Having said that we should look at it again to make sure group doesnt work.\r\n\r\nThis card might become a SPIKE instead to understand whether gsuite SAML works or not. Even if it works, we still need automation to create user and group with appropriate permission and access to particular collection is required\r\n\r\n_Reference_\r\n\r\n[https://docs.twistlock.com/docs/latest/access_control/assign_roles.html#assigning-roles-to-twistlock-groups]\r\n\r\n[https://cloud.google.com/blog/products/identity-security/cloud-identity-now-provides-access-to-traditional-apps-with-secure-ldap]\r\n\r\n[https://docs.twistlock.com/docs/latest/access_control/integrate_saml_google_g_suite.html]\r\n\r\n[https://docs.twistlock.com/docs/latest/api/api_reference.html]\r\n\r\n- search for group and user\r\nh4. Acceptance Criteria\r\n\r\n_Tentative AC, subject to change once SPIKE is done._\r\n\r\nAC1. Given we need to recreate the twistlock instance include its persistence storage, the same list of user is created with the same permission as before\r\n\r\nAC2. Given a new user, we are able to add the user to twistlock in a repeatable fashion\r\n\r\nAC3. Given a new user, we are able to review the given permission to ensure only appropriate permission is given to the user for the appropriate project\r\n\r\nAC4. User should not be able to remove user from the web UI\r\n\r\n**Need more analysis but it should be something to do with setup RBAC and automate user creation", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-758", "labels": ["repeatability", "usermanagement", "SelfService", "toil"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "soin", "status": "Closed", "summary": "User Management for Twistlock", "updated": "2019-09-17T08:39:42+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-756": {"assignee": "headenj1", "created": "2019-05-28T14:17:32+10:00", "creator": "blackm", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-756", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Upgrade Spinnaker to 1.14 in dev", "updated": "2019-08-20T16:42:29+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-755": {"assignee": "blackm", "created": "2019-05-27T17:48:33+10:00", "creator": "tanga", "description": "*Issue*\r\nTeam is unclear how GCP IAM controls are working currently.  Specifically which AD groups map to what access in GCP.\r\n\r\nEg - some members of the team [~agrawad] / [~tanga] have lost access to GCP production logs, whereas other members [~headenj1] with the same AD groups do have access.\r\n\r\n*Tasks*\r\n* Reverse engineer the code to understand how AD groups map to GCP access.  Start here: https://github.service.anz/ics/terraform-gcp-foundations/blob/master/organisation/modules/iam-transformation-ex/common/iam.tf\r\n* AD groups here: https://github.service.anz/ex/team-onboarding#gcp-ad-groups\r\n\r\n*Acceptance Criteria*\r\nDocument following:\r\n* Current state logic of AD to GCP IAM.\r\n* Which groups should new starters be added to for what access.\r\n* How to define roles in each group (eg view only, read write, admin, etc)\r\n* How we control who's in what group (eg update terrform code?)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-755", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Document GCP IAM controls", "updated": "2019-08-20T16:42:29+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-754": {"assignee": "tanga", "created": "2019-05-27T15:57:40+10:00", "creator": "tanga", "description": "*Issue*\r\nGCP prod Jenkins - cannot login or run jobs due to disk space running out.\r\nhttps://jenkins.gcp.anz/\r\n\r\n{code}\r\nFailed to save /var/jenkins_home/users/jonathanheaden_3728720519784743311/apiTokenStats.xml\r\njava.io.IOException: No space left on device\r\n\tat sun.nio.ch.FileDispatcherImpl.write0(Native Method)\r\n\tat sun.nio.ch.FileDispatcherImpl.write(FileDispatcherImpl.java:60)\r\n\tat sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)\r\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:65)\r\n\tat sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:211)\r\n\tat hudson.util.FileChannelWriter.write(FileChannelWriter.java:72)\r\n\tat java.io.Writer.write(Writer.java:192)\r\n\tat hudson.util.AtomicFileWriter.write(AtomicFileWriter.java:162)\r\n\tat java.io.Writer.write(Writer.java:157)\r\n\tat hudson.XmlFile.write(XmlFile.java:189)\r\n\tat jenkins.security.apitoken.ApiTokenStats.save(ApiTokenStats.java:194)\r\n\tat jenkins.security.apitoken.ApiTokenStats.updateUsageForId(ApiTokenStats.java:149)\r\n\tat jenkins.security.ApiTokenProperty.matchesPassword(ApiTokenProperty.java:203)\r\n\tat jenkins.security.BasicApiTokenHelper.isConnectingUsingApiToken(BasicApiTokenHelper.java:60)\r\n\tat jenkins.security.BasicHeaderApiTokenAuthenticator.authenticate(BasicHeaderApiTokenAuthenticator.java:31)\r\n\tat jenkins.security.BasicHeaderProcessor.doFilter(BasicHeaderProcessor.java:79)\r\n\tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\r\n\tat org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:249)\r\n\tat hudson.security.HttpSessionContextIntegrationFilter2.doFilter(HttpSessionContextIntegrationFilter2.java:67)\r\n\tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\r\n\tat hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:90)\r\n\tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:171)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642)\r\n\tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:49)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642)\r\n\tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:82)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642)\r\n\tat org.kohsuke.stapler.DiagnosticThreadNameFilter.doFilter(DiagnosticThreadNameFilter.java:30)\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1242)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:503)\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:364)\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)\r\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\r\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\r\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n{code}\r\n", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-754", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Triage and fix prod Jenkins disk space full issue + postmortem", "updated": "2019-08-20T16:42:28+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-753": {"assignee": null, "created": "2019-05-24T11:41:12+10:00", "creator": "soin", "description": "h2. Context\r\n\r\nUser reported that Twistlock dev (https://twistlock-dev.ex.gcpnp.anz) was unavailable. We need to be more proactive so that we can avoid customer contacting us when there is outage for twistlock\r\nh2. Acceptance Criteria\r\nh4. AC1\u00a0\r\n\r\n*Given* twistlock is deployed in dev/stg/prod\r\n\r\n*When* any of the above become unavailable via [https://twistlock-[dev|stg|prod].ex.gcpnp.anz|https://twistlock-[dev/]\r\n\r\n*Then* we should be notified with message that include information regarding\u00a0\r\n\r\n\u00a0 - environment\r\n\r\n\u00a0 - url\r\n\r\n\u00a0 - date/time", "fixVersions": [], "issuetype": "Bug", "key": "CNPS-753", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "soin", "status": "Backlog", "summary": "Improve visibility of twistlock", "updated": "2019-09-12T22:18:09+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-752": {"assignee": "headenj1", "created": "2019-05-23T10:04:41+10:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-752", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Document PIR + Actions for staging issues with Artifactory", "updated": "2019-08-20T16:42:27+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-751": {"assignee": "headenj1", "created": "2019-05-22T10:06:42+10:00", "creator": "headenj1", "description": "OB team have raised a new Pull Request for spinnaker config", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-751", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Spinnaker config OB onboarding new PR", "updated": "2019-08-20T16:38:57+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-750": {"assignee": "rickarm1", "created": "2019-05-21T11:38:48+10:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-750", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "DR Plan (Service Support Document)", "updated": "2019-08-20T16:38:56+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-749": {"assignee": "blackm", "created": "2019-05-21T10:58:30+10:00", "creator": "hutchisc", "description": "A common error is to have a newline on the end of a secret or username in a secrets file. The shell script {{utils/encrypt-and-upload-secrets.sh}} takes a secret file and encrypts it with {{gcloud kms}}. This takes the file verbatim.\r\n\r\nInstead it could warn of a newline at the end, or possibly even just strip it off. I'm not sure exactly what secrets are encrypted and if some may need a newline at the end, so perhaps just a warning.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-749", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "encrypt-and-upload-secrets.sh should strip newlines or warn", "updated": "2019-09-12T22:28:35+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-748": {"assignee": "agrawad", "created": "2019-05-21T10:07:09+10:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-748", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Unable to download artiefacts from prod artifactory (CSP)", "updated": "2019-08-20T16:38:59+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-747": {"assignee": "agrawad", "created": "2019-05-21T10:06:06+10:00", "creator": "rickarm1", "description": "h3. Context\r\n\r\nCustomer contacted us on 20/5/2019 regarding to Twistlock dev become unavailable when their twistlock supervisor trying to connect to our twistlock dev console.\r\n\r\nIn addition twistlock dev is not accessible\u00a0[https://twistlock-dev.ex.gcpnp.anz/]\r\nh3. Investigation\r\n - the twistlock console pod was not started with a ImagePullBackoff error (see twistlock_pull_error.png)\r\n - the twistlock cosole pod was looking for an image that doesnt exist in our container registry\r\n - turns out that the version of twistlock was defined in multiple places hence we need to update the one consumed by the cloudbuild too\u00a0\r\n\r\nh3. Acceptance Criteria\r\n\r\nAC1 twistlock dev is accessible\r\n\r\nAC2 Create a card to get twistlock [dev|staging|prod]\u00a0alert when console become unavailable\u00a0\r\n\r\n\u00a0 - created story [PIP-747]\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-747", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Remediate Twistlock lssues in development", "updated": "2019-08-20T16:38:58+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-745": {"assignee": "agrawad", "created": "2019-05-20T16:18:08+10:00", "creator": "rickarm1", "description": "Fix/create the following process documents:\r\n * Order SSL Certs.\r\n * Order Service Accounts\r\n * Proxy whitelisting\r\n * Amend on Prem firewall rules.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-745", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Update/Create process documents.", "updated": "2019-08-20T16:38:55+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-744": {"assignee": "tanga", "created": "2019-05-20T16:14:18+10:00", "creator": "rickarm1", "description": "Chat about the process going forward for managing and rotating secrets. Currently its a very manual process and needs to be re-thought as the platform scales.\r\n\r\n*Discussion items*\r\n* Where we store encrypted secrets \u2013 current state is in GCS bucket.\r\n* Where we store unencrypted secrets \u2013 current state is 1Password.\r\n* How we rotate secrets.\r\n* Consider certs as well.\r\n* Anything else.\r\n\r\n*Ideas scratchpad*\r\n* Store encrypted string in code (eg yaml).\r\n** Store within each tool/service repo (vs centralise encrypted strings in one repo)\r\n** Can organise by environment.\r\n** Customers can leverage pattern for managing their own secrets (eg fork or clone repo). Make it easy for customers to encrypt secrets (eg self service job or shell script in repo).\r\n* Continue to store actual secret in 1Password or similar.  Need to provide access to more team members.\r\n* Automated script for secrets rotation (eg generate, encrypt and update GitHub).  Still need manual trigger as actual secret needs to be stored in 1Password.\r\n* Assess how far away Hasicorp Vault is: https://www.hashicorp.com/products/vault/enterprise. Can we use opensource version in the interim?\r\n\r\n* Store encrypted string in code (eg yaml).\r\n** Centralise encrypted strings in one repo vs store within each tool/service repo.\r\n** Can organise by tool or by environment.\r\n** Customers can leverage pattern for managing their own secrets (eg fork or clone repo).  Make it easy for customers to encrypt secrets (eg self service job or shell script in repo).\r\n* Assess how far away Hasicorp Vault is: https://www.hashicorp.com/products/vault/enterprise.  Can we use opensource version in the interim?\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-744", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Key Management/Secret Rotation Tech Huddle", "updated": "2019-08-20T16:38:54+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-743": {"assignee": "rickarm1", "created": "2019-05-20T16:12:57+10:00", "creator": "rickarm1", "description": "*Focus Question:* \u201cHow do we better engage our customers, how do they better engage us?\u201d\r\n\r\n\u00a0\r\n\r\n*Preparation for the session \u2013 things to think about:*\r\n\r\n\r\n * What are our current *pain* points?\r\n * What can we do differently to address these pains?\r\n\r\nWhat is currently working well?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-743", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Session to brainstorm ideas on how we engage with our customers better", "updated": "2019-08-20T16:38:54+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-742": {"assignee": "headenj1", "created": "2019-05-20T13:19:32+10:00", "creator": "headenj1", "description": "Artifactory in both Dev and Staging is currently failing to start (20/5/19)\r\n\r\nThe errors suggest that the interoperability keys which grant access to the storage bucket are no longer granting the relevant access\r\n\r\n\u00a0\r\n\r\n\"textPayload\": \"Caused by: java.io.IOException: Failed to put blob '353bca8b4e780cf292b3a35377bc3c1a58424c25' to GCS caused by 403:The request signature we calculated does not match the signature you provided. Check your Google secret key and signing method.\\n\\tat org.artifactory.addon.filestore.type.jets3t.gcs.GoogleJets3tBinaryProvider.addSmallStream(GoogleJets3tBinaryProvider.java:209)\\n\\tat org.artifactory.addon.filestore.type.jets3t.gcs.GoogleJets3tBinaryProvider.addStream(GoogleJets3tBinaryProvider.java:180)\\n\\tat org.artifactory.addon.filestore.type.jets3t.CommonS3Methods.test(CommonS3Methods.java:61)\\n\",", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-742", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Investigate dev & stg issue with Artifactory", "updated": "2019-08-20T16:38:57+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-741": {"assignee": "tanga", "created": "2019-05-20T12:09:44+10:00", "creator": "tanga", "description": "*Issue*\r\nSpinnaker ssl cert in non production is incorrect:\r\n* dev currently using artifactory.gcpnp.anz (https://spinnaker-dev.ex.gcpnp.anz/ -> redirects to -> https://spinnaker-api-dev.ex.gcpnp.anz/)\r\n* stg currently using gcpnp.anz (https://spinnaker-stg.ex.gcpnp.anz/ -> redirects to -> https://spinnaker-api-stg.ex.gcpnp.anz/\r\n\r\nNot an issue via chrome and curl (can connect via insecure mode), however for system to system communication (eg Artifactory calling Spinnaker webhook) this fails.\r\n{code}\r\n\"textPayload\": \"Exception in thread \\\"pool-131-thread-1\\\" java.lang.Error: javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative DNS name matching spinnaker-api-dev.ex.gcpnp.anz found.\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1148)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\\n\\tat java.lang.Thread.run(Thread.java:748)\\nCaused by: javax.net.ssl.SSLHandshakeException: java.security.cert.CertificateException: No subject alternative DNS name matching spinnaker-api-dev.ex.gcpnp.anz found.\\n\\tat sun.security.ssl.Alerts.getSSLException(Alerts.java:192)\\n\\tat sun.security.ssl.SSLSocketImpl.fatal(SSLSocketImpl.java:1949)\\n\\tat sun.security.ssl.Handshaker.fatalSE(Handshaker.java:302)\\n\\tat sun.security.ssl.Handshaker.fatalSE(Handshaker.java:296)\\n\\tat sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1514)\\n\\tat sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:216)\\n\\tat sun.security.ssl.Handshaker.processLoop(Handshaker.java:1026)\\n\\tat sun.security.ssl.Handshaker.process_record(Handshaker.java:961)\\n\\tat sun.security.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:1062)\\n\\tat sun.security.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1375)\\n\\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1403)\\n\\tat sun.security.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1387)\\n\\tat sun.net.www.protocol.https.HttpsClient.afterConnect(HttpsClient.java:559)\\n\\tat sun.net.www.protocol.https.AbstractDelegateHttpsURLConnection.connect(AbstractDelegateHttpsURLConnection.java:185)\\n\\tat sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1316)\\n\\tat sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1291)\\n\\tat sun.net.www.protocol.https.HttpsURLConnectionImpl.getOutputStream(HttpsURLConnectionImpl.java:250)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\\n\\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\\n\\tat org.codehaus.groovy.runtime.metaclass.MethodMetaProperty$GetBeanMethodMetaProperty.getProperty(MethodMetaProperty.java:76)\\n\\tat org.codehaus.groovy.runtime.callsite.GetEffectivePojoPropertySite.getProperty(GetEffectivePojoPropertySite.java:64)\\n\\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callGetProperty(AbstractCallSite.java:296)\\n\\tat WebHook.callPost(webhook.groovy:728)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\\n\\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\\n\\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1210)\\n\\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnCurrentN(ScriptBytecodeAdapter.java:82)\\n\\tat WebHook.this$dist$invoke$1(webhook.groovy)\\n\\tat WebHook$PostTask.methodMissing(webhook.groovy)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\\n\\tat groovy.lang.MetaClassImpl.invokeMissingMethod(MetaClassImpl.java:936)\\n\\tat groovy.lang.MetaClassImpl.invokePropertyOrMissing(MetaClassImpl.java:1259)\\n\\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1212)\\n\\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\\n\\tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.callCurrent(PogoMetaClassSite.java:69)\\n\\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:174)\\n\\tat WebHook$PostTask.run(webhook.groovy:960)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\\n\\t... 2 more\\nCaused by: java.security.cert.CertificateException: No subject alternative DNS name matching spinnaker-api-dev.ex.gcpnp.anz found.\\n\\tat sun.security.util.HostnameChecker.matchDNS(HostnameChecker.java:204)\\n\\tat sun.security.util.HostnameChecker.match(HostnameChecker.java:95)\\n\\tat sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:455)\\n\\tat sun.security.ssl.X509TrustManagerImpl.checkIdentity(X509TrustManagerImpl.java:436)\\n\\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:200)\\n\\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:124)\\n\\tat sun.security.ssl.ClientHandshaker.serverCertificate(ClientHandshaker.java:1496)\\n\\t... 47 more\\n\",\r\n{code}\r\n\r\nFull log file attached.\r\n\r\n*Tasks*\r\n* Request certificates for dev and stg.\r\n** Note redirects above, certificate may need to accommodate both URLs.\r\n* Add new certificates to code and redeploy Spinnaker in dev/stg.\r\n* Turn on bucket versioning for (see comments for context):\r\n** halyard-config\r\n** engineering-acceleration-secrets\r\n* Update permissions on halyard-config to allow read/write/delete (see comments for context).\r\n\r\n*Acceptance Criteria*\r\n* Spinnaker dev and stg have correct SSL certificates - can login in securely via https.\r\n* Unblocks PIPS-702, Artifactory can trigger Spinnaker webhook\r\n* Bucket versioning turned (dev/stg/prod) on for:\r\n** halyard-config\r\n** engineering-acceleration-secrets\r\n* Read/Write/Delete permission enabled for halyard-config bucket\r\n** Already enabled for engineering-acceleration-secrets bucket\r\n** NOT enabled (ie no change) for spinnaker-config bucket as existing logic only allows service account (not user) to update bucket.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-741", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Fix Spinnaker ssl cert non prod", "updated": "2019-08-20T16:42:26+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-740": {"assignee": "headenj1", "created": "2019-05-20T09:20:16+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n * Script the same alerts that exist for Spinnaker in dev into production stackdriver\r\n * Update notification trigger destination to\u00a0{{DAPipelineAlerts@anz.com}}\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-740", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Script Spinnaker alerts for Prod", "updated": "2019-11-06T11:05:05+11:00", "estimate": null, "epic_ref": "CNPS-1067", "epic_name": "", "diff_to_upstream": []}, "CNPS-739": {"assignee": "headenj1", "created": "2019-05-20T07:32:23+10:00", "creator": "hutchisc", "description": "When the creds for a GCP repo are invalid, the pubsub connection to GCP fails, logging an error every 5 seconds. We have no control over the creds, so we usually cannot easily fix this condition ourselves. When the logs are spammed with GCP auth failures, it can hide other relevant logs.\r\n\r\nWe should make sure we do not log the same message over and over again every five seconds.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-739", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Gitsync spams logs on GCP auth failure", "updated": "2019-08-20T16:43:03+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-738": {"assignee": "soin", "created": "2019-05-17T12:07:47+10:00", "creator": "rickarm1", "description": "h2. Deployment Checklist\r\n\r\nThings that we need for the deployment\r\n\r\n*Waiting*\r\n * \u00a0Security Council Approval\r\n\r\n*Ready*\r\n * Cloud Approval\r\n * New Change record\u00a0 -\u00a0[https://anztech.service-now.com/nav_to.do?uri=change_request.do?sys_id=4f329753db05bb806cde59364a961972]\r\n * TLS for DA twistlock Console UI [#PIPS-577]\r\n ** TLS information is in password vault\r\n * Add Intelligent stream to allow list in perimeter proxy [#PIPS-700]\r\n * Service account to access perimeter proxy [#PIPS-559]\r\n ** service account information is in password vault\r\n * \u00a0Twistlock License\u00a0\r\n ** Inny/Matt/Satyam/Deepak has it\r\n\r\nh2. Acceptance Criteria\r\n * Twistlock deployed to anz-ex-service-prod\r\n * Twistlock Web UI is secured with TLS\r\n * Twistlock is accessible internally via [https://twistlock.gcp.anz|https://twistlock.gcp.anz/]\r\n * Ex-Service team members able to login Twistlock production\r\n * Twistlock production able to download latest vulnerability and thread via the intelligent stream", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-738", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Deploy Twistlock to Production environment", "updated": "2019-08-20T16:38:49+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-737": {"assignee": null, "created": "2019-05-16T16:23:09+10:00", "creator": "mereditj", "description": "In the event of the Australia *region* going down (CloudSQL service or whole), we should be able to standup a new CloudSQL instance in another region and recover from the latest database export (See PIPS-736) so that we ensure pipeline platform continuity.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-737", "labels": ["Artifactory", "Disaster"], "lastViewed": null, "priority": "Low", "project": "CNPS", "reporter": "soin", "status": "Closed", "summary": "Standup Artifactory SQL instance in another region", "updated": "2019-08-20T16:42:26+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-736": {"assignee": "inagakir", "created": "2019-05-16T16:17:17+10:00", "creator": "mereditj", "description": "h4. Story\r\n{code:java}\r\nAs Engineering Acceleration\r\nWhen the CloudSQL instance for Artifactory is removed\r\nI want to be able to restore the data to a new CloudSQL instance\r\nSo that we can quickly recover from disaster\r\n{code}\r\nh4. Background Notes\r\n\r\nCurrently it is not possible to export CloudSQL backups to either GCS (cloud storage) or other place. The backups are also tied to the specific database instance meaning in the event the instance should disappear, all backups are gone.\r\n\r\nGoogle recommend regularly exporting data.\r\n\r\nReferences:\r\n - [https://cloud.google.com/sql/docs/postgres/import-export/]\r\n - [https://cloud.google.com/sql/docs/postgres/import-export/exporting]\r\n\r\nh4. Acceptance Criteria\r\n * -Setup a schedule to backup Artifactory DB (in the event of the DB got lost together with its backups)- \u27a1\ufe0f this comment\r\n Create a CloudBuild trigger to be able to manually trigger the process of exporting Artifactory DB to storage bucket.\r\n ** How often do we want to backup the DBs? \u27a1\ufe0fEveryday\r\n ** Only prod? Or staging, dev as well? (We can backup all environment but do it less frequent on dev/staging)\u27a1\ufe0fAll environments\r\n * -Confirm that we can restore Artifactory DB from the backup- \u27a1\ufe0fRaised a separate card https://jira.service.anz/browse/CNPS-1232\r\n\r\nh4. Tasks\r\n * \u2705Deploy cron job that periodically trigger export process to GKE\r\n * \u2705Remove permissions I added during experimentation in [terraform-gcp-foundation|https://github.service.anz/ics/terraform-gcp-foundations/pull/965].", "fixVersions": [], "issuetype": "Story", "key": "CNPS-736", "labels": ["Artifactory"], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "soin", "status": "Story Done", "summary": "CloudSQL exports for Artifactory DB", "updated": "2019-10-23T10:38:39+11:00", "estimate": 21.0, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-735": {"assignee": "agrawad", "created": "2019-05-16T15:42:55+10:00", "creator": "agrawad", "description": "DC guys are looking to migrate data from their DC artifactory (~2 TB) to our GCP artifactory and turn off their Artifactory. Artifactory sync is not possible as their artifactory is running on different major version and they just want to get rid of it at this stage. Ongoing conversation is required to understand their needs and possible implication on our Artifactory.\u00a0\r\n\r\nContacts\r\n * Michael Fornaro\r\n * Lawrence MacDonald\r\n\r\n\u00a0\r\n\r\nA/C\r\n\r\nClear picture on:\r\n * Total size of artefacts stored (I recall 2TB?)\r\n * What date are you planning to turn off dcArti?\r\n * Who are the users of dcArti? (all those users will need network paths from their tooling to GCP)\r\n * How do we plan to communicate this change?\r\n * What\u2019s the rollback plan?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-735", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Understand the scope of DC Artifactory data migration to GCP Artifactory", "updated": "2019-08-20T16:38:59+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-734": {"assignee": null, "created": "2019-05-16T15:13:11+10:00", "creator": "soin", "description": "h2. h2.\u00a0Context\u00a0\r\n\r\nEach of the spinnaker service has a monitoring daemon as a sidecar in the pod. We found that the spinnaker gate service monitoring daemon pod is unable to send metrics to the stackdriver with the following error:\r\n{code:java}\r\ngate failed https://localhost:8084/spectator/metrics with HTTP Error 400: Bad Request {code}\r\n\u00a0\r\n\r\nReference:\r\n - [https://github.com/spinnaker/spinnaker-monitoring/blob/07b56f2fa5d37fc7512e54d6989ea3e82548b10f/spinnaker-monitoring-third-party/third_party/stackdriver/gate-microservice-dashboard.json]\r\n\r\n-\u00a0[https://github.com/spinnaker/spinnaker/issues/2016]\r\n\r\n- [https://github.com/spinnaker/spinnaker-monitoring/blob/master/spinnaker-monitoring-daemon/registry.dev/gate.yml]\r\n\r\n- [https://github.com/spinnaker/halyard/pull/950/files]\r\n\r\n- [https://github.com/spinnaker/spinnaker/issues/2016]\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Bug", "key": "CNPS-734", "labels": ["Metrics", "bug", "spinnaker"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "soin", "status": "Backlog", "summary": "spinnaker gate service unable to send metrics to stack driver", "updated": "2019-05-29T15:36:09+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-733": {"assignee": "headenj1", "created": "2019-05-16T11:44:54+10:00", "creator": "blackm", "description": "Spinnaker stores some things in Redis. What things? In DR scenario do we need these things?\r\n\r\nAcceptance:\r\n * Validate production Spinnaker can be redeployed in DR scenario\r\n * if failure, generate new tickets to for fixing this\r\n * If success, document the process in\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-733", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Confirm if Spinnaker Redis backups are required", "updated": "2019-08-20T16:42:25+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-732": {"assignee": "soin", "created": "2019-05-16T11:41:17+10:00", "creator": "blackm", "description": "Currently Artifactory CloudSQL is configured to auto-snapshot once a day. Validate that we can use these snapshots to recover from a deleted database instance\r\n\r\nAcceptance:\r\n * Success/failure of DR test\r\n * if failure, produce Jira tickets for next steps\r\n * if success, document the process in\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-732", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Confirm Artifactory CloudSQL backups are usable", "updated": "2019-08-20T16:42:25+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-730": {"assignee": "headenj1", "created": "2019-05-15T15:49:13+10:00", "creator": "blackm", "description": "In order to deliver on any kind of DR plan, we need solid automation.\r\n\r\nValidate Spinnaker can be stood up from scratch via a pipeline.\r\n\r\nAcceptance:\r\n - New dev Spinnaker can be started when the dev instance is deleted", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-730", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Validate Spinnaker automation", "updated": "2019-09-17T08:39:26+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-729": {"assignee": "soin", "created": "2019-05-15T15:48:30+10:00", "creator": "blackm", "description": "h2. Context\r\n\r\nTo enable efficient disaster recovery, a fast and repeatable way to create a new instance of twistlock is essential.\r\n\r\nThis card is focus on create a new instance of Twistlock with *no configuration*\r\nh2. Technical Details\r\n\r\nTo enable the above we will need to be able to automatically create a new instance of twistlock preferably using a pipeline to ensure repeability and traceability.\r\nh2. Acceptance Criteria\r\n\r\nAC1. A pipeline is created to deploy twistlock in dev|nonprod|prod\r\n\r\nAC2. Automation scripts are created for twistlock\u00a0\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-729", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Ensure repeatability of twistlock provisioning with no configuration", "updated": "2019-08-20T16:42:32+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-728": {"assignee": "kuzhinjr", "created": "2019-05-15T15:47:51+10:00", "creator": "blackm", "description": "In order to deliver on any kind of DR plan, we need solid automation.\r\n\r\nValidate Artifactory can be stood up from scratch via a pipeline.\r\n\r\nAcceptance:\r\n\r\n- New dev Artifactory can be started when the dev instance is deleted", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-728", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Validate Artifactory automation", "updated": "2019-09-17T08:39:27+10:00", "estimate": null, "epic_ref": "CNPS-720", "epic_name": "", "diff_to_upstream": []}, "CNPS-727": {"assignee": null, "created": "2019-05-15T15:18:49+10:00", "creator": "castanoa", "description": "Spinnaker clients who want to use Jenkins, need to provide an Jenkins username and API key with the correct access permissions.\r\n\r\nThen spinnaker should be set up automatically\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-727", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Spinnaker: Set up Jenkins account automatically", "updated": "2019-09-17T08:39:41+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-726": {"assignee": null, "created": "2019-05-15T15:13:41+10:00", "creator": "castanoa", "description": "It is shit at the moment.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-726", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Jenkins: Clean up cloud build script (Convert to make)", "updated": "2019-09-17T08:39:41+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-725": {"assignee": null, "created": "2019-05-15T15:10:58+10:00", "creator": "castanoa", "description": "TBD", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-725", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Jenkins: Remove unnecessary plugins from Jenkins image", "updated": "2019-09-17T08:39:40+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-724": {"assignee": null, "created": "2019-05-15T15:08:36+10:00", "creator": "castanoa", "description": "TBD", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-724", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Jenkins: Pull worker images from Artifactory", "updated": "2019-09-17T08:39:40+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-723": {"assignee": null, "created": "2019-05-15T15:06:47+10:00", "creator": "castanoa", "description": "Acceptance criteria:\r\n * Jenkins admins should be able to organise jobs in views (groups)\r\n * Jenkins admins should be able to give read/write permissions to Gsuite groups or users over those views.\r\n * Jenkins users would be able to \"see\" or \"modify\" jobs inside the view they have permissions.\r\n * Jenkins users shouldn't be able to see jobs outside the view they have permissions on.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-723", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Jenkins: Restrict access to Jobs based on GSuite Groups", "updated": "2019-09-17T08:39:39+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-721": {"assignee": null, "created": "2019-05-15T14:52:39+10:00", "creator": "castanoa", "description": "Acceptance criteria:\r\n * After log in, Jenkins should have the Gsuite groups to which the logged in user belongs to.\u00a0\r\n\r\n\u00a0\r\n\r\nContext:\r\n\r\nWe might need to fix the plugin we are using. Currently we are using this:\r\n\r\n[https://github.com/jenkinsci/google-login-plugin]\r\n\r\n\u00a0\r\n\r\nThere is a bug opened in Jenkins Jira requesting this feature:\r\n\r\n[https://issues.jenkins-ci.org/browse/JENKINS-28010]\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-721", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Jenkins: Retrieve the logged in user's GSuite Group", "updated": "2019-09-17T08:39:38+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-720": {"assignee": null, "created": "2019-05-15T13:24:42+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-720", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic Done", "summary": "Testing and development of Pipelines platform D/R capability", "updated": "2019-10-24T15:50:55+11:00", "estimate": null, "epic_ref": null, "epic_name": "Disaster Recovery", "diff_to_upstream": []}, "CNPS-719": {"assignee": null, "created": "2019-05-15T10:26:43+10:00", "creator": "rickarm1", "description": "h3. Description\r\n\r\nThis story covers monitoring of Git Sync utilising google's out of the box Stackdriver tool.\r\nh3. Acceptance Criteria\r\n\r\nStackdriver will alert the delivery acceleration team via email when the following *<conditions>* on the Git Sync service are met:\r\n\r\n\u00a0\r\n||*<conditions>*||\r\n|Service has attempted 2 or more restarts per minute|\r\n|Service has been offline for 5 or more minutes|\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-719", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Setup stackdriver monitoring for Git Sync", "updated": "2019-05-29T15:36:03+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-718": {"assignee": null, "created": "2019-05-14T13:32:02+10:00", "creator": "blackm", "description": "In order for us to have repeatable infra deployments, everything must be in code!\r\n\r\nCode the automation for sync.\r\n\r\nAcceptance:\r\n * Feature toggle to enable Artifactory sync\r\n * Tested deployment of GCP Artifactory sync configuration", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-718", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Automation of Artifactory sync configuration", "updated": "2019-09-17T08:39:38+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-717": {"assignee": "blackm", "created": "2019-05-14T11:56:24+10:00", "creator": "blackm", "description": "TECH DEBT\r\n\r\nThe cloudbuilder image is nice idea, but do some reason it rebuilds everytime we do a Cloud Build run. Investigate this, and fix the caching so that cloudbuilder is stored in GCR and only built as necessary.\r\n\r\nAcceptance:\r\n * Twistlock cloud build runs do not create cloudbuilder *everytime*\r\n\r\nReference:\r\n\r\n[https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/helm-charts/twistlock/Dockerfile.cloudbuild]", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-717", "labels": ["tech-debt"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Ensure \"cloudbuilder\" image is not built *everytime* in Cloud Build runs", "updated": "2019-10-21T09:14:42+11:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-715": {"assignee": "agrawad", "created": "2019-05-14T09:11:06+10:00", "creator": "agrawad", "description": "Currently there are 4 people listed as the support contacts with Jfrog, which means that only they can raise tickets with them.\r\n\u00a0\r\nVinutha Vasan\r\nSiva Charan Durbha\r\nDinesh Dhinakavan\r\nKomali Lanka\r\nBalaji T.\r\n\u00a0\r\nA/C\r\nValidate and amend the list so that the list of support contacts is correct.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-715", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Support contacts with Jfrog(Artifactory).", "updated": "2019-08-20T16:42:24+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-714": {"assignee": "blackm", "created": "2019-05-13T14:52:08+10:00", "creator": "blackm", "description": "A single terraform configuration for anz-ex-services means that broken code in (for example) `spinnaker.tf` will prevent a deployment of any other service.\r\n\r\nLikewise, changes promoted from dev->staging for one service, will necessarily promote changes for all other services to staging. This also applies to production - which is a big problem.\r\n\r\nSplit the TF config into these five services:\r\n * Spinnaker\r\n * Twistlock\r\n * Jenkins\r\n * Artifactory\r\n * Core (gke, gke_nodes, k8s-api-lib, source_repository, monitoring)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-714", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Backlog", "summary": "Split Terraform configuration in anz-ex-services for separate services", "updated": "2019-09-17T08:41:30+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-713": {"assignee": "blackm", "created": "2019-05-13T14:44:07+10:00", "creator": "blackm", "description": "DCX received admin-level access to their GCP folder. EX would like this also.\r\n\r\nEngage Cloud Services and Security to get this done.\r\n\r\nAcceptance:\r\n\r\n- [~blackm] to acquire and validate admin", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-713", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Acquire admin access to EX GCP folders", "updated": "2019-08-20T16:39:13+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-712": {"assignee": null, "created": "2019-05-13T12:40:41+10:00", "creator": "blackm", "description": "When the Go and What services have been deployed to production in GCP, we will need an on-prem DNS update to redirect traffic.\r\n\r\nAcceptance:\r\n * Accessing go/blah is served from GCP\r\n * Accessing what/blah is served from GCP", "fixVersions": [], "issuetype": "Story", "key": "CNPS-712", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Update on-prem DNS for Go and What services", "updated": "2019-11-16T09:18:39+11:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-711": {"assignee": null, "created": "2019-05-13T12:29:03+10:00", "creator": "blackm", "description": "Onboard the Go and What services from DCX to our anz-ex-services cluster.\r\n\r\nThis follows hotly on the tail of spin-demo in PIPS-706.\r\n\r\nAcceptance:\r\n * Gitsync and Spinnaker pipeline set up for What\r\n * Gitsync and Spinnaker pipeline set up for Go\r\n * Services deployed to production\r\n\r\nOut of scope:\r\n * DNS update to point traffic at new services (PIPS-712)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-711", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Go and What services", "updated": "2019-11-16T09:18:46+11:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-710": {"assignee": null, "created": "2019-05-13T11:35:04+10:00", "creator": "castanoa", "description": "Bennie asked for this. Have to talk to him for more details.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-710", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Investigate using Spinnaker with Helm based Kubernetes resources", "updated": "2019-11-16T09:25:33+11:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-708": {"assignee": null, "created": "2019-05-13T10:32:44+10:00", "creator": "castanoa", "description": "# Editors/Owners\r\nAlex.Medeiros@anz.com\r\nangus.ng@anz.com\r\nMarcin.Niemira@anz.com\r\nMicheal.Bloch@anz.com\r\nJebakumar.Chandraraj2@anz.com\r\nPlentiful.Lee@anz.com\r\nSirisha.Vadrevu@anz.com\r\nSourasree.Ghosh@anz.com\r\nStanley.Zhang@anz.com\r\nStephen.Shim@anz.com\r\nXU.YAN@anz.com\r\n\r\n# Viewers\r\nIulian.Stefanica@anz.com\r\nJamie.Hoeks@anz.com\r\nMohammedImran.Shaik@anz.com\r\nRitchie.Anesco@anz.com\r\nRizwan.Rehman@anz.com\r\nSaiKiran.Gummaraj@anz.com\r\nSam.Uong@anz.com\r\nSara.Danaei@anz.com\r\nSoumya.Hameed@anz.com\r\nBrian.Burke@anz.com", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-708", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Add more users to Jenkins requested by Marcin", "updated": "2019-08-20T16:42:24+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-707": {"assignee": "hutchisc", "created": "2019-05-13T10:00:51+10:00", "creator": "blackm", "description": "Investigate stackdriver/splunk and provide technical recommendation on what tool DA will use to support customers that are using CI/CD in GCP.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-707", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "[Spike] Investigate Splunk vs. Stackdriver for monitoring and alerting", "updated": "2019-08-20T16:39:06+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-706": {"assignee": "headenj1", "created": "2019-05-13T09:57:07+10:00", "creator": "blackm", "description": "h2. Description\r\n\r\nAn app is required so that we can demo the functionality of spinnaker.\r\n\r\nThis could also be used for testing functionality if we make changes.\r\n\r\nPlan and construct a simple demo - for example:\r\n - create a repo to which we can commit code\r\n - kicks off a build in the staging environment\r\n - Cloud Build a docker image\r\n - Spinnaker then deploys an app to hit with the browser\r\n\r\nh2. Acceptance criteria:\u00a0\r\n\r\nWe are able to show spinnaker deployment capability with an application.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-706", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Pipelines Demo", "updated": "2019-08-20T16:39:10+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-705": {"assignee": null, "created": "2019-05-13T09:42:03+10:00", "creator": "rickarm1", "description": "h2. Description\r\n\r\nSplunk is now consuming Git Hub logs as recently setup by the offshore Engineering Acceleration team. The intent of this story is to enable the sending of Git Sync logs from on prem (Splunk) to GCP (Stackdriver) so that all logs/alerting can be sent by Stackdriver.\r\nh2. Acceptance Criteria\r\n # Git Sync logs are visible and being updated in stackdriver", "fixVersions": [], "issuetype": "Story", "key": "CNPS-705", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Integrate Git Sync logs with Stackdriver", "updated": "2019-05-17T10:22:32+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-703": {"assignee": null, "created": "2019-05-10T13:42:45+10:00", "creator": "rickarm1", "description": "Currently the spinnaker namespace is named \"csp-spinnaker\".\u00a0\r\n\r\nWe should rename it to \"spinnaker\" as the application will be used for multiple teams\r\n\r\n*Acceptance*\r\n\r\n- Spinnaker is deployed under the `spinnaker` namespace.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-703", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Rename spinnaker namespace to remove \"csp\" reference", "updated": "2019-11-16T08:48:04+11:00", "estimate": 5.0, "epic_ref": "CNPS-1044", "epic_name": "", "diff_to_upstream": []}, "CNPS-702": {"assignee": "tanga", "created": "2019-05-10T12:25:03+10:00", "creator": "blackm", "description": "{color:#DE350B}*NOTE* - this ticket has morphed into a mini epic, see comments and related tickets below.{color}\r\n\r\n*Helm webhook* - completed, see https://github.service.anz/ex/spin-config/blob/master/docs/develop/HELM_ARTIFACT_TYPE.md\r\nSpinnaker work:\r\n* Enable helm chart support (PIPS-896)\r\n* Add helm chart config to internal-config (PIPS-898)\r\n\r\nArtifactory work:\r\n* Enable Artifactory webhook trigger with helm (PIPS-900)\r\n* Enhance Artifactory helm webhook (PIPS-919)\r\n\r\n*Docker webhook*\r\nStarting with a spike to determine the work needed (PIPS-920)\r\n\r\n*Automation* - no longer required for webhooks.\r\n* Automate Webhook plugin installation (PIPS-921)\r\n\r\n*Unrelated blockers*\r\n* Certificate issues (PIPS-741, PIPS-876)\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nAchana from Brendan\u2019s team requests support enabling a custom webhook plugin for them to enable key functionality for their use of the platform.\r\n\r\nThis ticket is to enable the webhook plugin manually for the customer so they are unblocked - separate ticket raised to automate it (PIPS-716).\r\n\r\nAcceptance:\r\n - Functioning webhook enabled, deployed to production.\r\n - Spinnaker pipeline can be triggered via webhook.\r\n - A happy customer\r\n\r\nReference links:\r\n *\u00a0[https://www.jfrog.com/confluence/display/RTF/User+Plugins]\r\n* jfrog plugin: https://github.com/jfrog/artifactory-user-plugins/tree/master/webhook\r\n* csp plugin: https://github.service.anz/csp/artifactory-user-plugins/tree/master/webhook\r\n* csp PR for webhook: https://github.com/jfrog/artifactory-user-plugins/pull/273", "fixVersions": [], "issuetype": "Story", "key": "CNPS-702", "labels": [], "lastViewed": "2019-11-22T11:42:48.295000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Enable a custom Artifactory Spinnaker webhook for BX", "updated": "2019-11-22T11:42:46+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-701": {"assignee": "tanga", "created": "2019-05-10T11:49:01+10:00", "creator": "tanga", "description": "Port spin-config cloudbuild shell scripts that can be called via a Makefile so logic is abstracted to allow:\r\n * code modularisation\r\n * automated testing\r\n * local testing on laptop\r\n\r\nUse Twistlock pattern as a starting point:\r\n [https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/helm-charts/twistlock/Makefile]\r\n [https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/helm-charts/twistlock/cloudbuild.yaml]\r\n\r\n*Out of Scope*\r\n * No logic changes, porting like for like.\r\n * Adding automated tests for logic.\r\n\r\n*Acceptance Criteria*\r\n * All shell script logic moved from cloudbuild.yaml to Makefile.\r\n * Same outcome from cloudbuild deploy in dev using Makefile - before change and after change.", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-701", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Closed", "summary": "Port spin-config cloudbuild to shell scripts / makefile", "updated": "2019-09-17T08:39:29+10:00", "estimate": null, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-700": {"assignee": "agrawad", "created": "2019-05-10T11:45:26+10:00", "creator": "agrawad", "description": "Twistlock console needs to communicate with the Twistlock intelligence stream to pull latest vulnerability information in order to provide visibility of newly detected threats to ANZ. Internet connectivity is established via on premises application proxy (referred to hairpin pattern) in the public gateway zone in the perimeter on premises.\r\n\r\nThe application proxy whitelists hostnames and source IPs to control access.\u00a0\r\n\r\nService account - ECORP\\auifptwstdsa (this account is not live yet, but will be active by 17th May)\r\nURL to be whitelisted -\u00a0[https://intelligence.twistlock.com|https://intelligence.twistlock.com/]\r\n\r\n\u00a0\r\n\r\nAcceptance Criteria -\r\n\r\n\u25aa\u00a0confirmation by Proxy team that the site has been whitelisted. this cannot be tested yet as the prod Twistlock is not live yet.\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-700", "labels": [], "lastViewed": "2019-11-22T09:45:30.233000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Whitelist Intelligence feed site for production twistlock.", "updated": "2019-08-20T16:38:39+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-699": {"assignee": "mereditj", "created": "2019-05-10T11:38:20+10:00", "creator": "mereditj", "description": "As EX I would like to have our alerting scripted up via terraform so that we have a repeatable way to create alerts for each metric we care about.\r\n\r\nNOTE: The Google provider has the ability to create an alert.\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-699", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Script Spinnaker alerts in TF", "updated": "2019-08-20T16:39:07+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-698": {"assignee": null, "created": "2019-05-10T11:32:31+10:00", "creator": "headenj1", "description": "Whenever a new PR is submitted, the code should be validated to ensure there is no breaking changes introduced to hal config\r\n\r\n*Accpeptance Criteria:*\r\n * **Pull requests are validated before being merged\r\n * There is a known process for reviewing and merging PRs\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-698", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "Spin-config PR validation", "updated": "2019-08-20T16:39:01+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-697": {"assignee": "headenj1", "created": "2019-05-10T11:23:48+10:00", "creator": "headenj1", "description": "The spin-config onboarding for new accounts is single folder. This could become difficult to manage as more customers are onboarded\r\n\r\nAs a maintainer of the repo we want to seperate customer included files and not have naming collisions\r\n\r\n\u00a0\r\n\r\n*Acceptance Criteria:*\r\n * User onboarding repo has seperate locations for different customers\r\n * User files do not have naming collisions", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-697", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Refactor spin-config account repo folder structure", "updated": "2019-09-17T08:39:29+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-696": {"assignee": "agrawad", "created": "2019-05-10T10:33:14+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n * Allow communications between on prem Artifactory (QA) instance and GCP Artifactory instance (staging)\r\n * Create 1 x admin account for replication\r\n * 2 x firewall changes\r\n ** On prem firewall\r\n ** GCP firewall\r\n * Validate/test that communications between environments", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-696", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Enable communications between environments (Production)", "updated": "2019-08-20T16:43:41+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-695": {"assignee": "agrawad", "created": "2019-05-10T10:32:37+10:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n * Allow communications between on prem Artifactory (QA) instance and GCP Artifactory instance (staging)\r\n * 2 x firewall changes\r\n ** On prem firewall\r\n ** GCP firewall\r\n * Validate/test that communications between environments", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-695", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Enable communications between environments (QA)", "updated": "2019-08-20T16:38:53+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-694": {"assignee": null, "created": "2019-05-10T05:34:24+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-694", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Stabilising Jenkins for production", "updated": "2019-09-04T14:04:07+10:00", "estimate": null, "epic_ref": null, "epic_name": "Jenkins", "diff_to_upstream": []}, "CNPS-692": {"assignee": "blackm", "created": "2019-05-09T15:02:26+10:00", "creator": "blackm", "description": "Brendan Kuang wants to test out Twistlock. Speak to [~blackm]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-692", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Onboard Cyber Defence to Twistlock staging", "updated": "2019-08-20T16:42:22+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-690": {"assignee": "headenj1", "created": "2019-05-09T14:58:46+10:00", "creator": "blackm", "description": "In order to use Armory for Spinnaker, we need to use their version of Halyard.\r\n\r\nDeploy and run Armory Halyard in our dev cluster and verify everything is working OK. Also verify rollback to Spinnaker OSS causes no problems.\r\n [https://docs.armory.io/spinnaker/install/]\r\n [https://docs.armory.io/spinnaker-install-admin-guides/configure-halyard/]\r\n\r\nAcceptance:\r\n * Tested Armory Halyard\r\n ** Can deploy demo app via pipeline (from DEV to STG or vice versa).\r\n * Tested rollback from Armory Halyard", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-690", "labels": [], "lastViewed": null, "priority": "Major", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "SPIKE: drop in armory halyard and check nothing breaks", "updated": "2019-10-21T09:15:22+11:00", "estimate": 5.0, "epic_ref": "CNPS-1047", "epic_name": "", "diff_to_upstream": []}, "CNPS-689": {"assignee": "soin", "created": "2019-05-09T14:56:28+10:00", "creator": "blackm", "description": "h3. Context\r\n\r\n(From the history of this card, sounds like twistlock was deployed manually on staging)\r\n\r\nUpdate twistlock so that it is deploy automatically using the same script for dev and prod.\r\nh3. Acceptance Criteria\r\n\r\nAC1. Twistlock staging is deploy using the same script as dev and prod via cloud build pipeline\r\n\r\nAC2. Twistlock staging is setup with the following:\r\n * initial admin account\r\n * enter current twistlock license\r\n * configure tls certs\r\n * configure proxy access to enable twistlock intelligence stream\r\n * configure saml access\r\n\r\nh3. Reference\r\n\r\n[https://confluence.service.anz/display/EX/Twistlock+Implementation]\r\n\r\n[https://docs.twistlock.com|https://docs.twistlock.com/]\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n-Manually undeploy Twistlock in staging and then redeploy using the Cloud Build pipelines.-\r\n\r\n-This ensures a fresh environment to onboard test customers.-\r\n\r\n-Acceptance:-\r\n - -Fresh and clean instance of Twistlock in staging-", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-689", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Redeploy Twistlock in staging", "updated": "2019-08-20T16:38:41+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-688": {"assignee": "tanga", "created": "2019-05-09T14:16:41+10:00", "creator": "tanga", "description": "Post DCX repository creation (PIPS-683), customer has requested ability to manage permissions to the repos so they can self service user management.\r\n\r\nAt first look it doesn't seem like it's possible without granting Artifactory admin access - not something we want to do for a production service.\r\n\r\nFurther research indicates any repos admins can already do this:\r\n\r\nExtract from https://www.jfrog.com/confluence/display/RTF/Managing+Permissions\r\n{noformat}\r\nAvailable permissions for Repository Actions:\r\n...\r\nManage\r\nAllows changing the permission settings for other users on this permission target\r\n{noformat}\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-688", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "tanga", "status": "Story Done", "summary": "Artifactory - setup DCX repo for self service admin", "updated": "2019-08-20T16:42:23+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-687": {"assignee": "soin", "created": "2019-05-09T12:55:48+10:00", "creator": "blackm", "description": "Open Banking require Twistlock.\r\n\r\nEngage [~hernandn] to onboard the team to the staging environment in lieu of production being approved.\r\n\r\n*Context*\r\n\r\n**Current contact person from open [banking-\u00a0DerekWai-Kit.Mui@anz.com|mailto:banking-%C2%A0DerekWai-Kit.Mui@anz.com]\r\n\r\nAssist open banking team to connect to our twistlock staging - [https://twistlock-dev.ex.gcpnp.anz|https://twistlock-dev.ex.gcpnp.anz/]\r\n\r\nOpening banking has 3 clusters and we agreed to connect one of it to our staging first\r\n\r\n\u00a0\r\n\r\n*Acceptance criteria*\r\n\r\nAC1\r\n\r\nAllow users from open banking to access twistlock-[dev|stg].ex.gcpnp.nz (twistlock console)\r\n\r\nDerekWai-Kit.Mui@anz.com\r\n Peter.Hall@anz.com\r\n Anthony.Hallworth@anz.com\r\n Clement.Labbe@anz.com\r\n Nicholas.Hernandez@anz.com\r\n [Patrick.Marabeas@anz.com|mailto:Patrick.Marabeas@anz.com]\r\n\r\n\u00a0\r\n\r\nAC2.\u00a0\r\n\r\nEngaged with open banking and explain architecture of twistlock and what is involved in setting it up\r\n\r\n\u00a0\r\n\r\nAC3.\r\n\r\nEnsure supervisor is added to our twistlock console and the expected defenders are there\u00a0\r\n\r\n*Reference*\r\n\r\n[https://github.service.anz/ex/engineering-acceleration-infrastructure/tree/master/helm-charts/twistlock]\u00a0(see on-boarding section)\r\n\r\nAcceptance:\r\n - OB have Defenders connected to Twistlock staging\r\n - Nick is happy", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-687", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Onboard OB to Twistlock staging", "updated": "2019-08-20T16:38:46+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-685": {"assignee": "mereditj", "created": "2019-05-09T10:45:54+10:00", "creator": "rickarm1", "description": "h3. Description\r\n * Investigate & validate the use of the stackdriver metrics & alerting tool\r\n * Define basic metrics we care about as an SRE team for each of our <*GCP tools>***\r\n\r\n\u00a0\r\n||<GCP Tools>||\r\n|Artifactory|\r\n|Spinnaker|\r\n|Jenkins|", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-685", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "[Spike] - Investigate and define strategy for Stackdriver metrics", "updated": "2019-08-20T16:42:19+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-684": {"assignee": "agarwas2", "created": "2019-05-08T17:21:55+10:00", "creator": "blackm", "description": "We have been engaged by Integration in India to create a GCP NPM registry in Artifactory.\r\n\r\nStakeholders are:\r\n * Vinay Pillai\r\n * Sriharshasubramanya Begolli\r\n * Venkat Rama Krishna Pyndah", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-684", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Create an NPM repo for Integration", "updated": "2019-08-20T16:38:43+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-683": {"assignee": "tanga", "created": "2019-05-08T17:11:40+10:00", "creator": "blackm", "description": "Engaged by Andrei from DCX to create a few repos for him and provide him admin access.\r\n * DCX-android\r\n * DCX-pluto\r\n * DCX-plists", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-683", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Artifactory repos for DCX Cloud squad ", "updated": "2019-08-20T16:42:23+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-681": {"assignee": null, "created": "2019-05-08T10:58:08+10:00", "creator": "mereditj", "description": "As a splunk user I would like to be able to easily isolate Gitsync logs via an application-name or other log message key", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-681", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Add application name key to gitsync logs", "updated": "2019-08-20T16:39:09+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-680": {"assignee": null, "created": "2019-05-08T10:41:47+10:00", "creator": "headenj1", "description": "check if halyard point releases are likely to also change the hal config file format\r\n\r\nAcceptance criteria:\r\n * there is a documented way to assess if halyard point releases have an impact on the spinnaker self serve process", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-680", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Closed", "summary": "halyard update / config validation check process", "updated": "2019-08-20T16:39:02+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-679": {"assignee": "headenj1", "created": "2019-05-08T10:23:16+10:00", "creator": "rickarm1", "description": "h3. Purpose\r\n\r\nRefactor the spin-config repo to have different pubsub input files for each environment. currently only the production environment pubsub files are used. This card is to create seperate folders for dev/ stg/ prod to have the environment specific files be imported into the hal config file\r\nh3. Acceptance Criteria\r\n * Split subscription files so that theres a difference in input files\r\n * Different location (folder structure in the repo) for input files depending on environment\r\n * Successful if we can generate a known good HAL config file\r\n * Manually validate", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-679", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Pub/Sub Subscription Management", "updated": "2019-08-20T16:39:06+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-678": {"assignee": null, "created": "2019-05-07T16:58:22+10:00", "creator": "blackm", "description": "Sandeep Kamath from CAT tribe engaged us via #eng-acceleration to help him sync an Artifactory repo from on-premises to GCP.\u00a0\r\n\r\nGiven that feature is still forthcoming, we can create a repo for him manually and onboard him that way.\r\n\r\nThis is a good opportunity to implement and validate self-service! See related EPIC", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-678", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Artifactory repo for CAT", "updated": "2019-08-20T16:42:22+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-677": {"assignee": null, "created": "2019-05-07T13:51:33+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-677", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic Done", "summary": "Activities specifically related to bringing new customers onto the platform", "updated": "2019-11-16T09:27:09+11:00", "estimate": null, "epic_ref": null, "epic_name": "Onboarding", "diff_to_upstream": []}, "CNPS-676": {"assignee": "agrawad", "created": "2019-05-07T11:28:46+10:00", "creator": "blackm", "description": "We want to enable all customers to follow a GitOps approach, defining all their config in code and raising pull requests to our repos.\r\n\r\nArtifactory allows configuration via YAML.\r\n\r\nCreate a mechanism whereby a pull request can create & update a repository - but not delete!\r\n\r\nAcceptance:\r\n - One can create a repo via pull request\r\n - One can update a repo via pull request\r\n - One *cannot* delete a repo via pull request", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-676", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Artifactory - Automate definition of local repositories", "updated": "2019-08-20T16:42:44+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-674": {"assignee": "hidera", "created": "2019-05-07T11:26:08+10:00", "creator": "blackm", "description": "User authentication is via AD, but we do not wish to manage user groups via AD also.\r\n\r\nDevelop a means to define groups, and the list of users in that group (YAML format preferably). Automate the deployment of changes to this file.\r\n\r\nRefs PIPS-676\r\n\r\nAn analysis of what groups are necessary is the first step.\r\n # Superadmin - can do everything / anything\r\n # Admin -\u00a0what perms do they have? Create repo? Delete repo?\r\n # User - should they be isolated to specific repos?\r\n\r\nAcceptance:\r\n - A pull request merge updates Artifactory config\r\n - A user can be added to a group\r\n - A user can be removed from a group", "fixVersions": ["1.1.0"], "issuetype": "Story", "key": "CNPS-674", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Automate mapping users into groups", "updated": "2019-10-21T09:14:25+11:00", "estimate": 3.0, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-673": {"assignee": "tanga", "created": "2019-05-07T09:31:27+10:00", "creator": "blackm", "description": "h3. \u00a0\r\n\r\n*Slack extract*\r\n{noformat}\r\npatrick [2:15 PM]\r\nI'm consistently getting `500` errors for particular NPM packages on artifactory.gcp.anz:\r\n\r\n> yarn add <PACKAGE> --verbose\r\n...\r\nverbose 4.121 Request \"https://artifactory.gcp.anz/artifactory/api/npm/npmjs-org/object-assign\" finished with status code 200.\r\nverbose 4.175 Request \"https://artifactory.gcp.anz/artifactory/api/npm/npmjs-org/react-dom\" finished with status code 500.\r\nverbose 4.266 Request \"https://artifactory.gcp.anz/artifactory/api/npm/npmjs-org/js-tokens\" finished with status code 200.\r\nverbose 4.346 Request \"https://artifactory.gcp.anz/artifactory/api/npm/npmjs-org/core-js\" finished with status code 200.\r\nverbose 4.347 Request \"https://artifactory.gcp.anz/artifactory/api/npm/npmjs-org/scheduler\" finished with status code 500.\r\nverbose 4.348 Error: Received malformed response from registry for undefined. The registry may be down.```\r\n\r\nand when trying to get the info of one of the 500 errored packages:\r\n```> yarn info react-dom --verbose\r\n...\r\nverbose 0.259 Performing \"GET\" request to \"https://artifactory.gcp.anz/artifactory/api/npm/npmjs-org/react-dom\".\r\nverbose 1.507 Request \"https://artifactory.gcp.anz/artifactory/api/npm/npmjs-org/react-dom\" finished with status code 500.\r\nverbose 1.52 TypeError: Cannot convert undefined or null to object```\r\n{noformat}", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-673", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Errors fetching from NPM mirror in Artifactory", "updated": "2019-08-20T16:39:20+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-671": {"assignee": "steenkaj", "created": "2019-05-06T15:28:05+10:00", "creator": "blackm", "description": "To deploy Twistlock as a new application to Google Cloud, ANZ require each squad to fill out and submit a Cloud Approval form:\r\n\r\n[https://teams.global.anz.com/teams/Business%20Optimisation/IS%20and%20A/Cloud/Lists/Cloud%20Project%20Tracker/EditForm.aspx?ID=489&Source=%2Fteams%2FBusiness%20Optimisation%2FIS%20and%20A%2FCloud%2FLists%2FCloud%20Project%20Tracker]\r\n\r\n\u00a0\r\nh2. Acceptance Criteria\r\n # Obtain the relevant approvals and signoffs so that we can deploy Twistlock.\r\n # Submit cloud approval form", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-671", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Obtain cloud approval for twistlock deployment", "updated": "2019-08-20T16:38:47+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-670": {"assignee": null, "created": "2019-05-06T14:18:29+10:00", "creator": "blackm", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-670", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Developing a GCP sandbox capability for EX", "updated": "2019-06-13T11:48:24+10:00", "estimate": null, "epic_ref": null, "epic_name": "Sandbox", "diff_to_upstream": []}, "CNPS-669": {"assignee": "agrawad", "created": "2019-05-06T11:45:56+10:00", "creator": "blackm", "description": "The GPA form attached needs to be resubmitted according to the guide here:\r\n\r\n[https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/docs/guides/Hairpin/hairpin-proxy.md]\r\n\r\nReference:\r\n\r\n[https://anztech.service-now.com/nav_to.do?uri=%2Fincident.do%3Fsys_id%3D8a1fc120db857f44593f59364a961945]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-669", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Resubmit GPA proxy whitelist form", "updated": "2019-08-20T16:42:16+10:00", "estimate": null, "epic_ref": "CNPS-553", "epic_name": "", "diff_to_upstream": []}, "CNPS-668": {"assignee": "rickarm1", "created": "2019-05-06T10:40:14+10:00", "creator": "rickarm1", "description": "Given the current cumbersome and complex change process always slows the team down, this action is to investigate the concept of a regular change window that doesn't involve other teams having to sign off our release notes etc.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-668", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Investigate a standard process for change requests", "updated": "2019-08-20T16:41:52+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-667": {"assignee": "steenkaj", "created": "2019-05-06T10:38:20+10:00", "creator": "rickarm1", "description": "This action involves collating metrics from our customers as to the previous experience with deployments vs. using gcp.\r\n\r\nEg: Median time for deployments new world vs. old world, number of issues during deployments, quality/code confidence with deployments", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-667", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Pipeline Metrics", "updated": "2019-09-17T08:39:35+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-666": {"assignee": "blackm", "created": "2019-05-06T10:34:48+10:00", "creator": "rickarm1", "description": "Currently, the pipelines squad don't have access to a sandbox environment to test the CI/CD pipeline functionality. This action covers the investigation (feisability/setup) of a sandbox env so that the team can test the pipelines work to ensure a higher degree of confidence in our features. Eg: Actually use the pipeline to deploy our code (eg: Git Sync)", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-666", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Investigate sandbox environment provisioning", "updated": "2019-08-20T16:42:21+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-665": {"assignee": "blackm", "created": "2019-05-03T11:11:14+10:00", "creator": "rickarm1", "description": "h2. Description\r\n\r\nThe Delivery Acceleration Squad backlog needs to be re-prioritised based on business objectives and priorities as it currently lacks direction, cadence and delivery timeframes.\r\nh2. Mitigation\r\n\r\nGain clarity on product roadmap, delivery timeframes, targets etc", "fixVersions": ["1.0.0"], "issuetype": "Delivery Risk", "key": "CNPS-665", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Resolved", "summary": "Unclear product roadmap & delivery timelines", "updated": "2019-09-17T08:39:34+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-664": {"assignee": "agrawad", "created": "2019-05-03T09:21:41+10:00", "creator": "agrawad", "description": "Explore artefacts replication between OnPrem and GCP artifactories. On Prem artifactory is currently offlimits due to upgrade testing and will not be available for next few weeks.\u00a0\r\n\r\nTo test the replication, we can use dev and stg artifactories in GCP.\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-664", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Test artefacts replication", "updated": "2019-08-20T16:42:18+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-663": {"assignee": null, "created": "2019-05-02T11:34:59+10:00", "creator": "mereditj", "description": "`gitsync` currently accepts a --heartbeat option to configure the interval between subsequent heartbeat logs. It is preferable to configure this via an environment variable so that we can more easily modify this without a full deployment.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-663", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Backlog", "summary": "Enable heartbeat logs via ENV variable instead of CLI option", "updated": "2019-05-09T10:42:12+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-662": {"assignee": null, "created": "2019-05-01T16:15:28+10:00", "creator": "castanoa", "description": "h3. Acceptance criteria:\r\n * Existing working config is manually backed up.\r\n * Spinnaker is configured automatically with the existing stg accounts.\r\n * Jenkins integration is set up in staging.\r\n * GCS artifacts are set up\r\n * Kube accounts are set up in the git repo.\r\n * Secrets are encrypted.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-662", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Create spinnaker configurations for Prod", "updated": "2019-08-20T16:39:18+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-661": {"assignee": "castanoa", "created": "2019-05-01T16:14:06+10:00", "creator": "castanoa", "description": "h3. Acceptance Criteria\r\n * Existing working config is manually backed up.\r\n * Spinnaker is configured automatically with the existing stg accounts.\r\n * Jenkins integration is set up in staging.\r\n * GCS artifacts are set up\r\n * Kube accounts are set up in the git repo.\r\n * Secrets are encrypted.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-661", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Create spinnaker configurations for Staging", "updated": "2019-08-20T16:39:17+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-660": {"assignee": null, "created": "2019-05-01T16:09:20+10:00", "creator": "castanoa", "description": "The refactoring of hal config for self service (PIPS-602) requires a new repository. This card is to onboard that repo to gitsync", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-660", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Create Git sync set up for prod", "updated": "2019-08-20T16:39:14+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-659": {"assignee": "headenj1", "created": "2019-05-01T16:07:30+10:00", "creator": "castanoa", "description": "The refactoring of hal config for self service (PIPS-602) requires a new repository. This card is to onboard that repo to gitsync", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-659", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Create Git sync set up for stg", "updated": "2019-08-20T16:39:14+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-656": {"assignee": null, "created": "2019-05-01T12:06:56+10:00", "creator": "rickarm1", "description": "Add step to cloudbuild to monitor and wait for a given deployment to be complete and stable - only turn cloudbuild status to green when all kube pods are stable\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-656", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Cloudbuild status reporting improvements (Spinnaker Config)", "updated": "2019-08-20T16:39:19+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-655": {"assignee": null, "created": "2019-05-01T12:03:29+10:00", "creator": "rickarm1", "description": "h3. Description\r\n * The HAL pod has exiting kube config files - before we overwrite we need to take a backup of them\r\n * Handle customer information so that we can roll back if required\r\n\r\nh3. Acceptance Criteria\r\n * Encrypt & encode main config file in base 64\r\n * Create bucket in google storage\r\n * Copy backup files into backup bucket", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-655", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Backup existing kube files for HAL config", "updated": "2019-08-20T16:39:16+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-654": {"assignee": "castanoa", "created": "2019-04-30T11:37:31+10:00", "creator": "rickarm1", "description": "h2. Description\r\n----\r\nCurrently Andreas' user account is being used as the Jenkins/Spinnaker integration authentication mechanism. This tactical solution is to use Matt Blacks user account to authorise the integration between the tools.\r\nh2. Acceptance Criteria\r\n---- * Spinnaker can connect to Jenkins using Matt Blacks user account\r\n * Spinnaker can run Jenkins builds as part of the pipeline successfully", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-654", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Configure Jenkins to utilise a different account for admin privileges  ", "updated": "2019-08-20T16:39:21+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-652": {"assignee": null, "created": "2019-04-30T10:58:19+10:00", "creator": "headenj1", "description": "when webhooks are created using https they fail certificate validation. This card is to investigate options (vis a vis disabling ssl checking or just using http). Which option should we recommend to users onboarding new repos?\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-652", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Backlog", "summary": "investigate https or http for gitsync webhooks", "updated": "2019-09-12T22:18:16+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-650": {"assignee": null, "created": "2019-04-29T10:55:06+10:00", "creator": "headenj1", "description": "The refactoring of hal config for self service (PIPS-602) requires a new repository. This card is to onboard that repo to gitsync", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-650", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Gitsync setup for spin-config repo for dev", "updated": "2019-08-20T16:39:19+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-649": {"assignee": null, "created": "2019-04-29T10:21:25+10:00", "creator": "castanoa", "description": "Investigate why is taking so long to start up. Related to: PIPS-602", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-649", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Jenkins: Improve start up performance", "updated": "2019-08-20T16:42:21+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-648": {"assignee": "headenj1", "created": "2019-04-29T10:17:53+10:00", "creator": "castanoa", "description": "PSV2 need to install istio using spinnaker and they need to define all of the CRD. It would be better to have autodiscovery on for this.\r\n\r\n\u00a0\r\n\r\nRequested by Tejas on 1 of May\r\n\r\n*Current state*\r\nCustomers need to add customCRDs into spin-config so Spinnaker doesn't error out on deployment.  Eg:\r\nhttps://github.service.anz/ex/spin-config/blob/master/customers-config/anz-cx-csp-bx-fuchsia.yaml#L14\r\n{code:yaml}\r\nname: anz-cx-csp-bx-fuchsia\r\n<snip>\r\ncustomResources:\r\n- SealedSecret.bitnami.com\r\n- VirtualService.networking.istio.io\r\n- DestinationRule.networking.istio.io\r\n- ServiceEntry.networking.istio.io\r\n<snip>\r\n{code}\r\n\r\n*Desired state*\r\nSpinnaker auto discovers or *allows* custom resources so customers don't need to specify them.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-648", "labels": [], "lastViewed": "2019-11-22T11:43:01.286000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Closed", "summary": "Spinnaker: Auto discover CRD", "updated": "2019-11-22T11:42:59+11:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-646": {"assignee": "headenj1", "created": "2019-04-26T16:58:51+10:00", "creator": "hutchisc", "description": "The sync progress and results are sent to github as a \"status\". A status can provide a URL with details of the result of the operation, but for gitsync status, we currently do not do that because we do not store the results.\r\n\r\nAs the sync operation is recorded as a Command object, that command object could be stored in persistent storage for some period of time and be retrievable on a URL. If we do that, we can link the github status to the log of operations for that sync operation.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-646", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Create linkable gitsync sync results", "updated": "2019-08-20T16:39:04+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-645": {"assignee": "agrawad", "created": "2019-04-26T10:23:47+10:00", "creator": "agrawad", "description": "Create a page in Confluence that tracks firewall rules in onPrem firewall for shared VPC.\r\n\r\n\u00a0\r\n\r\nA/C\r\n\r\nConfluence page up and running.\r\n\r\nSend an email to the team about the page.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-645", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Confluence page to track on-prem firewall rules.", "updated": "2019-08-20T16:42:20+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-644": {"assignee": "agrawad", "created": "2019-04-26T10:21:12+10:00", "creator": "agrawad", "description": "Engage with the vendor to find out what firewall rules are required to enable the replication between onprem and GCP artifactory (prod and qa)\r\n\r\n\u00a0\r\n\r\nA/C\r\n\r\nSource IPs.\r\n\r\nDestination IPs.\r\n\r\nPorts", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-644", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Find firewall changes requirements or Artifactory Sync", "updated": "2019-08-20T16:42:16+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-643": {"assignee": "agarwas2", "created": "2019-04-25T23:26:24+10:00", "creator": "agarwas2", "description": "In order to resolve docker repositories through hostnames DNS entries need to be configured in GCP private DNS. Register the following DNS A records in level 5\r\n\r\nhub.artifactory-dev.ex.gcpnp.anz\r\ngcr.artifactory-dev.ex.gcpnp.anz\r\nregistry.artifactory-dev.ex.gcpnp.anz\r\nomni.artifactory-dev.ex.gcpnp.anz\r\n\r\nhub.artifactory-stg.ex.gcpnp.anz\r\ngcr.artifactory-stg.ex.gcpnp.anz\r\nregistry.artifactory-stg.ex.gcpnp.anz\r\nomni.artifactory-dev.ex.gcpnp.anz\r\n\r\nhub.artifactory-prd.ex.gcpnp.anz\r\ngcr.artifactory-prd.ex.gcpnp.anz\r\nregistry.artifactory-prd.ex.gcpnp.anz\r\nomni.artifactory-dev.ex.gcpnp.anz\r\n\r\nAdditionally register the following CNAME records at level 2\r\n\r\n\r\nhub.artifactory.gcpnp.anz => hub.artifactory-stg.ex.gcpnp.anz\r\ngcr.artifactory.gcpnp.anz => gcr.artifactory-stg.ex.gcpnp.anz\r\nregistry.artifactory.gcpnp.anz => registry.artifactory-stg.ex.gcpnp.anz\r\nomni.artifactory.gcpnp.anz => omni.artifactory-stg.ex.gcpnp.anz\r\n\r\n\r\nhub.artifactory.gcp.anz => hub.artifactory-prd.ex.gcp.anz\r\ngcr.artifactory.gcp.anz => gcr.artifactory-prd.ex.gcp.anz\r\nregistry.artifactory.gcp.anz =>registry.artifactory-prd.ex.gcp.anz\r\nomni.artifactory.gcp.anz => omni.artifactory-prd.ex.gcp.anz", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-643", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Configure DNS entry for docker repositories", "updated": "2019-08-20T16:40:06+10:00", "estimate": null, "epic_ref": "CNPS-553", "epic_name": "", "diff_to_upstream": []}, "CNPS-642": {"assignee": "agrawad", "created": "2019-04-23T13:40:48+10:00", "creator": "agarwas2", "description": "CSP team implementing ref service are trying to pull gradle distributions via artifactory. Attempt to add https://services.gradle.org/distributions as a remote proxy resulted in a 403 error which is likely an issue with whitelisting on the hairpin proxy. Incident opened below for cyber security team to investigate\r\n\r\n\r\nhttps://anztech.service-now.com/nav_to.do?uri=incident.do?sys_id=8a1fc120db857f44593f59364a961945", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-642", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "CSP - Gradle distribution cant be fetched via artifactory", "updated": "2019-08-20T16:42:10+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-641": {"assignee": null, "created": "2019-04-23T13:13:20+10:00", "creator": "agarwas2", "description": "Received via email (forwarded to DA)\r\n\r\nStep #0 - \"build-code\": Caused by: org.gradle.api.UncheckedIOException: Could not GET 'https://artifactory.gcp.anz:30334/artifactory/plugins-release/org/bouncycastle/bcprov-jdk15on/1.60/bcprov-jdk15on-1.60.jar'. Received status code 409 from server: Conflict\r\nStep #0 - \"build-code\": at org.gradle.internal.resource.transport.http.HttpClientHelper.processResponse(HttpClientHelper.java:159)\r\nStep #0 - \"build-code\": at org.gradle.internal.resource.transport.http.HttpClientHelper.performGet(HttpClientHelper.java:85)\r\nStep #0 - \"build-code\": at org.gradle.internal.resource.transport.http.HttpResourceAccessor.openResource(HttpResourceAccessor.jav\r\n \r\nhttps://console.cloud.google.com/cloud-build/builds/8ecb178b-40ce-4c48-9cb6-80fbf020d292?project=anz-cx-csp-np-5527c6\r\n\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-641", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Cloudbuild PSV2 failing due to retrieval issue from artifactory", "updated": "2019-08-20T16:43:32+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-640": {"assignee": "agarwas2", "created": "2019-04-23T12:43:15+10:00", "creator": "agarwas2", "description": "Due to an unhealthy node in GKE spinnaker service was down. The node needed to be cordoned and replaced to bring the cluster health back up. Details captured here\r\n\r\nhttps://anztech.service-now.com/incident.do?sys_id=7cb69ffadbf8b304593f59364a9619e3", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-640", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "fix prod gke cluster ", "updated": "2019-08-20T16:42:15+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-638": {"assignee": "blackm", "created": "2019-04-18T09:26:31+10:00", "creator": "agarwas2", "description": "*Description*\r\n\r\nCreation, Deletion, Editing of Artifactory resources such as Repositories, Groups, Permissions managed as Terraform code instead of manually done via the webapp.\r\n\r\n*Acceptance Criteria*\r\n\r\n* Self service enabled for customers for all supported operations\r\n* All supported central operations (remote repositories for instance) configured using automation", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-638", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Epic Done", "summary": "Artifactory self service", "updated": "2019-11-16T08:15:28+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Artifactory Self Service", "diff_to_upstream": []}, "CNPS-636": {"assignee": null, "created": "2019-04-17T15:12:32+10:00", "creator": "blackm", "description": "h3. Acceptance Criteria\r\n\r\n- Obtain and test developer access for test and prod instance", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-636", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Acquire developer access to test/prod instance of on-prem Artifactory", "updated": "2019-08-20T16:42:18+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-635": {"assignee": "agrawad", "created": "2019-04-17T15:12:01+10:00", "creator": "blackm", "description": "h3. Acceptance Criteria\r\n * A simple network architecture diagram in Confluence for socialisation of intended solution.\r\n * Show the stage->QA sync and prod->prod sync in the diagram\r\n * Engage Nik to determine next steps regarding approval", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-635", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Develop architecture/network design", "updated": "2019-08-20T16:42:17+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-634": {"assignee": "agrawad", "created": "2019-04-17T15:11:28+10:00", "creator": "blackm", "description": "Acceptance/outcomes:\r\n * Either a \"yes\" it can support docker\r\n * Or \"no\" and new stories to be created to achieve that goal", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-634", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Determine if existing SDCP Artifactory support Docker registries", "updated": "2019-08-20T16:42:15+10:00", "estimate": null, "epic_ref": "CNPS-633", "epic_name": "", "diff_to_upstream": []}, "CNPS-633": {"assignee": null, "created": "2019-04-17T15:10:47+10:00", "creator": "blackm", "description": "Ongoing epic to capture tickets related to continued development and improvement of the GCP Artifactory.\r\n\r\nThis will also include work to setup synchronisation between the on-premise Artifactory and the GCP instance.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-633", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Epic in Progress", "summary": "GCP Artifactory Platform Development", "updated": "2019-11-22T11:54:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "Artifactory Platform", "diff_to_upstream": []}, "CNPS-632": {"assignee": "agarwas2", "created": "2019-04-17T12:28:59+10:00", "creator": "agarwas2", "description": "IAM permissions for the team are currently managed manually by cloud services. As part of a larger effort to bring folder creation and IAM assignment under management of terraform. This story captures the work needed to align EX projects and IAM to the platform model\r\n\r\nAcceptance criteria:\r\n\r\nAll the following must be executed via terraform configuration\r\n\r\n* Create Transformation > Engineering Acceleration > Development folder\r\n* Create Transformation > Engineering Acceleration > Staging folder\r\n* Move ex-services-dev, ex-launchpad-dev from current location in org tree to Transformation > Engineering Acceleration > Development folder\r\n* Move and ex-services-stg from current location to Transformation > Engineering Acceleration > Staging folder\r\n* Assign IAM roles to google groups for both folders as documented [here|https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/docs/guides/rbacmapping.md] \r\n\r\nValue: \r\n\r\n* Provides greater autonomy to make changes in development and staging environments\r\n* Improves on boarding of new developers by providing access easily\r\n* Allows clear auditability of IAM permissions for EX GCP infrastructure", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-632", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Bring folders and IAM under terraform for non production", "updated": "2019-08-20T16:41:59+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-631": {"assignee": "hutchisc", "created": "2019-04-17T09:42:10+10:00", "creator": "hutchisc", "description": "If a destination repo in a sync pair does not set the \"status_subscription\" field, we default to the value \"ghe-sync\". It was always intended to add this subscription name to the configs so we do not need the defaults in the code. This has now been done across all deployed configs, so we can remove the default from the code.\r\n\r\nThis means we can use the unset value (empty string) to mean we should not subscribe to pubsub events for that repo. When we receive pubsub messages due to subscriptions for other repos (we can only subscribe per-project, not per-repo), we should ignore those messages where the subscription name does not match what is configured in the syncpair destination.\r\n\r\nThis will allow us to configure the testing deployment of gitsync to not receive pubsub messages, because at the moment it is sharing a subscription with the canary deployment, which means messages can be ignored. This happens when the testing deployment receives the pubsub message meant for the canary, and because it is not configured with the same repos, it will just discard the message. Ideally each deployment would have separate subscriptions, but that can cause resource management issues for the testing deployment (subscriptions are automatically deleted after 31 days of non-use, and testing could quite easily be not running for some period).", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-631", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Gitsync: Don't subscribe if no status_subscription set", "updated": "2019-08-20T16:42:14+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-630": {"assignee": "hutchisc", "created": "2019-04-17T07:10:31+10:00", "creator": "hutchisc", "description": "We should have a canary gitsync workload with one of EX's dev projects so we can have some confidence that changes to the gitsync code will work properly before we deploy to the nonprod track (which has about 65 syncpairs or so). Syncing out is easy to test, but receiving incoming pubsub status updates are harder to test on demand. A canary will make that easier and let us run it for a few hours or so before proceeding with the nonprod deployment.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-630", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Deploy gitsync canary", "updated": "2019-08-20T16:42:13+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-629": {"assignee": "headenj1", "created": "2019-04-16T14:49:29+10:00", "creator": "rickarm1", "description": "Onboard 9 OB services to be able to deploy to GCP via Spinnaker", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-629", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Onboarding of OB to GCP (Spinnaker)", "updated": "2019-08-20T16:42:08+10:00", "estimate": null, "epic_ref": "CNPS-677", "epic_name": "", "diff_to_upstream": []}, "CNPS-625": {"assignee": "castanoa", "created": "2019-04-16T14:45:44+10:00", "creator": "rickarm1", "description": "Create self service on boarding docs so that future customers know how to configure their applications and pipelines using Spinnaker", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-625", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create self service on boarding docs", "updated": "2019-08-20T16:42:49+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-624": {"assignee": null, "created": "2019-04-16T14:44:18+10:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-624", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Script Jenkins configuration of service accounts to be used by Spinnaker", "updated": "2019-08-20T16:42:13+10:00", "estimate": null, "epic_ref": "CNPS-694", "epic_name": "", "diff_to_upstream": []}, "CNPS-618": {"assignee": "headenj1", "created": "2019-04-16T11:02:44+10:00", "creator": "blackm", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-618", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Document VDI support for pipeline squad", "updated": "2019-08-20T16:42:10+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-617": {"assignee": null, "created": "2019-04-16T11:01:06+10:00", "creator": "blackm", "description": "Determine the options for formalised training when inducting new team members.\r\n\r\nA baseline for GCP and Kubernetes will be only a good thing.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-617", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Investigate training for newbies on GCP and kubernetes", "updated": "2019-08-20T16:42:12+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-616": {"assignee": null, "created": "2019-04-16T10:21:57+10:00", "creator": "blackm", "description": "A clean up of the current config, and a means for [~blackm] to get onboard with TwistLock.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-616", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Refactor to use Helm chart for Twistlock Console", "updated": "2019-08-20T16:38:50+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-615": {"assignee": "hutchisc", "created": "2019-04-15T12:57:27+10:00", "creator": "hutchisc", "description": "The gitsync-config bamboo plan triggers off any change to the gitsync-config repo and unconditionally kills the launchpad gitsync pod. This means we cannot add testing and canary configs as changes to them will kill the launchpad pod and if that happens in the middle of a sync, that sync will be incomplete.\r\n\r\nWe should split the configs into separate directories for each deployment (for both application configs and deployment configs) and set up bamboo to trigger each deployment only for changes to that config. This can be done with the help of bamboo admins as new repositories need to be added to bamboo as that is where the file match regex lives.\r\n\r\nI intend to set up 4 configs: testing, canary, launchpad (non-prod) and prod. prod is not actually used from bamboo.\r\n\r\nWe can also be smarter about killing the gitsync pods. If the configmap changes but the deployment does not, then it will be necessary to kill the pod to have it reload the config. This can be based on the output of {{oc apply}}. In future, it would be better to add a configmap_reload sidecar and a quit handler to gitsync, and have configmap_reload call the quit handler when the configmap changes.\r\n\r\n\u00a0\r\n\r\n*Acceptance Criteria:*\r\n\r\n1. Configs should be split in separate directories for each deployment\r\n\r\n2. Bamboo should trigger each deployment only for changes to that config\r\n\r\n3. If the config map changes but deployment does not - then pod needs to be killed to\r\nreload the config\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-615", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Rework gitsync-config bamboo plan to not always deploy launchpad", "updated": "2019-08-20T16:39:16+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-614": {"assignee": null, "created": "2019-04-15T09:57:46+10:00", "creator": "blackm", "description": "Deploy defender alongside Artifactory to scan docker regos\r\n\r\n\r\n[https://docs.twistlock.com/docs/latest/vulnerability_management/configure_registry_scans.html]", "fixVersions": [], "issuetype": "Story", "key": "CNPS-614", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Use TwistLock to scan images in Artifactory", "updated": "2019-11-13T12:49:47+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-613": {"assignee": "hutchisc", "created": "2019-04-12T07:20:16+10:00", "creator": "hutchisc", "description": "When trying to run the gitsync-code bamboo pipeline, it is failing with errors:\r\n\r\n{code}\r\n    ./bambootests.sh: 5: ./bambootests.sh: [[: not found\r\n    ./bamboodeploy.sh: 6: ./bamboodeploy.sh: Syntax error: redirection unexpected\r\n{code}\r\n\r\nThis is because the scripts do not have a {{#!/bin/bash}} line at the start so bamboo is running them with {{/bin/sh}}, and the syntax used in the scripts is not compatible with {{/bin/sh}}/", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-613", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "gitsync-code bamboo scripts fail to run on bamboo agent", "updated": "2019-08-20T16:39:22+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-612": {"assignee": "mereditj", "created": "2019-04-11T10:22:28+10:00", "creator": "mereditj", "description": "The currently envisaged network diagram is to create a Twistlock supervisor in Insto NSW's VPC with defenders configured to connect to that.\r\n\r\nWe currently don't know how that will work.\r\n\r\n\u00a0\r\n\r\n*Acceptance Criteria:*\r\n\r\nTBC", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-612", "labels": ["SPIKE"], "lastViewed": null, "priority": "High", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "SPIKE - Ascertain deployment procedure for Twistlock supervisor", "updated": "2019-08-20T16:39:15+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-610": {"assignee": "castanoa", "created": "2019-04-11T09:48:06+10:00", "creator": "castanoa", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-610", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spinnaker remediation - Product service pipelines are not been triggered via pub sub", "updated": "2019-08-20T16:39:21+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-609": {"assignee": "rickarm1", "created": "2019-04-11T09:45:50+10:00", "creator": "rickarm1", "description": "Raise change record in Tech Connect to deploy the following features to production:\r\n * Docker support for Artifactory\r\n * GitSync status indicator for GitHub\r\n * Twistlock\u00a0(?)\r\n * Jenkins admin - more users for CSP team", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-609", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create change record for next release", "updated": "2019-08-20T16:42:12+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-608": {"assignee": "headenj1", "created": "2019-04-10T13:29:08+10:00", "creator": "headenj1", "description": "The hal configuration is a large yaml file containing all the settings for multiple kubernetesss provier accounts. It would be preferable to programatically construct this file so that changes can be made in a safer manner.\r\n\r\n[https://github.com/spinnaker/halyard/blob/master/docs/commands.md#hal-config-provider-kubernetes]\r\n\r\n*Acceptance Criteria:*\r\n\r\nTBC\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-608", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Set up spinnaker self service tool in dev", "updated": "2019-08-20T16:39:18+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-607": {"assignee": null, "created": "2019-04-10T13:15:29+10:00", "creator": "blackm", "description": "In an ideal world, our GHE setup would be fully automated. It is currently unclear how far this automation could go, but the options are:\r\n * Repos\r\n * Organization webhooks\r\n * Teams\r\n * Team membership\r\n * Branch protection\r\n\r\n[https://www.terraform.io/docs/providers/github/]\r\n\r\nExplore this as a capability and determine a MVP we could start to apply to rigour to our GHE estate under EX.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-607", "labels": [], "lastViewed": "2019-11-22T11:51:13.515000+11:00", "priority": "Lowest", "project": "CNPS", "reporter": "blackm", "status": "Closed", "summary": "Automation of GHE organisations", "updated": "2019-11-22T11:51:12+11:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-605": {"assignee": "rickarm1", "created": "2019-04-10T11:23:32+10:00", "creator": "rickarm1", "description": "*Description*\r\n\r\nCreate an onboarding document for potential customers to reference to find out more information about the pipeline, capabilities and entrance criteria so that potential customers can find out more info about the products that DX offer.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-605", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Onboarding overview", "updated": "2019-08-20T16:42:11+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-604": {"assignee": null, "created": "2019-04-10T11:20:14+10:00", "creator": "rickarm1", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-604", "labels": [], "lastViewed": "2019-11-22T11:53:28.116000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Epic Done", "summary": "Squad Enablement", "updated": "2019-11-22T11:53:26+11:00", "estimate": null, "epic_ref": null, "epic_name": "Squad Enablement", "diff_to_upstream": []}, "CNPS-603": {"assignee": "hutchisc", "created": "2019-04-10T07:24:02+10:00", "creator": "hutchisc", "description": "Brendan Wreford has reported via slack that the {{csp/productservice}} repository has not been receiving build status updates for the last 24 hours or so.\r\n\r\n{quote}\r\nbrendan [2:07 PM]\r\n Is status broken?\r\nFor github sync\r\nI\u2019m not seeing any statuses today\r\n{quote}", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-603", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Gitsync not updating build status for csp/productservice", "updated": "2019-08-20T16:42:11+10:00", "estimate": 1.5, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-602": {"assignee": "castanoa", "created": "2019-04-09T10:07:34+10:00", "creator": "mereditj", "description": "When jobs fail in Jenkins, pod's keep hanging and need to be deleted/cleaned up. Investigate the root cause and identify a long term fix for this. Jenkins Job to clean the errors/pods?", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-602", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Jenkins (Dev) re-installation", "updated": "2019-08-20T16:42:09+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-601": {"assignee": "castanoa", "created": "2019-04-09T10:02:16+10:00", "creator": "mereditj", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-601", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Remediate jenkins psv2 image issues", "updated": "2019-08-20T16:42:09+10:00", "estimate": 2.5, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-600": {"assignee": "steenkaj", "created": "2019-04-08T15:03:06+10:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-600", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Plan the location move", "updated": "2019-08-20T16:42:08+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-597": {"assignee": "blackm", "created": "2019-04-08T14:58:28+10:00", "creator": "rickarm1", "description": "Define the direction of Twistlock\r\n* Are we going to support it?\r\n* Who is the customer?\r\n* When does this need to be completed?\r\n* How is it going to work?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-597", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Twistlock direction/clarity", "updated": "2019-08-20T16:42:07+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-596": {"assignee": "headenj1", "created": "2019-04-08T14:27:32+10:00", "creator": "headenj1", "description": "[~pimputks] requested assistance to set up new syncpairs for an org which had not yet had any syncing configured.\u00a0\r\n\r\nEstimated effort ~2hours", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-596", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Gitsync setup for DAS org", "updated": "2019-08-20T16:42:06+10:00", "estimate": null, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-595": {"assignee": "hutchisc", "created": "2019-04-08T14:11:51+10:00", "creator": "hutchisc", "description": "EAIS want to sync a repo to Google CSR. They have not yet set up any syncing, so secrets for both github and gcloud also need to be set up as part of the onboarding.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-595", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Onboard EAIS into gitsync", "updated": "2019-08-20T16:42:07+10:00", "estimate": 2.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-593": {"assignee": "rickarm1", "created": "2019-04-05T11:52:38+11:00", "creator": "rickarm1", "description": "h3. Description\r\nThis story covers allowing GCP access for ANZ staff members to connect to ANZ's GCP VPC when using a VDI client (working from home etc).\r\n\r\nh3. Acceptance Criteria\r\nEnsure VDI clients (citrix) can connect to the ANZ GCP VPC via networks other than ANZ Staff", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-593", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Allow access to GCP from VDI connections", "updated": "2019-08-20T16:39:10+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-592": {"assignee": "dugalp", "created": "2019-04-05T10:55:46+11:00", "creator": "agrawad", "description": "Currently GCP can only be accessed via WiFi networks from 833. Firewall changes are required to allow 833 LAN IPs to allow this access.\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Story", "key": "CNPS-592", "labels": [], "lastViewed": "2019-11-22T11:51:53.600000+11:00", "priority": "Low", "project": "CNPS", "reporter": "agrawad", "status": "Closed", "summary": "Allow access from 833 LAN IPs to GCP", "updated": "2019-11-22T11:51:52+11:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-591": {"assignee": "castanoa", "created": "2019-04-05T10:29:49+11:00", "creator": "castanoa", "description": "Add [https://docs.k6.io/docs]\u00a0to the image they use to run tests.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-591", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Update csp jenkins agent image to include more tools", "updated": "2019-08-20T16:42:06+10:00", "estimate": 8.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-590": {"assignee": "castanoa", "created": "2019-04-05T10:14:21+11:00", "creator": "rickarm1", "description": "Add new users into Jenkins user groups", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-590", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Jenkins admin - create more users for CSP team", "updated": "2019-08-20T16:42:05+10:00", "estimate": 3.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-589": {"assignee": null, "created": "2019-04-04T09:21:52+11:00", "creator": "hutchisc", "description": "Every request to gitsync runs concurrently. This means if multiple requests to sync the same pair of repositories come at the same time, the same repos will be synced concurrently. This can sometimes lead to errors due to locking of repositories preventing one of the syncs from succeeding.\r\n\r\nInstead each sync pair should only ever be running one sync operation at a time. They could run in their own goroutine with a queue. It should also be possible to ignore requests if we have just completed a sync and the next one would do nothing.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-589", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Backlog", "summary": "Make gitsync safe for concurrent execution", "updated": "2019-09-12T22:18:12+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-587": {"assignee": "hutchisc", "created": "2019-04-03T16:18:33+11:00", "creator": "hutchisc", "description": "Gitsync is meant to mirror repos from GHE to CSR. It is not a complete mirror as tags can be created in CSR and should be copied back to GHE, but all commits and branches should be mastered on GHE and propagated to CSR.\r\n\r\nIt appears that when branches are removed from GHE, they do not get removed from CSR. This has been reported by Michael Dao (DCX) and Derek Mui (OB SRE) has also reported the same issue on the #ghe-gsr-sync channel.", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-587", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Remote branches not being pruned by gitsync", "updated": "2019-08-20T16:42:05+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-586": {"assignee": null, "created": "2019-04-02T16:28:53+11:00", "creator": "mereditj", "description": "There was a minor update to Twistlock on the 25th March '19. See [https://docs.twistlock.com/docs/latest/download/releases.html]\r\n\r\nWe should update to latest version when we get the chance to stay on track.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-586", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Update Twistlock to v19.03.311", "updated": "2019-08-20T16:38:52+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-585": {"assignee": "castanoa", "created": "2019-04-02T15:28:28+11:00", "creator": "castanoa", "description": "h3. Descriptipn\r\nSpinnaker account configuration is manual at the moment. We need to provide a more scalable way to onboard and manage accounts.\r\n\r\nh3. Acceptance Criteria\r\n* Enable automated configuration of accounts so that Spinnaker can be scaled to support more applications", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-585", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Design a quick solution to provide self service account management for spinnaker clients", "updated": "2019-08-20T16:42:04+10:00", "estimate": null, "epic_ref": "CNPS-555", "epic_name": "", "diff_to_upstream": []}, "CNPS-584": {"assignee": null, "created": "2019-04-02T15:25:47+11:00", "creator": "castanoa", "description": "Spinnaker account configuration is manual at the moment. We need to provide a more scalable way to onboard and manage accounts.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-584", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Design a quick solution to provide self service account management for spinnaker clients", "updated": "2019-08-20T16:42:04+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-583": {"assignee": "castanoa", "created": "2019-04-02T15:16:33+11:00", "creator": "castanoa", "description": "Updated all of the non prod accounts for BX and DSE in spinnaker.\r\n\r\nAdded a new non prod account that didn't exist before.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-583", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Update CSP kube accounts in spinnaker", "updated": "2019-08-20T16:42:03+10:00", "estimate": 4.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-582": {"assignee": "mereditj", "created": "2019-04-02T09:18:38+11:00", "creator": "blackm", "description": "h3. Acceptance Criteria\r\nAdd details of our current Twistlock implementation. Include the following:\r\n * Architecture diagram (nothing pretty) - include GCP project_id and IP/ports where appropriate\r\n * Twistlock ADR/KDDs (ie tenant/scale decision)\r\n * Links out to Twistlock docs wherever possible\r\n * Include a \"Getting Started\" steps for newbie to run a dev instance (is this [Helm page|[https://github.service.anz/ex/engineering-acceleration-infrastructure/tree/master/helm-charts/twistlock]]\u00a0a better place for this content?)\r\n * Include \"Production Deployment\" guide\r\n\r\n[https://confluence.service.anz/display/EX/Twistlock+Implementation]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-582", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CNPS", "reporter": "blackm", "status": "Story Done", "summary": "Twistlock implementation docs", "updated": "2019-08-20T16:40:01+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-581": {"assignee": "hutchisc", "created": "2019-04-02T08:32:48+11:00", "creator": "hutchisc", "description": "When github sends an event to gitsync via the webhook mechanism, there is an HTTP header called {{X-Github-Delivery}} that has a GUID. Assuming that github logs its execution of the webhook with that GUID, we should use that GUID as the {{correlation_id}} for our logs. This will let us easily correlate the github webhook execution with the sync execution in splunk.\r\n\r\nRef: https://developer.github.com/webhooks/#payloads", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-581", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "hutchisc", "status": "Story Done", "summary": "Use github delivery GUID as correlation ID", "updated": "2019-08-20T16:41:58+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-580": {"assignee": "castanoa", "created": "2019-04-01T16:35:39+11:00", "creator": "rickarm1", "description": "h3. Description\r\nAs Spinnaker is now running in a production pilot state, we've observed that the implementation may need to be refined to cater for scale (more customers, deployments etc). This task is to capture the recommendations to how we improve the platform so that we can scale the offering to the rest of ANZ.\r\n\r\nh3. Acceptance Criteria\r\n1. Collated list of enhancements for Spinnaker to cater for additional customers\r\n2. High level proposed solutions for each of the enhancements so that context is given for other developers to pick up the work", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-580", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Capture Spinnaker enhancements to cater for supporting additional services ", "updated": "2019-08-20T16:39:23+10:00", "estimate": 4.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-579": {"assignee": null, "created": "2019-04-01T15:24:01+11:00", "creator": "rickarm1", "description": "h2. Acceptance Criteria\r\n----\r\nStackdriver will alert the delivery acceleration team via email when the following *<conditions>* are met:\r\n||*<conditions>*||\r\n|Defender Service has attempted 2 or more restarts per minute|\r\n|Defender Service has been offline for 5 or more minutes|", "fixVersions": [], "issuetype": "Story", "key": "CNPS-579", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Setup stackdriver monitoring for Twistlock on Kubernetes", "updated": "2019-09-02T14:16:48+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-578": {"assignee": null, "created": "2019-04-01T15:19:01+11:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n\r\nStackdriver will alert the delivery acceleration team via email when the following *<conditions>* are met on Jenkins: \r\n \r\n||*<conditions>*||\r\n|Service has attempted 2 or more restarts per minute|\r\n|Service has been offline for 5 or more minutes|", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-578", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Setup stackdriver monitoring for Jenkins in Kubernetes", "updated": "2019-09-17T08:39:30+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-577": {"assignee": "agrawad", "created": "2019-04-01T13:11:20+11:00", "creator": "agarwas2", "description": "h3. Description\r\n\r\nTLS Certificates need to be provisioned to ensure the Twistlock console conforms to ANZ security standards.\r\n\r\nA guide exists for this in the git repo.\r\nh3. Acceptance Criteria\r\n\r\n1. TLS Certificate installed on production Twistlock console\r\n 2. Certificate is generated by trusted ANZ authority", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-577", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "TLS certificates for Twistlock in production", "updated": "2019-08-20T16:38:40+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-575": {"assignee": "agarwas2", "created": "2019-04-01T08:34:48+11:00", "creator": "agarwas2", "description": "An article highlighting the technical angle of the work the team has been doing over the past few months to be published in the The Source Code newsletter as a followup to the previous editions feature of the NWOW perspective of cross tribe collaboration ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-575", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Article for The Source Code", "updated": "2019-08-20T16:42:02+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-574": {"assignee": "headenj1", "created": "2019-03-29T10:27:51+11:00", "creator": "headenj1", "description": "We need a secure way to share secrets without exposing them externally", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-574", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Look at options for how to share secrets within the squad", "updated": "2019-08-20T16:42:01+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-573": {"assignee": null, "created": "2019-03-28T11:14:42+11:00", "creator": "mereditj", "description": "As ANZ cloud security, when we require support from Twistlock which involves sending a log dump to their support team, I would like to know what information is being shared in case we need to sanitise said data.\r\n\r\n\u00a0\r\n\r\nJust as an FYI, you can share a dump of the logs (obtainable through the console) with the Twistlock support team via:\r\n\r\n\u00a0\r\n\r\n{{./cli/osx/twiscli support upload --file logdump.tar.gz}}\r\n\r\n\u00a0", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-573", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Closed", "summary": "Audit of Twistlock debug dump", "updated": "2019-09-17T08:39:31+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-571": {"assignee": "mereditj", "created": "2019-03-28T10:57:30+11:00", "creator": "rickarm1", "description": "h3. Description\r\nLog a heartbeat every minute with some build details and start time. This will allow us to easily track the health of the app from splunk, and allow us to show some build details on a dashboard.\r\n\r\nh3. Acceptance Criteria\r\n1. Poll/ping the gitsync service every minute\r\n2. Capture the results over time", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-571", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Log gitsync heatbeat", "updated": "2019-08-20T16:42:00+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-570": {"assignee": "headenj1", "created": "2019-03-28T10:56:51+11:00", "creator": "rickarm1", "description": "h3. Description\r\nAs a sync operation progresses, we can feed that back to github using the statuses API, much like we do for syncing the cloudbuild status. This will give visibility of the sync process to github users - currently they have no idea if it is progressing, if it failed, and if so, where.\r\n\r\nAdditionally, each sync run should have a guid (currently does, called correlation_id for correlating logs), and all logs for that operation should be stored in memory and accessible through a URL with the guid. This allows the github status to link back to the sync operation much like it does for CI runs. This means if the sync fails and github shows a red cross, the user can click on that and gitsync will show the logs of the sync run.\r\n\r\nh3. Acceptance Criteria\r\n* GitSync status is recorded in GitHub\r\n** Status = Synced to google cloud build (Green Tick), Not Synced to google cloud build (Red Cross)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-570", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Record sync status as github status", "updated": "2019-08-20T16:41:57+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-569": {"assignee": null, "created": "2019-03-28T10:56:25+11:00", "creator": "rickarm1", "description": "The operation {{sync_repos.sh}} shell script at the core of gitsync is too opaque to the rest of the program, so we cannot easily get metrics of how long various phases take or a clear indication of where it may error out. It does have some logging, but it would be nicer for other changes if the orchestration of the {{git}} commands was done from the main go code.\r\n\r\nIn the end, the core of the script really only runs a couple of commands and that is not too onerous to execute directly from go. So do that and get rid of the shell script which has also been the source of some bugs and trouble.\r\n\r\nTo be clear - this is not about using a git library to run the git operations, but just executing the external `git` command. The former is too much work for little to no benefit.\r\n\r\n", "fixVersions": [], "issuetype": "Story", "key": "CNPS-569", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Convert shell git to go", "updated": "2019-09-12T22:18:29+10:00", "estimate": null, "epic_ref": "CNPS-831", "epic_name": "", "diff_to_upstream": []}, "CNPS-568": {"assignee": "hutchisc", "created": "2019-03-28T10:55:52+11:00", "creator": "rickarm1", "description": "h3. Description\r\nWhen we create a status record in github to record the GCP build status, we set the context to \"Google Cloud Builds\". \r\n\r\nh3. Acceptance Criteria\r\n1. Add the GCP project ID to build\r\n2. Record the build status for each project individually for the cases where github repos are synced to multiple GCP projects. \r\n\r\nCurrently it is a race as to which status gets recorded (the loser of the race is the last to update, and is hence recorded).", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-568", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Record GCP project against build status in github", "updated": "2019-08-20T16:41:56+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-567": {"assignee": "hutchisc", "created": "2019-03-28T10:54:09+11:00", "creator": "rickarm1", "description": "h3. Description\r\nWe do not appear to be logging the http requests we receive with the results we send - at least we want the status code we return for each request. \r\n\r\nh3. Acceptance Criteria\r\n1. Enable this logging in a structured format like the rest of the logging, so we can identify failures more easily.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-567", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Log GitSync http requests", "updated": "2019-08-20T16:41:54+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-566": {"assignee": "agarwas2", "created": "2019-03-27T16:20:33+11:00", "creator": "agarwas2", "description": "Preprod environment was created to do a dry run before the first production deployment and can be removed now. There is a need for a pre production environment but one that sits in the production shared VPC. That will be captured in another task. \r\n\r\nAcceptance Criteria - \r\n\r\n* ex-launchpad-ppr and all associated resources removed\r\n* ex-services-ppr and all associated resources removed\r\n* bamboo terraform plan to ppr cleaned up\r\n* references to ppr environment in codebase removed", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-566", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Remove preprod environment from GCP non prod host project", "updated": "2019-08-20T16:39:22+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-565": {"assignee": "castanoa", "created": "2019-03-27T10:24:40+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-565", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Deploy Jenkins patch to production", "updated": "2019-08-20T16:39:23+10:00", "estimate": 6.0, "epic_ref": "CNPS-562", "epic_name": "", "diff_to_upstream": []}, "CNPS-564": {"assignee": "agarwas2", "created": "2019-03-26T15:03:49+11:00", "creator": "agrawad", "description": "h3. Description\r\n\r\nCurrently VDI can only access GCP services deployed in production, we need to allow access to dev and staging too to facilitate people working remotely.\r\n \u00a0\r\nh3. Technical Detail\u00a0\r\nh3. Acceptance Criteria\r\n||Tools||Dev||Stag||Prod||\r\n|Google console|\u00a0|\u00a0|\u00a0|\r\n|Twistlock|\u00a0|\u00a0|\u00a0|\r\n|Jenkins|\u00a0|\u00a0|\u00a0|\r\n|Spinnaker|\u00a0|\u00a0|\u00a0|\r\n|Artifactory|\u00a0|\u00a0|\u00a0|\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-564", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agrawad", "status": "Story Done", "summary": "Access GCP dev and nonprod from VDI", "updated": "2019-08-20T16:39:13+10:00", "estimate": null, "epic_ref": "CNPS-604", "epic_name": "", "diff_to_upstream": []}, "CNPS-562": {"assignee": null, "created": "2019-03-26T11:30:58+11:00", "creator": "rickarm1", "description": "Capture all unplanned work here, necessary to \u201ckeep the lights on\u201d and ensure our customers\u2019 happiness and success.\r\n\r\nAll tickets in this epic should have a number of hours spent captured in the \u201cestimate\u201d field.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-562", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Epic Done", "summary": "Keeping the lights on", "updated": "2019-11-15T12:50:17+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI5: Lights On", "diff_to_upstream": []}, "CNPS-559": {"assignee": "agrawad", "created": "2019-03-26T10:35:10+11:00", "creator": "rickarm1", "description": "h3. Description\r\nA service account is required so that twistlock can connect to the internet and retrieve vulnerability data, updated security threats etc\r\n\r\nh3. Acceptance Criteria\r\n1. Service account created for Twistlock\r\n2. Twistlock can utilise the service account to connect to the internet successfully", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-559", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create ECORP service account for hairpin access for twistlock (production)", "updated": "2019-08-20T16:39:11+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-558": {"assignee": "castanoa", "created": "2019-03-26T10:34:03+11:00", "creator": "rickarm1", "description": "Automate the creation of admin group for DA team. Otherwise everyone else will be admin and we'll need to manually remove people from the group.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-558", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Automate creation of authentication/roles in Jenkins", "updated": "2019-08-20T16:40:04+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-557": {"assignee": "castanoa", "created": "2019-03-26T10:10:08+11:00", "creator": "rickarm1", "description": "* Create Groovy script to initialise configuration on cloudbuild", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-557", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Configuring GSuite Auth for Jenkins upon re-deploy", "updated": "2019-08-20T16:40:03+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-556": {"assignee": "agarwas2", "created": "2019-03-26T09:50:29+11:00", "creator": "agarwas2", "description": "h3. Description\r\nArtifactory currently uses a PVC of 500GB to store artefacts on disk. Currently artifactory is used purely as a proxy to fetch remote artefacts from Maven and NPM repositories. However once docker registries are enabled in artifactory teams will be producing artefacts for storage in artifactory in addition to container images from remote repositories being pulled into artifactory for caching purposes.\u00a0\r\n\r\n\u00a0\r\n\r\nh3. Value\r\n\r\nGoogle Cloud Storage allows for two major advantages over PVC\u00a0\r\n * unlimited scaling as the size of artefacts grows. on premises artifactory currently uses ~19TB so as the use of artifactory on GCP grows the space will be a major issue\r\n * Since storage can be made redundant across the region we can ensure DR of artefacts which is necessary for artefacts that will be produced through pipelines.\u00a0\r\n\r\nh3. Acceptance Criteria\r\n* Artifactory is backed by Google storage bucket instead of PVC\r\n* PVC claims are removed\u00a0\r\n* Google Storage bucket used by Artifactory is created in Australia region", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-556", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Move Artifactory to use Google Storage bucket as storage backend", "updated": "2019-08-20T16:40:07+10:00", "estimate": null, "epic_ref": "CNPS-553", "epic_name": "", "diff_to_upstream": []}, "CNPS-555": {"assignee": null, "created": "2019-03-26T00:12:34+11:00", "creator": "agarwas2", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-555", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Epic in Progress", "summary": "Spinnaker Self Service", "updated": "2019-09-04T13:49:48+10:00", "estimate": null, "epic_ref": null, "epic_name": "Spinnaker Self Service", "diff_to_upstream": []}, "CNPS-554": {"assignee": null, "created": "2019-03-26T00:11:19+11:00", "creator": "agarwas2", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-554", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Epic in Progress", "summary": "Evolving the foundations of the platform for scale", "updated": "2019-11-21T10:26:58+11:00", "estimate": null, "epic_ref": null, "epic_name": "Evolve the Foundation", "diff_to_upstream": []}, "CNPS-553": {"assignee": null, "created": "2019-03-25T23:48:34+11:00", "creator": "agarwas2", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-553", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Epic Done", "summary": "Enabling storage and management of containers on Artifactory", "updated": "2019-05-31T10:50:16+10:00", "estimate": null, "epic_ref": null, "epic_name": "Docker on Artifactory", "diff_to_upstream": []}, "CNPS-552": {"assignee": "mereditj", "created": "2019-03-25T16:45:44+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-552", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Run a Twistlock DOJO", "updated": "2019-08-20T16:41:56+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-551": {"assignee": "steenkaj", "created": "2019-03-25T16:44:53+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-551", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Roles & Responsibilities Session", "updated": "2019-08-20T16:41:55+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-550": {"assignee": "mereditj", "created": "2019-03-25T16:23:35+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-550", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Principles & Practices Session", "updated": "2019-08-20T16:41:54+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-549": {"assignee": "mereditj", "created": "2019-03-25T16:23:06+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-549", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Do we pivot our CD capability session", "updated": "2019-08-20T16:41:53+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-548": {"assignee": "headenj1", "created": "2019-03-25T16:22:22+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-548", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Run a Spinnaker/CSP DOJO session", "updated": "2019-08-20T16:41:52+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-547": {"assignee": "blackm", "created": "2019-03-25T13:46:38+11:00", "creator": "agarwas2", "description": "GCS buckets have admin privileges provided to gcp_ex_developers@anz.com group. Reduce the privileges to be able to view and create objects and not be able to change ACLs on the items in the bucket. ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-547", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Remove storage admin privileges from GCP buckets", "updated": "2019-08-20T16:41:51+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-546": {"assignee": "headenj1", "created": "2019-03-25T10:29:25+11:00", "creator": "agarwas2", "description": "Jenkins runs as a privileged container by default, allowing a malicious actor to run admin actions if access is gained via any zero day or known vulnerability. Jenkins should be run as the `jenkins` user instead that is non privileged thereby reducing the attack surface\r\n\r\nAcceptance Criteria:\r\n\r\n* Jenkins process runs as `jenkins` user instead of root", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-546", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Run Jenkins as non privileged user", "updated": "2019-08-20T16:40:05+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-545": {"assignee": "agrawad", "created": "2019-03-25T10:27:13+11:00", "creator": "agarwas2", "description": "* Raise a change request for the Jenkins change that needs to happen in order to address vulnerability concerns in the CI/CD pipeline", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-545", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create Change Request for Jenkins Deployment", "updated": "2019-08-20T16:40:19+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-544": {"assignee": null, "created": "2019-03-25T10:25:44+11:00", "creator": "agarwas2", "description": "* Define process to restore twistlock database in case of incident\r\n * Examine the `DATA_RECOVERY_ENABLED` feature in Twistlock.cfg - determine how to back that up to GCP, and how to restore that config in a DR scenario", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-544", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Create database backup strategy for Twistlock", "updated": "2019-09-17T08:40:04+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-543": {"assignee": "agarwas2", "created": "2019-03-22T09:55:50+11:00", "creator": "rickarm1", "description": "h3. Lack of secret management process\r\n\r\nTeam secrets are currently not being managed in a best practice way. This needs to be reviewed as it exposes a security flaw with the keys to production services being managed on local machines, text files etc. This results in a single point of failure.\r\n\r\n\u00a0\r\nh4. Mitigation\r\n\r\nImplement a localised EX solution in the absence of an ANZ endorsed solution", "fixVersions": ["1.0.0"], "issuetype": "Delivery Risk", "key": "CNPS-543", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Resolved", "summary": "Secrets Management", "updated": "2019-09-17T08:39:32+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-542": {"assignee": "steenkaj", "created": "2019-03-22T09:50:07+11:00", "creator": "rickarm1", "description": "h3. *Knowledge/People Silos*\r\n\r\nKey team members have left the team which has caused knowledge silos across the squad. New team members have also joined the team that have no context of the project or implementation.\r\nh3. Mitigation\r\n * Ensure documentation from current team members are updated in confluence\r\n * Allow team members to pair and upskill in different applications", "fixVersions": [], "issuetype": "Delivery Risk", "key": "CNPS-542", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Resolved", "summary": "Knowledge/People Silos", "updated": "2019-11-13T12:50:19+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-541": {"assignee": "blackm", "created": "2019-03-22T09:43:25+11:00", "creator": "rickarm1", "description": "h3. *Scalability of CI/CD platform*\r\n\r\nAs the GCP CI/CD capability scales at ANZ, more delivery teams will require access to the platform - the platform needs to ensure scalability constrains are addressed in order to meet demand.\r\n * SLA's\r\n * Monitoring\r\n * Access & Account Privileges\u00a0\r\n\r\nh3. Mitigation\r\n * Implement monitoring and observability mechanisms throughout the pipeline\r\n * Establish SLA's for pipeline services\r\n * Define incident report structure/process/team", "fixVersions": [], "issuetype": "Delivery Risk", "key": "CNPS-541", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Accepted", "summary": "Scalability of CI/CD Platform", "updated": "2019-11-13T12:50:30+11:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-540": {"assignee": "agarwas2", "created": "2019-03-21T14:48:13+11:00", "creator": "agarwas2", "description": "Enable private access to GKE clusters in dev and stg environment allowing users to access kubectl operations using ANZ staff network\r\n\r\nAcceptance criteria\r\n\r\n* kubectl cluster-info on anz-ex-services-dev-gke cluster returns cluster info as expected\r\n* kubectl cluster-info on anz-ex-services-stg-gke cluster returns cluster info as expected", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-540", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Enable private access for non prod GKE clusters", "updated": "2019-08-20T16:40:03+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-539": {"assignee": "mereditj", "created": "2019-03-19T16:16:39+11:00", "creator": "mereditj", "description": "Currently Twistlock requires manual intervention to configure the console which is painful.\r\n\r\nScript up the creation of the admin user via twistlock's cloudbuild.yaml so that we can interact with it's API directly to configure other aspects:\r\n * Twistlock License\r\n * Authn & authz\r\n * Proxies\r\n * ...", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-539", "labels": ["Development"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Provision Twistlock console with a default admin user & license", "updated": "2019-08-20T16:40:01+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-538": {"assignee": "agarwas2", "created": "2019-03-18T09:55:41+11:00", "creator": "agarwas2", "description": "Move any IAM bindings made via terraform to a iam.tf file. This enables adding security reviewers as CODEOWNERS for any changes to iam bindings\r\n\r\nAcceptance Criteria\r\n\r\n* Refactor role bindings to iam.tf file \r\n* Ensure no changes required\r\n* Add ex-security group to codeowners for any changes to iam.tf file", "fixVersions": [], "issuetype": "Story", "key": "CNPS-538", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Centralise IAM assignments", "updated": "2019-09-17T08:49:33+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-537": {"assignee": "agarwas2", "created": "2019-03-15T09:18:47+11:00", "creator": "agarwas2", "description": "A list of projects that were created during the MVP journey but are currently unused need to be deleted. List below\r\n\r\nanz-ea-consumer                      anz-ea-consumer                234966538700\r\nanz-ea-foundation                    anz-ea-foundation              115333192508\r\nanz-ea-scratch                           anz-ea-scratch                 836723535178\r\nanz-ea-services                          anz-ea-services                876056225020\r\nanz-ex-services-np-363346      anz-ex-services-np             128590838421\r\nanz-trans-pipelines-as-a-serv  anz-trans-pipelines-as-a-serv  425192267274\r\nanz-ex-services-stg-2c905b     anz-ex-services-stg            666364417680\r\n\r\nAdvised to remove these to reduce cost and maintain hygiene \r\n\r\nAcceptance Criteria\r\n\r\n- All project have been deleted and acknowledged by Cloud services", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-537", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Done", "summary": "Delete old projects", "updated": "2019-08-20T16:41:51+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-536": {"assignee": null, "created": "2019-03-14T08:52:57+11:00", "creator": "headenj1", "description": "Configuration updates to gitsync in omni openshift are deployed via pipeline. Several deplopyments have caused minor service disruption due to missing secrets.\r\n\r\nThis task is to enhance\u00a0 validation in \u00a0the bamboo build to confirm\u00a0that the secrets are all present in openshift before the config is deployed\r\n\r\nAs a developer I want to be confident that my configuration updates will not cause service disruption", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-536", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Enhance pipeline validation for gitsync config", "updated": "2019-08-20T16:41:50+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-532": {"assignee": null, "created": "2019-03-13T13:29:50+11:00", "creator": "rickarm1", "description": "h3. Description\r\n\r\nThis story covers capturing GitSync logs in Splunk so that the team can analyse the logs and setup monitoring of the GitSync service.\r\n\r\nMore context: the GCP pipeline kicks off deployments by receiving code that teams commit to GitHub. This process is orchestrated by the GitSync service - we need to log events so that we know when there are issues with the health of the service.\r\nh3. Acceptance Criteria\r\n # Validate that git sync + k8 application logs are going into Splunk\r\n # Investigate how we're going to dashboard and alert in Splunk", "fixVersions": [], "issuetype": "Story", "key": "CNPS-532", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Validate Git Sync logging into Splunk", "updated": "2019-09-17T08:44:00+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-531": {"assignee": "clarker", "created": "2019-03-13T13:19:46+11:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n----\r\nStackdriver will alert the delivery acceleration team via *<email>*\u00a0when the following *<conditions>* are met on these *<services>*:\r\n||*<conditions>*||\r\n|Service has attempted 2 or more restarts per minute|\r\n|Service has been offline for 5 or more minutes|\r\n||<services>||\r\n|Master|\r\n|Primary|\r\n|2 x Secondary|\r\n||\u00a0<email>||\r\n|DAPipelineAlerts@anz.com\u200b|", "fixVersions": [], "issuetype": "Story", "key": "CNPS-531", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup Stackdriver monitoring for Artifactory on Kubernetes", "updated": "2019-11-13T12:54:18+11:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-530": {"assignee": "mereditj", "created": "2019-03-13T13:18:54+11:00", "creator": "rickarm1", "description": "h3. Description\r\n\r\nThis story covers monitoring of Spinnaker utilising google's out of the box Stackdriver tool.\r\nh3. Acceptance Criteria\r\n\r\nStackdriver will alert the delivery acceleration team via email when the following *<conditions> on <spinnaker services>*\u00a0are met:\r\n\r\n\u00a0\r\n||*<conditions>*||\r\n|Service has attempted 2 or more restarts per minute|\r\n|Service has been offline for 5 or more minutes|\r\n||*<spinnaker services>*||\r\n|Rosco|\r\n|Fiat|\r\n|Cloud Driver|\r\n|Deck|\r\n|Front 50|\r\n|Gate|\r\n|Orca|\r\n|Kayenta|\r\n|Igor|\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-530", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup stackdriver monitoring for Spinnaker on Kubernetes", "updated": "2019-08-20T16:42:19+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-529": {"assignee": "agrawad", "created": "2019-03-12T16:36:49+11:00", "creator": "rickarm1", "description": "h2. Acceptance Criteria\r\n-----\r\n* Create a record of twistlock in troux (https://troux.service.anz/tip/)\r\n* We need this to be able to create certificates for twistlock", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-529", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create application in Troux", "updated": "2019-08-20T16:40:18+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-528": {"assignee": "agrawad", "created": "2019-03-12T16:32:48+11:00", "creator": "rickarm1", "description": "h2. Acceptance Criteria\r\n\r\nSecure connection (https) working with NonProd Twistlock.\r\n----", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-528", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "TLS Certificates - NonProd Twistlock", "updated": "2019-08-20T16:39:58+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-527": {"assignee": "soin", "created": "2019-03-12T16:30:04+11:00", "creator": "rickarm1", "description": "h3. Description\r\n\r\nEnable the communication between defenders in prod NSW cluster to our prod Twistlock console on port 8084. This is dependent upon setting up the Twistlock console in production.\r\nh2. Acceptance Criteria\r\n * Defenders can be viewed in the Twistlock Console\r\n * Defenders security status is visible in the console", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-527", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Firewall rules for production", "updated": "2019-08-20T16:38:48+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-526": {"assignee": null, "created": "2019-03-12T16:29:31+11:00", "creator": "rickarm1", "description": "NB: Modified ticket to reflect changed implementation.\r\n\r\nA Supervisor Console will be deployed in the customer cluster (which enables the outbound comms pattern).\r\n\r\nAcceptance criteria: automation of the above completed.\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-526", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Use Supervisor/Defender pattern and enable outbound comms in non-prod", "updated": "2019-08-20T16:38:50+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-525": {"assignee": "sandhub1", "created": "2019-03-12T16:28:41+11:00", "creator": "rickarm1", "description": "In order to access the twistlock console using a human friendly host name rather than IP DNS entries should be created. \r\n\r\nAcceptance criteria\r\n\r\n* Capability to create A records for twistlock-dev.ex.gcpnp.anz and twistlock-stg.ex.gcpnp.anz\r\n* Capability to create CNAME record for twistlock.gcpnp.anz\r\n* Successfully executed A record for twistlock-dev.ex.gcpnp.anz and CNAME twislock.gcpnp.anz -> twistlock-dev.ex.gcpnp.anz", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-525", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "DNS configuration for twistlock", "updated": "2019-08-20T16:40:17+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-524": {"assignee": "rickarm1", "created": "2019-03-11T21:43:07+11:00", "creator": "agarwas2", "description": "Spinnaker needs to be upgraded to v 1.12.4 in order to support CSP PSV2 release for production. In order to do so a minor change record needs to be created in service now.\u00a0\r\n\r\n\u00a0\r\n\r\nAcceptance criteria -\u00a0\r\n\r\n- Change record is created and is in authorize state, ready to implement.", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-524", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Done", "summary": "Create change record for production minor change", "updated": "2019-08-20T16:40:16+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-523": {"assignee": "hidera", "created": "2019-03-11T21:39:52+11:00", "creator": "agarwas2", "description": "Artifactory helm chart used currently v0.4.4 of the helm charts from https://github.com/jfrog/charts\r\n\r\nModifications were made to a local copy of the chart checked into the ex repository. This makes the upgrade to newer version of the chart difficult. This story is to migrate the modifications to kustomize patches so that upgrades to the helm chart are more manageable. Refer to spinnakerv3 implementation for reference.\r\n\r\nAcceptance criteria - \r\n\r\n- All modifications made to v0.4.4 of the chart should be captured as kustomize patches \r\n- There should be no functional changes to the final rendered template compared to current version deployed to production", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-523", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Refactor artifactory helm chart to use Kustomise", "updated": "2019-08-20T16:39:12+10:00", "estimate": null, "epic_ref": "CNPS-638", "epic_name": "", "diff_to_upstream": []}, "CNPS-522": {"assignee": "castanoa", "created": "2019-03-11T21:26:34+11:00", "creator": "agarwas2", "description": "Deploy v1.12.4 to ex-services-prod cluster\r\n\r\nAcceptance Criteria -\r\n - Successful deployment of new version to production cluster verified\r\n - Connectivity to CSP non production cluster from production spinnaker instance is not impacted\r\n - Ability to deploy to non production cluster of CSP is tested and use of live manifest calls is verified", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-522", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Deploy new version of spinnaker to production ex-services", "updated": "2019-08-20T16:39:56+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-519": {"assignee": "headenj1", "created": "2019-03-08T10:51:28+11:00", "creator": "rickarm1", "description": "Twistlock console needs to communicate with the twistlock intelligence stream to pull latest vulnerability information in order to provide visibility of newly detected threats to ANZ. Internet connectivity is established via on premises application proxy (referred to hairpin pattern) in the public gateway zone in the perimeter on premises.\r\n\r\nThe application proxy whitelists hostnames and source IPs to control access. A request needs to be raised with the proxy team to whitelist twistlock intelligence stream hostnames. Refer to <> for the process instruction. Some information needed is specified below\r\n\r\nService account - QAECORP\\auifptwstdsa\r\n Source IPs - 10.149.17.0/27 (primary range of ex-services-dev cluster)\r\n\r\nVIP for app proxy in GLOBALTEST - 59.154.134.109\r\n\r\nAcceptance Criteria -\r\n - Proxy is configured to allow access to intelligence stream using specified service account from specified source ranges\r\n - Configuration is tested by configuring proxy settings in twistlock console", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-519", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Configure hairpin proxy (non production) for internet connectivity", "updated": "2019-08-20T16:39:59+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-518": {"assignee": "agrawad", "created": "2019-03-08T10:50:50+11:00", "creator": "rickarm1", "description": "Twistlock console needs to communicate with the twistlock intelligence database to pull latest vulnerability information in order to provide visibility of newly detected threats to ANZ. Internet connectivity is established via on premises application proxy (referred to hairpin pattern) in the public gateway zone in the perimeter on premises. \r\n\r\nIn order to authenticate to the application proxy a windows service account must be requested. This story is to request for a twistlock service account for the QAECORP windows domain that will allow testing of internet connectivity in the non production environment\r\n\r\nPlease request for account name to be QAECORP\\auifptwstdsa\r\n\r\nSee https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/docs/guides/service-accounts.md for more info\r\n\r\nAcceptance criters\r\n\r\n- Service account is created\r\n- Password is sent to Product owner", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-518", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create QAECORP service account for hairpin access for twistlock (non production)", "updated": "2019-08-20T16:39:58+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-516": {"assignee": "headenj1", "created": "2019-03-08T10:08:42+11:00", "creator": "rickarm1", "description": "Configuration updates to gitsync in omni openshift are deployed via pipeline. Several deplopyments have caused minor service disruption due to malformed jsonnet files or missing secrets.\r\n\r\nThis task is to add a validation step to the bamboo build which will confirm the jsonnet file is well formed, that the image referenced is in the file is present and that the secrets are all present\r\n\r\nAs a developer I want to be confident that my configuration updates will not cause service disruption", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-516", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Validate gitsync config in bamboo pipeline", "updated": "2019-08-20T16:40:16+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-514": {"assignee": "headenj1", "created": "2019-03-08T10:05:20+11:00", "creator": "rickarm1", "description": "Generate config to give to open banking (Michael Fornaro)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-514", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Re-deploy gitsync to production", "updated": "2019-08-20T16:42:00+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-512": {"assignee": null, "created": "2019-03-08T00:19:18+11:00", "creator": "agarwas2", "description": "Spinnaker currently uses redis deployed to the kubernetes cluster in a master/slave configuration for caching. Since caching is a critical functionality in the spinnaker architecture it is recommended to move to a hosted solution which would allow for scale. \r\n\r\nhttps://www.spinnaker.io/setup/productionize/caching/externalize-redis/\r\n\r\nAcceptance criteria \r\n\r\n- Determine usage of memory store as a GCP service is ratified or not\r\n- Externalised redis used for spinnaker\r\n- memorystore confgiured and provisioned via terrraform\r\n- redis master and slave removed from cluster\r\n- migration plan to move from currnet setup to hosted service", "fixVersions": [], "issuetype": "Story", "key": "CNPS-512", "labels": ["ProductioniseSpinnaker"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Externalise spinnaker redis to GCP memorystore", "updated": "2019-11-21T10:17:49+11:00", "estimate": 13.0, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-511": {"assignee": null, "created": "2019-03-07T23:47:41+11:00", "creator": "agarwas2", "description": "Currently non production setup includes\r\n\r\nex-launchpad-dev + ex-services-dev and ex-services-stg\r\nex-launchpad-ppr + ex-services-ppr\r\n\r\nEach services project contains a GKE cluster. The current setup is complex and consumes a lot of IP space (three GKE clusters). Can be simplified to one non prod cluster likely with namespaces providing environment boundaries. \r\n\r\nAcceptance critera\r\n\r\n- Proposal for non production setup with \r\n- Agreement from team on proposal", "fixVersions": [], "issuetype": "Story", "key": "CNPS-511", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Remediate non production setup - design", "updated": "2019-09-12T22:28:40+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-510": {"assignee": "vadrevus", "created": "2019-03-07T23:35:44+11:00", "creator": "agarwas2", "description": "Terraform has a provider for kubernetes which allows management of certain bootstrap K8s resources like namespaces via terraform versus cloudbuild, which is leveraged currently. This should be utilized to manage certain kinds of resources, such as namespaces.\r\n\r\nAcceptance criteria\r\n\r\n- Bootstrap kubernetes provider in terraform\r\n- Get agreement within team what resources should be created via terraform vs helm. \r\n- Create namespaces for spinnaker, artifactory, jenkins and twistlock via terraform", "fixVersions": ["1.0.0"], "issuetype": "Story", "key": "CNPS-510", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Create namespaces in GKE cluster via terraform", "updated": "2019-09-17T08:39:45+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-509": {"assignee": null, "created": "2019-03-07T22:46:04+11:00", "creator": "agarwas2", "description": "As part of production deployment IP masquerading was applied to the cluster to enable communications to hair pin proxy on premises. The implementation requires a review, and a strategic position on IP masquerading. Direction from Google is highly recommended.\r\n\r\nContext -\r\n\r\nDuring deployment of v1 of the platform an issue was discovered due to hairpin proxy in production having a 10.x.x.x address vs a 52.x.x.x address in non production (see notes here). As a result of firewall rules implemented in the perimeter palo alto devices which allowed traffic to the hairpin proxy only form our primary IP range and the source to the proxy not being masqueraded, communications with hairpin proxy were blocked.  As a workaround, outgoing traffic to the proxy VIP was forced to be masqueraded. \r\n\r\nAcceptance criteria\r\n\r\n- Agree on IP masquerading strategy with cloud services and security\r\n- Implement masquerading policy in ex-services GKE cluster (either using current implementation or overhaul to new solution)", "fixVersions": [], "issuetype": "Story", "key": "CNPS-509", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Review IP masquerade configuration ", "updated": "2019-11-21T11:50:36+11:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-508": {"assignee": null, "created": "2019-03-07T22:04:09+11:00", "creator": "agarwas2", "description": "Once repository creation and management can be automated in Artifactory\u00a0\r\n\r\nFetch docker images needed for application deployments in ex-services via artifactory. Allows removal of cloud build triggers that fetch images from remote repositories.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-508", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Remove docker images from ex-launchpad", "updated": "2019-09-23T13:50:33+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-506": {"assignee": "agrawad", "created": "2019-03-07T10:15:19+11:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n* Artifactory Documentation for GKE pipeline has been captured on confluence\r\n* Documentation outlines in enough detail about the implementation of AF/GHE so that other developers can read and understand the implementation", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-506", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create Artifactory documentation for GKE pipeline", "updated": "2019-08-20T16:41:58+10:00", "estimate": null, "epic_ref": "CNPS-553", "epic_name": "", "diff_to_upstream": []}, "CNPS-505": {"assignee": "castanoa", "created": "2019-03-07T10:09:37+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-505", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup & Configure Pipeline", "updated": "2019-08-20T16:41:48+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-504": {"assignee": "castanoa", "created": "2019-03-07T10:08:44+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-504", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create Spinnaker documentation for GKE pipeline", "updated": "2019-08-20T16:41:48+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-500": {"assignee": null, "created": "2019-03-07T09:17:07+11:00", "creator": "rickarm1", "description": "{panel:title=Story Narrative|borderStyle=solid|borderColor=#cccccc|titleBGColor=#f7d6c1|bgColor=#ffffce}\r\nAs Delivery Acceleration, I want to know the health of the GCP CI/CD pipeline, so that we can respond to production incidents in a timely manner.\r\n{panel}", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-500", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Epic in Progress", "summary": "Pipeline Monitoring & Alerting", "updated": "2019-08-21T14:15:02+10:00", "estimate": null, "epic_ref": null, "epic_name": "Monitoring & Alerting", "diff_to_upstream": []}, "CNPS-499": {"assignee": "rickarm1", "created": "2019-03-06T16:10:59+11:00", "creator": "rickarm1", "description": "* We need to add a CI to cover each of the pipeline tools in Tech Connect\r\n* Fill out spreadsheet that covers IP ranges, Operating Systems etc\r\n* Create work request for team to configure CI's\r\n* Test that CI's are present in tech connect (raise a dummy change)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-499", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Add Pipeline CI into Tech Connect", "updated": "2019-08-20T16:40:16+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-498": {"assignee": null, "created": "2019-03-01T12:06:18+11:00", "creator": "rickarm1", "description": "Currently we are storing spinnaker secrets in the Haylard config bucket. This is not following the current practice of storing secrets in the engineering acceleration secrets buckets like we do for Jenkins and Artifactory.\r\n\r\n*Acceptance*\r\n * Move secrets from Haylard config into the Spinnaker authorised secrets bucket\r\n * Assess naming of secret files, currently certs all have *np* in the name even in prod.\r\n ** References are hardcoded here, could also be in other touch points. [https://github.service.anz/ex/engineering-acceleration-infrastructure/blob/master/helm-charts/spinnaker-v3/cloudbuild.yaml]\r\n ** halyard-config/gcpnp.anz.crt.enc\r\n ** halyard-config/gcpnp.anz.key\r\n ** Suggest just removing *np* from file name.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-498", "labels": ["TechDebt"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Refactor Spinnaker secrets strategy", "updated": "2019-11-06T11:38:16+11:00", "estimate": 2.0, "epic_ref": "CNPS-1053", "epic_name": "", "diff_to_upstream": []}, "CNPS-496": {"assignee": "headenj1", "created": "2019-03-01T10:59:38+11:00", "creator": "rickarm1", "description": "We need to start capturing documentation on how pipelines has implemented git sync, what it does etc. This will help new developers coming into the team with learning how it works, where to find it and why we use it.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-496", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create GitSync documentation in confluence", "updated": "2019-08-20T16:41:47+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-495": {"assignee": "mereditj", "created": "2019-02-28T16:00:51+11:00", "creator": "rickarm1", "description": "Twistlock Console gathers data about hosts and containers in GKE via defender agents that are installed on the GKE nodes. This story is to test the installation of defenders on the EX GKE cluster\r\n\r\nAcceptance criteria -\r\n * Install twislock defenders on the GKE ex-services-dev cluster nodes\r\n * Successfully communicate from nodes to the console\r\n * Document steps to install defender in docs/guides", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-495", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Install twistlock defender on GKE cluster (non-prod)", "updated": "2019-08-20T16:39:57+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-494": {"assignee": "mereditj", "created": "2019-02-28T15:41:33+11:00", "creator": "rickarm1", "description": "h3. Description\r\nUsers need to authenticate in order to\u00a0gain access\u00a0to the Twistlock console. They can do so using SSO via Azure AD. In GCP this is possible by utilizing OAUTH 2.0 with GSuite being backing identity provider.\u00a0\r\n\r\nScope is limited to ex-services-dev\r\n\r\nh3. Acceptance criteria\r\n * If login is attempted and user does not have an active SSO session they\u00a0should be redirected to Azure AD login page and asked to sign in. Upon successful authentication user should be redirected to the landing page of the console.\r\n * If login is attempted and user has an active SSO session they should be redirected to the twistlock console landing page", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-494", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Twistlock authentication via GSuite SAML (dev)", "updated": "2019-08-20T16:40:00+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-493": {"assignee": "mereditj", "created": "2019-02-28T15:39:44+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-493", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Install Twistlock console in non-prod", "updated": "2019-08-20T16:40:09+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-492": {"assignee": "mereditj", "created": "2019-02-28T15:30:31+11:00", "creator": "rickarm1", "description": "* Story must be completed prior to pulling images into GCR", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-492", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Encrypt Twistlock Token with KMS", "updated": "2019-08-20T16:40:14+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-491": {"assignee": "mereditj", "created": "2019-02-28T15:29:00+11:00", "creator": "rickarm1", "description": "* Implement a toggle in the terraform vars files for each environment to control when twistlock is deployed.\r\n* On in non-prod\r\n* Off in everything else (staging, PPR, prod)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-491", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Implement Feature Toggle for Twistlock ", "updated": "2019-08-20T16:40:12+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-490": {"assignee": "mereditj", "created": "2019-02-28T15:26:52+11:00", "creator": "rickarm1", "description": "* Console Image\r\n* Defender Image\r\n\r\nBoth images are in GCR (non-prod) environment", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-490", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Replicate twistlock images into GCR", "updated": "2019-08-20T16:40:15+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-489": {"assignee": null, "created": "2019-02-28T15:05:06+11:00", "creator": "castanoa", "description": "Currently Ex Services projects creates the topic and give permissions to CSP and other clients to publish to this topic. This implies every time we onboard a new client, we need to add another section in our terraform to give permissions to that service account.\r\n\r\n\u00a0\r\n\r\nChange this so that the topic is created in the Client projects and give Spinnaker service account permissions to subscribe to that topic.\r\n\r\nIn this way, the Ex Service terraform doesn't need to be changed for new Clients of the pipeline.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-489", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Define CS pub sub topic on CSP project", "updated": "2019-08-20T16:38:45+10:00", "estimate": null, "epic_ref": "CNPS-809", "epic_name": "", "diff_to_upstream": []}, "CNPS-488": {"assignee": "mereditj", "created": "2019-02-27T14:50:54+11:00", "creator": "rickarm1", "description": "Spike to understand how we'll implement the twistlock console in the EX VPC", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-488", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "[Spike] Twistlock Analysis", "updated": "2019-08-20T16:40:14+10:00", "estimate": null, "epic_ref": "CNPS-450", "epic_name": "", "diff_to_upstream": []}, "CNPS-487": {"assignee": null, "created": "2019-02-27T14:37:19+11:00", "creator": "vallap", "description": "Security Task:\r\n\r\nWe stop outputting keys in our terraform code for git-sync user private key, and need to rotate the key as it is in bamboo logs.\r\n\r\nFor all our projects in non-prod:\r\n\r\nservices[dev][staging][ppr]\r\nlaunchpad[dev][ppr]\r\n\r\nUpdate the credentials in openshift cluster.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-487", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Rotate Git-Sync credentials in Google Cloud", "updated": "2019-08-20T16:41:47+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-486": {"assignee": null, "created": "2019-02-26T16:56:14+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-486", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Firewall Rule Peering/Connectivity", "updated": "2019-08-20T16:41:46+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-485": {"assignee": "cherukat", "created": "2019-02-26T14:40:26+11:00", "creator": "castanoa", "description": "CSP need to use custom images to run their tests.\r\n\r\nConfigure jenkins to allow using custom made images.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-485", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Allow CSP to use custom Jenkins Agent containers in their jenkinsfile", "updated": "2019-08-20T16:41:45+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-484": {"assignee": "castanoa", "created": "2019-02-26T14:36:48+11:00", "creator": "castanoa", "description": "There were some RBAC settings allowing team members to ssh into hal pod in Jenkins V2.\r\n\r\nThese need to be ported to Jenkins V3", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-484", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spinnaker: Move RBAC roles and bindings for users from V2 to V3", "updated": "2019-08-20T16:40:12+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-483": {"assignee": null, "created": "2019-02-26T12:27:01+11:00", "creator": "rickarm1", "description": "* Think about the optus modems when they're removed in order to access the master node\r\n* Add minimal set that is needed for BAU\r\n* This task needs to be completed prior to dry run of the runsheet in the pre-prod environment ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-483", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Review master authorised network ranges from GKE master", "updated": "2019-08-20T16:40:20+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-482": {"assignee": null, "created": "2019-02-26T10:19:42+11:00", "creator": "rickarm1", "description": "* Execute runsheet tasks to setup pipeline infrastructure in google cloud\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-482", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create Pipeline in Production VPC", "updated": "2019-08-20T16:39:52+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-480": {"assignee": "vallap", "created": "2019-02-22T08:32:43+11:00", "creator": "agarwas2", "description": "Swap certificates signed by internal CA to ones signed by digicert", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-480", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Swap certificates for non production artifactory instances", "updated": "2019-08-20T16:40:41+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-479": {"assignee": "headenj1", "created": "2019-02-21T09:54:54+11:00", "creator": "headenj1", "description": "the network capacity team wants to know that the gitsync instance will not overwhelm the service\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-479", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Estimate the load that gitsync will place on alteon/proxy", "updated": "2019-08-20T16:41:45+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-478": {"assignee": "castanoa", "created": "2019-02-20T11:37:01+11:00", "creator": "castanoa", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-478", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Setup DNS entries for Jenkins (non-prod & prod)", "updated": "2019-08-20T16:39:54+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-477": {"assignee": "mereditj", "created": "2019-02-19T11:07:31+11:00", "creator": "headenj1", "description": "The DNS namespace has been allocated as :\r\n\r\n\u00a0*.gcp.anz &\u00a0 *.gcpnp.anz\r\n\r\nA subzone has been delegated named *.ex.gcp.anz\r\n\r\nwe need to configure artifactory oauth endpoint & callback to reflect this DNS design", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-477", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Configure OAuth2 flow for Artifactory", "updated": "2019-08-20T16:41:44+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-476": {"assignee": "headenj1", "created": "2019-02-19T10:53:55+11:00", "creator": "headenj1", "description": "Currently there is an issue with git repo syncing when the source repo is large. We think there is a web server timeout that triggers resulting in the sync'd repo being empty and then being duplicated with `\u2013prune` which will remove all remote branches.\r\n\r\nThings to investigate:\r\n * Shallow clone\r\n * Modifying web server timeout\r\n * `clone` over `init`?\u00a0", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-476", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Large repos can cause gitsync to remove GCR mirror", "updated": "2019-08-20T16:41:44+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-475": {"assignee": "vallap", "created": "2019-02-18T17:01:07+11:00", "creator": "vallap", "description": "Now that we use provider v2.0.0 we can use included_files to trigger only on certain files change.", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-475", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Done", "summary": "Use included_files for cloudbuild triggers", "updated": "2019-08-20T16:41:43+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-474": {"assignee": "vallap", "created": "2019-02-18T15:06:04+11:00", "creator": "vallap", "description": "Hashicorp released the new version of the terraform provider.\r\n\r\nhttps://www.terraform.io/docs/providers/google/version_2_upgrade.html", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-474", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Done", "summary": "Upgrade to terraform google provider 2.0.0", "updated": "2019-08-20T16:39:49+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-473": {"assignee": "agarwas2", "created": "2019-02-18T14:27:45+11:00", "creator": "castanoa", "description": "Psv2 requires one oracle dependency for its build. There is no reliable public registry with this dependency, so it should be uploaded to our Artifactory instance.\r\n\r\nThe dependency can be obtained from: [https://dcartifactory.service.dev/artifactory/webapp/#/artifacts/browse/tree/General/csp-platform/com/oracle/ojdbc/7]\r\n * Upload the dependency to artifactory in gcp.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-473", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Add Oracle dependencies to Artifactory", "updated": "2019-08-20T16:40:40+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-472": {"assignee": "castanoa", "created": "2019-02-18T14:23:30+11:00", "creator": "castanoa", "description": "* Tests Cloud build can resolve artifactory\r\n * Tests Jenkins can resolve psv2 instance.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-472", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Test DNS configuraiton in services project", "updated": "2019-08-20T16:40:42+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-471": {"assignee": "castanoa", "created": "2019-02-14T16:41:44+11:00", "creator": "castanoa", "description": "We found the problem looking at the logs.", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-471", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Spinnaker hangs when deploying psv2 if authorisation is enabled", "updated": "2019-08-20T16:41:43+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-470": {"assignee": "vallap", "created": "2019-02-13T12:44:23+11:00", "creator": "rickarm1", "description": "* Given the latest finding from Marko (Bitnami), analysis needs to be completed across the pipeline to assess any vulnerabilities in the config/setup", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-470", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Analysis of pipeline vulnerabilities", "updated": "2019-08-20T16:40:11+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-469": {"assignee": "castanoa", "created": "2019-02-13T12:43:11+11:00", "creator": "rickarm1", "description": "* Before we deploy to prod, we can remove any reference to black duck as it's not part of the MVP", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-469", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Remove Black Duck from codebase", "updated": "2019-08-20T16:40:40+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-464": {"assignee": null, "created": "2019-02-13T12:39:31+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-464", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Walk through current RBAC setup for admin access to halyard pod", "updated": "2019-08-20T16:40:08+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-459": {"assignee": "agarwas2", "created": "2019-02-13T12:35:40+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-459", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Reconfirm IP allocation for production", "updated": "2019-08-20T16:40:42+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-458": {"assignee": "vallap", "created": "2019-02-13T12:35:15+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-458", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create prod Terraform variables for layer 4", "updated": "2019-08-20T16:39:55+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-456": {"assignee": "kuhadasr", "created": "2019-02-13T12:33:23+11:00", "creator": "rickarm1", "description": "* Raise change request in service now for the production deployment", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-456", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Raise ServiceNow change request", "updated": "2019-08-20T16:40:43+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-455": {"assignee": "agarwas2", "created": "2019-02-13T12:31:07+11:00", "creator": "rickarm1", "description": "h3. Acceptance Criteria\r\n1. Define which accounts will have what privileges in the production environment for our tool set", "fixVersions": [], "issuetype": "Story", "key": "CNPS-455", "labels": ["post-deployment"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Define Production Groups & Permissions", "updated": "2019-09-17T08:44:32+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-454": {"assignee": "agarwas2", "created": "2019-02-13T12:29:53+11:00", "creator": "rickarm1", "description": "* Validate that the proxy is working and can be used for internet connectivity (Artifactory)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-454", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Configure hairpin proxy for artifactory access to internet", "updated": "2019-08-20T16:40:10+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-453": {"assignee": "mereditj", "created": "2019-02-11T13:40:27+11:00", "creator": "headenj1", "description": "The status page for gitsync shows a subset of the configuration for the syncpairs being synchronised. This display uses the name to uniquely identify each pair. When a repo is synched from one source to multiple destinations then only status for one of the sync pairs is shown. This can be remedied by using the ID in place of the name to uniquely show each syncpair", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-453", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Update gitsync status page to prevent name collisions", "updated": "2019-08-20T16:41:42+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-452": {"assignee": "castanoa", "created": "2019-02-11T10:30:42+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-452", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create FAQ for spinnaker", "updated": "2019-08-20T16:39:56+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-451": {"assignee": "sandhub1", "created": "2019-02-11T10:29:12+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-451", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup V3 Spinnaker using latest version", "updated": "2019-08-20T16:39:51+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-450": {"assignee": null, "created": "2019-02-08T10:47:58+11:00", "creator": "rickarm1", "description": "*Prevent Vulnerabilities, Implement Compliance, and Protect our Clusters*\r\n\r\nFor teams that use Kubernetes security for container orchestration, Twistlock ensures that Kubernetes security scales to meet the needs of ANZ. Twistlock allows you to deploy fearlessly with the assurance that your images and containers are free of vulnerabilities. Twistlock enforces the Kubernetes security settings you need for regulatory compliance, runtime protection, and cloud native firewalls, so that you can secure your environment and networks from active threats. The scope of this epic includes\r\n\r\n* Architecture\r\n* Configuration Automation\r\n* Application Management\r\n* Governance\r\n* Operations\r\n* Application Usage\r\n* Customer onboarding documentation\r\n\r\n*Acceptance Criteria*\r\n\r\n* Complete design document.\r\n* Automated configuration using the API.\r\n* Deployment of twistlock using the spinnaker.\r\n* Automated twistlock operational process.\r\n* Define compliance and policy controls to ensure security best practice\r\n* Self-service onboarding for customers (Tenant project)\r\n\r\n*Dependencies*\r\n\r\n* Security team\r\n* Architecture approval from SDC forum\r\n* Spinnaker\r\n* GCP Native Platforms Team for GCP IAM permission\r\n", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-450", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Epic in Progress", "summary": "Twistlock platform automation", "updated": "2019-11-21T11:52:37+11:00", "estimate": null, "epic_ref": null, "epic_name": "Twistlock platform automation", "diff_to_upstream": []}, "CNPS-449": {"assignee": "headenj1", "created": "2019-02-06T16:27:08+11:00", "creator": "headenj1", "description": "As an operator\r\n\r\nWhen I am tasked with deploying a new version of git-sync to production\r\n\r\nI would like to have a run sheet for the code and\u00a0configuration\r\n\r\nSo that I have a procedure to follow", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-449", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Create run sheets to allow deployment of git-sync into production openshift", "updated": "2019-08-20T16:41:42+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-447": {"assignee": "castanoa", "created": "2019-02-05T16:04:15+11:00", "creator": "castanoa", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-447", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Set up Jenkins to read from Google Source Repository", "updated": "2019-08-20T16:39:48+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-445": {"assignee": "vuksanom", "created": "2019-02-04T16:40:05+11:00", "creator": "vallap", "description": "when deploying spinnaker it fetch a redis image from mirror.gcr.io/bitnami/redis:4.0.11-debian-9\r\n\r\nthis image doesnt exist anymore in mirror.gcr.io\r\n\r\nImport the redis images used by spinnaker in launchpad like we do for blackduck and artifactory", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-445", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "mirror.gcr.io/bitnami/redis:4.0.11-debian-9 doesnt exist anymore", "updated": "2019-08-20T16:39:25+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-444": {"assignee": "sandhub1", "created": "2019-02-01T10:18:07+11:00", "creator": "rickarm1", "description": "* Ensure Jenkins instance can connect to CSP kubernetes cluster", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-444", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Validate Jenkins can connect to CSP K8 cluster", "updated": "2019-08-20T16:41:41+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-443": {"assignee": "agarwas2", "created": "2019-01-31T14:37:39+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-443", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create SSL certificates for production", "updated": "2019-08-20T16:39:54+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-442": {"assignee": "rickarm1", "created": "2019-01-31T14:36:39+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-442", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create windows domain service accounts for production internet access", "updated": "2019-08-20T16:41:41+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-440": {"assignee": "vallap", "created": "2019-01-30T13:41:42+11:00", "creator": "rickarm1", "description": "* Build the pipeline in pre production following the runsheet in preparation for deployment into production", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-440", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Dry run in pre-production environment", "updated": "2019-08-20T16:40:13+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-439": {"assignee": "headenj1", "created": "2019-01-30T08:36:36+11:00", "creator": "headenj1", "description": "Create bamboo pipeline to:\r\n # check preliminaries (master branch is on a commit with new tag that has not been deployed previuosly)\r\n # build a docker image of the gitsync code base\r\n # include the certs to allow it to talk through the alteon proxy\r\n # push the image to openshift with latest tag", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-439", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "create bamboo pipeline for gitsync-code", "updated": "2019-08-20T16:41:40+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-437": {"assignee": "castanoa", "created": "2019-01-29T10:22:57+11:00", "creator": "rickarm1", "description": "As a ANZ employee, I want to login to Jenkins so that I can administer my automated tests\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-437", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup OAUTH for Jenkins", "updated": "2019-08-20T16:41:40+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-436": {"assignee": "headenj1", "created": "2019-01-25T10:34:14+11:00", "creator": "rickarm1", "description": "We need to understand what is required to move gitsync into production & know if the proxy can service the requests (ie. if there is no way to have http2 requests serviced in the production infrastructure then we can\u2019t move to that infrastructure)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-436", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Investigate requirements for moving gitsync to production service", "updated": "2019-08-20T16:39:52+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-435": {"assignee": "castanoa", "created": "2019-01-25T10:08:19+11:00", "creator": "rickarm1", "description": "* Implement controls to ensure Jenkins users have appropriate permissions when using Jenkins/Spinnaker\r\n\r\n\r\nSince Jenkins Gsuite plugin does not have the ability to pull group information from google groups this will not be fixed. ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-435", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Jenkins/Spinnaker Authorisation (user permissions)", "updated": "2019-08-20T16:39:50+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-434": {"assignee": "sandhub1", "created": "2019-01-24T10:03:00+11:00", "creator": "rickarm1", "description": "* Work with CS to create the pre prod environment in the foundations project\r\n* Modify the bamboo plans to cater for the pre prod environment", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-434", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create pre prod environment into foundations", "updated": "2019-08-20T16:40:21+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-433": {"assignee": "castanoa", "created": "2019-01-23T10:44:30+11:00", "creator": "agarwas2", "description": "Currently there is one ingress firewall rule that allows access to private cloud builder access to artifactory and user access to services (spinnaker, artifactory etc)\r\n\r\nThese should be separate firewall rules since the current configuration also opens up port 30334 for user ranges, which is not needed.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-433", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Seperate ingress firewall rules for user and artifactory access", "updated": "2019-08-20T16:40:22+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-432": {"assignee": "headenj1", "created": "2019-01-23T10:21:25+11:00", "creator": "rickarm1", "description": "The spinnaker service account is able to read and write to any namespace in our GKE cluster. We want to restrict spinnaker to its own namespace: csp-spinnaker.\r\n\r\nThis is done by switching from a clusterRoleBinding to a RoleBinding on the csp-spinnaker namespace in the spinnaker helm chart -> RBAC folder. ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-432", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Restrict the service account used by spinnaker", "updated": "2019-08-20T16:40:21+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-431": {"assignee": "headenj1", "created": "2019-01-23T10:17:50+11:00", "creator": "rickarm1", "description": "Suddently, Out of nowhere, the linked repo to bamboo was misconfigured:\r\n\r\nThe linked git repository for the plan pointed to another git repo. WHY??????", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-431", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Investigate why was the ex services bamboo pipeline misconfigured", "updated": "2019-08-20T16:41:38+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-430": {"assignee": null, "created": "2019-01-21T11:35:38+11:00", "creator": "rickarm1", "description": "Right now our nodes can talk to anyone, we need to lock down egress.", "fixVersions": [], "issuetype": "Story", "key": "CNPS-430", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Remove egress allow all from nodes in GKE Cluster", "updated": "2019-09-17T08:41:20+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-428": {"assignee": "sandhub1", "created": "2019-01-21T11:29:30+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-428", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Automate HTTPS configuration for Spinnaker", "updated": "2019-08-20T16:40:24+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-427": {"assignee": "vallap", "created": "2019-01-21T11:28:00+11:00", "creator": "rickarm1", "description": "* Prioritise storage in the terraform code", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-427", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Increase the size of the PVC of Artifactory to 500TB in prod", "updated": "2019-08-20T16:41:39+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-425": {"assignee": "sandhub1", "created": "2019-01-21T11:16:38+11:00", "creator": "rickarm1", "description": "* Determine a better way to generate, encrypt and upload secrets for Artifactory, including DB username/password and master key", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-425", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create script to upload secrets to artifactory", "updated": "2019-08-20T16:40:23+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-423": {"assignee": null, "created": "2019-01-21T11:10:45+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-423", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Closed", "summary": "Move secrets to launchpad project", "updated": "2019-08-20T16:40:25+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-422": {"assignee": null, "created": "2019-01-21T11:10:04+11:00", "creator": "rickarm1", "description": "Move role binding to terraform\r\n\r\nAcceptance criteria \r\n\r\n- Investigate current setup and current state for RBAC permissions provided to cloud build service account in GKE\r\n- Move grant of privilege to terraform ", "fixVersions": [], "issuetype": "Story", "key": "CNPS-422", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Remove dependency from artifactory cloud build to create cluster role binding", "updated": "2019-09-17T08:41:19+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-418": {"assignee": "vallap", "created": "2019-01-21T10:49:56+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-418", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Remove Blackduck purge cloudbuild trigger", "updated": "2019-08-20T16:40:23+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-414": {"assignee": "vallap", "created": "2019-01-18T14:36:40+11:00", "creator": "vallap", "description": "Updated the declaration of gke-cluster and gke-node-pools.\r\n\r\nSee commit https://github.service.anz/ex/engineering-acceleration-infrastructure/commit/a3f55c14deb163ac5df731a3308c83f45fac0a9f", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-414", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Removed deprecation warning from our terraform code", "updated": "2019-08-20T16:41:38+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-412": {"assignee": "castanoa", "created": "2019-01-18T14:19:13+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-412", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Re-create and install certificates (dev)", "updated": "2019-08-20T16:39:29+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-411": {"assignee": "castanoa", "created": "2019-01-18T11:50:13+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-411", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Manually configure OAUTH (dev)", "updated": "2019-08-20T16:39:29+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-410": {"assignee": "castanoa", "created": "2019-01-18T11:48:51+11:00", "creator": "rickarm1", "description": "* Give approved authorisation scope on the FIAT service account (see readme.txt)\r\n* Dependant on cloud services to implement", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-410", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Spinnaker Authorisation (dev)", "updated": "2019-08-20T16:39:28+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-408": {"assignee": "castanoa", "created": "2019-01-18T11:46:40+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-408", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Deploy Spinnaker (dev)", "updated": "2019-08-20T16:39:27+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-407": {"assignee": "castanoa", "created": "2019-01-18T11:08:54+11:00", "creator": "rickarm1", "description": "* Execute CSP Jenkins tests via Spinnaker", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-407", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Integrate Jenkins with CSP Spinnaker cluster", "updated": "2019-08-20T16:39:42+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-406": {"assignee": "castanoa", "created": "2019-01-18T11:07:58+11:00", "creator": "rickarm1", "description": "* Take Mani's configuration and deploy into the GKE staging cluster", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-406", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Deploy Jenkins into staging cluster", "updated": "2019-08-20T16:39:34+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-405": {"assignee": "castanoa", "created": "2019-01-15T10:13:16+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-405", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "[SPIKE] Use cloudbuild instead of Jenkins", "updated": "2019-08-20T16:41:37+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-404": {"assignee": "rickarm1", "created": "2019-01-15T09:44:20+11:00", "creator": "rickarm1", "description": "* Create runsheet template that captures the deployment steps for each tool in the DA pipeline\r\n* Give access to developers to edit the runsheet", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-404", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create runsheet template", "updated": "2019-08-20T16:39:49+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-403": {"assignee": "agarwas2", "created": "2019-01-14T15:43:08+11:00", "creator": "rickarm1", "description": "Acceptance criteria-\r\n\r\n* Logical diagram for pipelines components complete\r\n* IAF pack prepared \r\n* SecPDC endorsement received", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-403", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Take Production Pipeline Design to IAF for approval", "updated": "2019-08-20T16:39:31+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-402": {"assignee": "castanoa", "created": "2019-01-14T15:37:03+11:00", "creator": "rickarm1", "description": "* Use Spinnaker front end UI to configure the tool for CSP use", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-402", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Use Spinnaker UI to configure for CSP", "updated": "2019-08-20T16:39:47+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-401": {"assignee": null, "created": "2019-01-14T15:33:06+11:00", "creator": "rickarm1", "description": "Use master authorised network on the CSP cluster configuration. I.e: CSP master node needs to allow spinnaker to talk to it", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-401", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Terraform - use master authorise network", "updated": "2019-08-20T16:39:47+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-400": {"assignee": null, "created": "2019-01-14T15:17:11+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-400", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup Nodeports for Artifactory", "updated": "2019-08-20T16:39:46+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-397": {"assignee": "castanoa", "created": "2019-01-14T15:13:20+11:00", "creator": "rickarm1", "description": "* Setup remote maven repo cache through mirrors\r\n * Setup remote NPM repository\r\n * Set up proxy\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-397", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Recreate artifactory registries", "updated": "2019-08-20T16:39:45+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-396": {"assignee": null, "created": "2019-01-14T15:06:29+11:00", "creator": "rickarm1", "description": "||Domains||\r\n|{{gcpnp.anz}}|\r\n|{{*.gcpnp.anz}}|\r\n\r\nDocumentation found in codebase readme.txt files", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-396", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Recreate SSL certificate to setup HTTPS", "updated": "2019-08-20T16:39:45+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-395": {"assignee": null, "created": "2019-01-14T15:02:22+11:00", "creator": "rickarm1", "description": "* Config artifactory manually using the UI for OAUTH and proxy login password to access the public internet", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-395", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "OAUTH proxy authorisation", "updated": "2019-08-20T16:39:44+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-394": {"assignee": null, "created": "2019-01-14T14:53:49+11:00", "creator": "rickarm1", "description": "* Re-upload the licence key and master password with encryption by KMS", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-394", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Manual upload of master key + licence", "updated": "2019-08-20T16:39:43+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-393": {"assignee": null, "created": "2019-01-14T14:52:54+11:00", "creator": "rickarm1", "description": "To avoid creating a Public Cloud Sql and then converting it to a private one, we need to create the instance directly as private:\r\n\r\n- Edit terraform code to create a private instance, beware, this will also create a public ip.\r\n- Remove the public ip manually (this is a tech debt from terraform. we can't create an instance private only)\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-393", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Re-create Terraform code to create Private SQL", "updated": "2019-08-20T16:39:32+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-392": {"assignee": "castanoa", "created": "2019-01-14T14:51:52+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-392", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup target CSP cluster", "updated": "2019-08-20T16:39:42+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-391": {"assignee": "castanoa", "created": "2019-01-14T14:50:38+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-391", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Re-create and install certificates (staging)", "updated": "2019-08-20T16:39:41+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-390": {"assignee": "castanoa", "created": "2019-01-14T14:49:52+11:00", "creator": "rickarm1", "description": "* ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-390", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Manually configure OAUTH (staging)", "updated": "2019-08-20T16:39:40+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-389": {"assignee": "castanoa", "created": "2019-01-14T14:42:14+11:00", "creator": "rickarm1", "description": "* configure new OAUTH credentials in the launchpad project instead of \"services\"\r\n\r\n||New Components||\r\n|Client ID|\r\n|Client secret|\r\n|Consent screen|", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-389", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Move OAUTH credentials to launchpad", "updated": "2019-08-20T16:39:34+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-388": {"assignee": "castanoa", "created": "2019-01-14T14:40:52+11:00", "creator": "rickarm1", "description": "* Give approved authorisation scope on the FIAT service account (see readme.txt)\r\n* Dependant on cloud services to implement", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-388", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Spinnaker Authorisation (staging)", "updated": "2019-08-20T16:39:28+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-387": {"assignee": "castanoa", "created": "2019-01-14T14:38:41+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-387", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Deploy Spinnaker (staging)", "updated": "2019-08-20T16:39:40+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-386": {"assignee": "vuksanom", "created": "2019-01-14T14:38:08+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-386", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Disable authorisation in HELM chart", "updated": "2019-08-20T16:39:33+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-385": {"assignee": "castanoa", "created": "2019-01-14T14:36:57+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-385", "labels": ["Layer3"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Provision internal IP's", "updated": "2019-08-20T16:39:39+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-384": {"assignee": null, "created": "2019-01-14T14:03:37+11:00", "creator": "rickarm1", "description": "* Try running code \"as is\" to test if it works before attempting reserving the IP's using the steps below:\r\n\r\nh2. Steps\r\n-----\r\n* Remove reserved IP's declaration from Terraform code\r\n* Deploy HELM chart with the internal load balancer \r\n* Re-reserve the IP address auto assigned by google for those internal load balancer resources ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-384", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Provision new internal IP for Artifactory", "updated": "2019-08-20T16:39:38+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-383": {"assignee": "sandhub1", "created": "2019-01-14T13:57:11+11:00", "creator": "rickarm1", "description": "* Remove unnecessary firewall rule that connects Spinnaker nodes to the GKE master", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-383", "labels": ["Layer3"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Delete Egress firewall rules from Layer3", "updated": "2019-08-20T16:39:30+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-382": {"assignee": "vallap", "created": "2019-01-14T13:55:51+11:00", "creator": "rickarm1", "description": "* Check for any hard coded values or IP addresses", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-382", "labels": ["Layer3"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Review Layer 3 Infra-code", "updated": "2019-08-20T16:39:33+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-381": {"assignee": "agarwas2", "created": "2019-01-14T13:55:11+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-381", "labels": ["Layer3"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Review Firewall Rules on prem to GCP", "updated": "2019-08-20T16:39:25+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-380": {"assignee": null, "created": "2019-01-14T13:43:41+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-380", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Re-create and configure GitSync for new project", "updated": "2019-08-20T16:39:37+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-379": {"assignee": null, "created": "2019-01-14T13:43:06+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-379", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Execute Bamboo Plans", "updated": "2019-08-20T16:39:37+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-378": {"assignee": null, "created": "2019-01-14T13:42:41+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-378", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Update Bamboo plans with new credentials", "updated": "2019-08-20T16:39:35+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-377": {"assignee": "sandhub1", "created": "2019-01-14T13:41:41+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-377", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Rename SVC service project to \"dev\"", "updated": "2019-08-20T16:39:31+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-376": {"assignee": "headenj1", "created": "2019-01-14T13:40:49+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-376", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Re-create Terraform code to create private SQL", "updated": "2019-08-20T16:39:36+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-375": {"assignee": "vallap", "created": "2019-01-14T13:38:04+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-375", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Re-create launchpad project in GCP", "updated": "2019-08-20T16:39:26+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-373": {"assignee": "headenj1", "created": "2018-12-20T16:28:36+11:00", "creator": "headenj1", "description": "Version 1.11.1 has been released.\r\n\r\nrelease to NP by committing to the master branch\r\n\r\nrelease to STG by adding a tag to the commit that released to NP", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-373", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Update Spinnaker to 1.11.1", "updated": "2019-08-20T16:40:33+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-372": {"assignee": "agarwas2", "created": "2018-12-20T14:20:54+11:00", "creator": "agarwas2", "description": "Remove secrets creation from launchpad project\r\nMove secrets for jenkins to secrets.tf", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-372", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Refactor secrets creation (managing secrets)", "updated": "2019-08-20T16:40:34+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-368": {"assignee": "rickarm1", "created": "2018-12-20T11:29:40+11:00", "creator": "rickarm1", "description": "- Manually create a change record in service now to log production changes", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-368", "labels": ["Productionisation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Change records in ServiceNow for production deployment", "updated": "2019-08-20T16:40:35+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-366": {"assignee": "mereditj", "created": "2018-12-20T11:28:56+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-366", "labels": ["Productionisation"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Enhance Bamboo Pipeline to deploy to production", "updated": "2019-08-20T16:40:20+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-337": {"assignee": null, "created": "2018-12-20T09:21:07+11:00", "creator": "rickarm1", "description": "*Deployment of the initial pipeline infrastructure into the Google Cloud Platform inside ANZ's VPC - utilising google's native cloud services.*", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-337", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Backlog", "summary": "Goto Prod - Deploy pipeline MVP to production", "updated": "2019-03-26T00:07:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "Goto Prod - Deploy pipeline MVP to production", "diff_to_upstream": []}, "CNPS-335": {"assignee": "vallap", "created": "2018-12-19T15:18:32+11:00", "creator": "vallap", "description": "removed unused variables, etc etc.", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-335", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "cleanup launchpad project", "updated": "2019-08-20T16:41:36+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-333": {"assignee": "headenj1", "created": "2018-12-18T10:44:14+11:00", "creator": "sandhub1", "description": "Upgrade to version 1.11 - https://www.spinnaker.io/community/releases/versions/\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-333", "labels": ["S"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sandhub1", "status": "Story Done", "summary": "Upgrade Spinnaker Version ", "updated": "2019-08-20T16:40:34+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-331": {"assignee": "biggsr", "created": "2018-12-14T11:30:06+11:00", "creator": "rickarm1", "description": "* spring-milestone\r\n * sbos-csp-libs\r\n * plugins-release\r\n * csp-platform", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-331", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Mirror on-prem Artifactory repository names", "updated": "2019-08-20T16:41:35+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-329": {"assignee": "sandhub1", "created": "2018-12-13T11:16:41+11:00", "creator": "sandhub1", "description": "CSP will need access to the csp-spinnaker namespace in our cluster in order\u00a0to update configuration relating to their cluster.\r\n\r\nUse case at this point is csp being able to configure namespace/service account relationships for their cluster, for deployment purposes.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-329", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "sandhub1", "status": "Story Done", "summary": "Provide CSP access to our np cluster via RBAC ", "updated": "2019-08-20T16:40:32+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-328": {"assignee": "glewr", "created": "2018-12-13T10:52:13+11:00", "creator": "rickarm1", "description": "* Find out what the process to\u00a0approve the pipeline design is", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-328", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Confirm pipeline design process", "updated": "2019-08-20T16:41:35+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-327": {"assignee": "biggsr", "created": "2018-12-12T11:11:01+11:00", "creator": "rickarm1", "description": "* Is it possible to execute cloudbuild triggers within a spinnaker pipeline", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-327", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "[SPIKE] Investigate cloudbuild stage in spinnaker for automated tests", "updated": "2019-08-20T16:41:34+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-326": {"assignee": "castanoa", "created": "2018-12-12T11:04:02+11:00", "creator": "rickarm1", "description": "* Setup and install Jenkins to run CSP test scripts\r\n* Configure Spinnaker to use the Jenkins instance\r\n* Demonstrate a pipeline that runs a Jenkins test script from Spinnaker - Jenkins needs to connect to the PSV2 service\r\n* Install plugins\r\n\r\n||Plugins required||\r\n|Test passed/test failed|\r\n|YAN|\r\n|Node|\r\n|Spinnaker hook for performance testing|\r\n|K6 load testing tool|", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-326", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup Jenkins instance for CSP/Spinnaker", "updated": "2019-08-20T16:41:36+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-324": {"assignee": "rickarm1", "created": "2018-12-10T11:26:57+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-324", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Done", "summary": "Retro Action: Demo video of pipeline", "updated": "2019-08-20T16:41:34+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-323": {"assignee": "rickarm1", "created": "2018-12-07T15:27:09+11:00", "creator": "vallap", "description": "Sick of CC's everyone, and also we want people to contact us using this email address. ", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-323", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Create a mailing list for ex-pipeline to receive and send email.", "updated": "2019-08-20T16:40:28+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-321": {"assignee": "vallap", "created": "2018-12-06T11:45:00+11:00", "creator": "rickarm1", "description": "Cloud services\u00a0are currently working on private cloud DNS. EX will be the 1st customer to trial the new DNS. Once CS has completed this work (week ending 7/11/12) we need to validate the connection to DNS.\u00a0\r\n * Speak with Andre and Thin (Cloud Services) to test private DNS.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-321", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Validate Cloud Services Private DNS in EX projects", "updated": "2019-08-20T16:40:35+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-320": {"assignee": "rickarm1", "created": "2018-12-06T11:27:45+11:00", "creator": "rickarm1", "description": "This connectivity will be the one used\u00a0for\u00a0Artifactory and black duck to connect to the internet\r\n\r\nTest if these tools can connect to the internet from ANZ. We can reuse the pattern that Open Banking is using for this. The code can be found here [here|https://github.service.anz/ob/conn-tester].\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-320", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Test connectivity from a pod in GKE back to B2B proxy", "updated": "2019-08-20T16:40:30+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-318": {"assignee": "headenj1", "created": "2018-12-06T10:37:50+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-318", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Refactor ANZ EX codebase for Spinnaker", "updated": "2019-08-20T16:40:33+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-317": {"assignee": "vallap", "created": "2018-12-04T15:29:58+11:00", "creator": "rickarm1", "description": "* Will give us the capability to create a \"demo\"\u00a0environment\r\n * Will make going to production easier\r\n* Break out a new story for upgrade of artifactory", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-317", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Refactor ANZ EX codebase for Artifactory", "updated": "2019-08-20T16:39:26+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-315": {"assignee": "vallap", "created": "2018-12-04T14:07:09+11:00", "creator": "rickarm1", "description": "* Deploy solution #3 inside ANZ\u00a0dev and staging\u00a0kubernetes\u00a0cluster\r\n * Code is EX repository\r\n * Creation of the kubernetes resources should go through bamboo", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-315", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Connect to GKE from ANZ machine using private/internal IP", "updated": "2019-08-20T16:41:33+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-314": {"assignee": "biggsr", "created": "2018-12-03T11:20:38+11:00", "creator": "rickarm1", "description": "* Setup build triggers for Dockerfiles\r\n * Setup build triggers for PSV2\r\n ** Update PSV2\u00a0 cloudbuild.yaml (remove references to launchpad)\r\n ** Push docker images to csp registry\r\n * Remove references to launchpad in psv2 chart", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-314", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Move CSP build pipeline from launchpad to CSP project", "updated": "2019-08-20T16:41:32+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-312": {"assignee": "headenj1", "created": "2018-11-30T14:31:47+11:00", "creator": "vallap", "description": "When running helm install with spinnaker we would like to add a new step at the end of cloudbuild.yaml to retrieve the success or failure of hal deploy apply command.\r\n\r\nSomething like this should do the trick:\r\n\r\n$ kubectl wait --for=condition=complete --timeout=30s -n csp-spinnaker anz-ex-services-stg-2c905b-csp-spinnaker-install-using-hal\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-312", "labels": ["S"], "lastViewed": null, "priority": "Could", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Add a final step to spinnaker helm install", "updated": "2019-08-20T16:40:36+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-308": {"assignee": "mereditj", "created": "2018-11-28T16:43:18+11:00", "creator": "rickarm1", "description": "- How do we manage developer/admin for Spinnaker membership", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-308", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Define a model for Spinnaker AD groups", "updated": "2019-08-20T16:39:24+10:00", "estimate": null, "epic_ref": "CNPS-337", "epic_name": "", "diff_to_upstream": []}, "CNPS-307": {"assignee": "biggsr", "created": "2018-11-28T16:42:53+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-307", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Extract PSV2 Cloud Build triggers out of EX launchpad into bank experience", "updated": "2019-08-20T16:40:37+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-297": {"assignee": "agarwas2", "created": "2018-11-28T16:35:46+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-297", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create Service Account - Artifactory Proxy", "updated": "2019-08-20T16:40:36+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-296": {"assignee": "agarwas2", "created": "2018-11-28T16:34:44+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-296", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create Service Account - Black Duck Proxy", "updated": "2019-08-20T16:40:37+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-280": {"assignee": "vuksanom", "created": "2018-11-28T16:19:19+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-280", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Setup DNS entries for Artifactory (non-prod)", "updated": "2019-08-20T16:39:51+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-278": {"assignee": null, "created": "2018-11-28T16:18:31+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-278", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Design and approval - Prod to non-prod", "updated": "2019-08-20T16:41:50+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-275": {"assignee": "glewr", "created": "2018-11-28T16:15:09+11:00", "creator": "rickarm1", "description": "* Figure out a reliable solution for the internal GKE to internal master IP", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-275", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Internal GKE to internal master IP connectivity", "updated": "2019-08-20T16:40:56+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-274": {"assignee": null, "created": "2018-11-28T16:12:28+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-274", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Prod to non-prod connectivity - Spinnaker to GKE master connectivity", "updated": "2019-08-20T16:41:49+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-272": {"assignee": "castanoa", "created": "2018-11-27T16:32:54+11:00", "creator": "castanoa", "description": "[https://www.spinnaker.io/guides/user/kubernetes-v2/traffic-management/#you-must-use-replica-sets]", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-272", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Use replica set instead of deployment for blue/green deployments", "updated": "2019-08-20T16:40:28+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-265": {"assignee": "biggsr", "created": "2018-11-23T16:02:42+11:00", "creator": "castanoa", "description": "Simplify deployment pipeline by using Heml to template app, config and secrets deployments.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-265", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Use Helm to deploy PSV2 app, config and secrets in Spinnaker", "updated": "2019-08-20T16:40:26+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-264": {"assignee": "headenj1", "created": "2018-11-23T10:20:39+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-264", "labels": ["S"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create DC Artifactory repo for EX", "updated": "2019-08-20T16:40:31+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-262": {"assignee": "vallap", "created": "2018-11-22T17:58:05+11:00", "creator": "vallap", "description": "Spinnaker metrics and logs should be ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-262", "labels": ["S", "Should"], "lastViewed": null, "priority": "Should", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Configure the Spinnaker monitoring daemon for Stackdriver", "updated": "2019-08-20T16:41:31+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-260": {"assignee": "sandhub1", "created": "2018-11-22T14:40:44+11:00", "creator": "rickarm1", "description": "ADR:\u00a00015-use-kubectl-apply-instead-of-helm-install-tiller", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-260", "labels": ["TechDebt"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Tech Debt - Use HELM template instead of HELM with Tiller", "updated": "2019-08-20T16:40:43+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-258": {"assignee": "biggsr", "created": "2018-11-22T10:14:08+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-258", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Spinnaker wont re-deploy if a new image is generated", "updated": "2019-08-20T16:41:30+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-257": {"assignee": "glewr", "created": "2018-11-20T13:35:03+11:00", "creator": "glewr", "description": "The recommendation in PIPS-233 needs to be endorsed by the various governance communities at ANZ before it can be implemented.\r\n\r\nThe pattern we are seeking approval for is KDD-003", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-257", "labels": [], "lastViewed": null, "priority": "Critical", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Get AD for communication pattern between prod and non prod shared vpc approved for deployment", "updated": "2019-08-20T16:40:50+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-254": {"assignee": "agarwas2", "created": "2018-11-19T13:55:35+11:00", "creator": "rickarm1", "description": "To enable docker registries in artifactory TLS certificates for artifactory have to include subdomains in SANs which can uniquely address a given registry. TLS certificates from digicert today do not include these SANs and have to be reissued from Digicert. \r\n\r\n*Non production - *\r\n\r\nhub.artifactory-dev.ex.gcpnp.anz\r\ngcr.artifactory-dev.ex.gcpnp.anz\r\nregistry.artifactory-dev.ex.gcpnp.anz\r\nomni.artifactory-dev.ex.gcpnp.anz\r\ninsto.artifactory-dev.ex.gcpnp.anz\r\ndata.artifactory-dev.ex.gcpnp.anz\r\noz.artifactory-dev.ex.gcpnp.anz\r\nartifactory-dev.ex.gcpnp.anz\r\nhub.artifactory-stg.ex.gcpnp.anz\r\ngcr.artifactory-stg.ex.gcpnp.anz\r\nregistry.artifactory-stg.ex.gcpnp.anz\r\nomni.artifactory-stg.ex.gcpnp.anz\r\ninsto.artifactory-stg.ex.gcpnp.anz\r\ndata.artifactory-stg.ex.gcpnp.anz\r\noz.artifactory-stg.ex.gcpnp.anz\r\nartifactory-stg.ex.gcpnp.anz\r\nhub.artifactory.gcpnp.anz\r\ngcr.artifactory.gcpnp.anz\r\nregistry.artifactory.gcpnp.anz\r\nomni.artifactory.gcpnp.anz\r\ninsto.artifactory.gcpnp.anz\r\ndata.artifactory.gcpnp.anz\r\noz.artifactory.gcpnp.anz\r\nartifactory.gcpnp.anz\r\n\r\n\r\n*Production - *\r\n\r\nhub.artifactory.gcp.anz\r\ngcr.artifactory.gcp.anz\r\nregistry.artifactory.gcp.anz\r\nomni.artifactory.gcp.anz\r\ninsto.artifactory.gcp.anz\r\ndata.artifactory.gcp.anz\r\noz.artifacotry,gcp.anz\r\nplatform.artifactory.gcp.anz\r\nartifactory.gcp.anz\r\n\r\nAcceptance criteria - \r\n\r\nRedeploy Artifactory with new certificates\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-254", "labels": [], "lastViewed": null, "priority": "Minor", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "TLS Certificates for Docker in Artifactory", "updated": "2019-08-20T16:40:06+10:00", "estimate": null, "epic_ref": "CNPS-553", "epic_name": "", "diff_to_upstream": []}, "CNPS-252": {"assignee": "agarwas2", "created": "2018-11-19T13:49:37+11:00", "creator": "rickarm1", "description": "As with maven and NPM, artifactory can serve as a proxy to remote docker repositories so that teams in ANZ can utilise docker images in their build processes. This story is to configure the below remote docker repositories in GCP artifactory instance\r\n\r\nhub.artifactory.gcp.anz - docker hub\r\ngcr.artifactory.gcp.anz - Google Container Registry\r\n\r\nAcceptance criteria-\r\n\r\nAble to connect to hub.artifactory.gcp.anz from ANZ laptop and pull an image (nginx:latest)\r\nAble to connect to gcr.artifactory.gcp.anz from ANZ laptop and pull an image (nginx:latest)\r\n\r\n\r\n\r\n\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-252", "labels": [], "lastViewed": null, "priority": "Minor", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Create remote docker registry in Artifactory", "updated": "2019-08-20T16:40:08+10:00", "estimate": null, "epic_ref": "CNPS-553", "epic_name": "", "diff_to_upstream": []}, "CNPS-251": {"assignee": "sandhub1", "created": "2018-11-19T13:47:22+11:00", "creator": "rickarm1", "description": "* Implement fine grained controls for authenticated users", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-251", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "[SPIKE] Authorisation controls & permissions", "updated": "2019-08-20T16:41:31+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-248": {"assignee": "sandhub1", "created": "2018-11-15T14:50:45+11:00", "creator": "rickarm1", "description": "* Review release notes for any major changes (current version vs new version)\r\n * Document the process to upgrade GKE so that we can use it for next time\r\n ** Are all services available during the upgrade?\r\n ** Downtime (if any) during the upgrade?\r\n ** How long does the upgrade take?\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-248", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Upgrade current GKE version in non-prod", "updated": "2019-08-20T16:40:51+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-246": {"assignee": "sandhub1", "created": "2018-11-14T15:23:20+11:00", "creator": "rickarm1", "description": "* Tools\r\n * Configuration", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-246", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Done", "summary": "Retro Action: List tools/config that we require access to", "updated": "2019-08-20T16:40:39+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-245": {"assignee": "agarwas2", "created": "2018-11-14T15:22:05+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-245", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Done", "summary": "Retro Action: Improve the desk arrangement", "updated": "2019-08-20T16:40:39+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-244": {"assignee": "agarwas2", "created": "2018-11-14T15:21:12+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-244", "labels": ["RetroAction"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "rickarm1", "status": "Done", "summary": "Retro Action: Get team members access to G suite on the ANZ network", "updated": "2019-08-20T16:40:38+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-242": {"assignee": "castanoa", "created": "2018-11-14T11:44:25+11:00", "creator": "rickarm1", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-242", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "rickarm1", "status": "Story Done", "summary": "Pull NPM and Maven packages from private cloud builder", "updated": "2019-08-20T16:40:56+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-236": {"assignee": null, "created": "2018-11-12T11:59:19+11:00", "creator": "vallap", "description": "We currently have three different node pools:\r\n\u00a0\r\n * services\r\n * spinnaker\u00a0\r\n * default-node pool\r\n\r\nis this still relevant? Do we need three different nodes pool or can we just use a default node pool?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-236", "labels": ["tech_debt"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Closed", "summary": "Evaluate node pool configuration", "updated": "2019-08-20T16:40:19+10:00", "estimate": null, "epic_ref": "CNPS-554", "epic_name": "", "diff_to_upstream": []}, "CNPS-235": {"assignee": "vallap", "created": "2018-11-09T16:26:07+11:00", "creator": "vallap", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-235", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Migrate PSV2 Cloudbuild Pipeline to PRIVATE Cloudbuild", "updated": "2019-08-20T16:41:30+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-233": {"assignee": "glewr", "created": "2018-11-09T14:43:16+11:00", "creator": "agarwas2", "description": "Spinnaker in the production shared VPC will need the ability to deploy services into GKE clusters in the production and non production shared VPC. This story is to establish the communication pattern between shared VPCs with associated controls that need to be put into place. \r\n\r\nhttps://cloud.google.com/vpc/docs/vpc-peering#shared_vpc\r\n\r\nFormat - https://confluence.service.anz/display/AFSTB/KDD-001+Blackduck+communication+to+Knowledge+Hub", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-233", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create recommendation for communication between production and non production shared VPC", "updated": "2019-08-20T16:40:31+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-230": {"assignee": null, "created": "2018-11-08T15:41:25+11:00", "creator": "agarwas2", "description": "*Setup and configuration of the foundational pipeline infrastructure so that the bank can utilise google cloud services.*", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-230", "labels": [], "lastViewed": "2019-11-22T09:44:20.173000+11:00", "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Epic Done", "summary": "Foundation Infrastructure - Establishing the core foundations to enable pipeline infrastructure", "updated": "2019-06-17T20:43:27+10:00", "estimate": null, "epic_ref": null, "epic_name": "Foundation Infrastructure - establishing the core foundations to enable GCP pipeline infrastructure at ANZ", "diff_to_upstream": []}, "CNPS-228": {"assignee": null, "created": "2018-11-08T15:40:29+11:00", "creator": "agarwas2", "description": "*Secure storage of the banks digital artifacts to minimise digital security threats.*\r\n\r\nArtifactory is tool that is used in the Delivery Acceleration CI/CD pipeline to securely store binary files that have been developed by squads at ANZ.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-228", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "Artifactory - Deliver initial version of secure digital artifact storage and retrieval ", "updated": "2019-03-26T00:06:51+11:00", "estimate": null, "epic_ref": null, "epic_name": "Artifactory - Deliver initial version of secure digital artifact storage and retrieval ", "diff_to_upstream": []}, "CNPS-226": {"assignee": "agarwas2", "created": "2018-11-08T15:25:47+11:00", "creator": "castanoa", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-226", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Update PSV2 build to use gcr.io base images", "updated": "2019-08-20T16:41:06+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-225": {"assignee": "castanoa", "created": "2018-11-08T13:47:34+11:00", "creator": "castanoa", "description": "A new repo for PSV2 was created for git sync. Create new build triggers in this repo.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-225", "labels": [], "lastViewed": null, "priority": "Critical", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Update cloud build triggers for PSV2", "updated": "2019-08-20T16:41:05+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-224": {"assignee": "castanoa", "created": "2018-11-08T11:35:00+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-224", "labels": ["S", "Must", "CSP"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Update cloud build triggers to point to new PSV2 repository", "updated": "2019-08-20T16:40:54+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-223": {"assignee": "vallap", "created": "2018-11-08T11:33:14+11:00", "creator": "agarwas2", "description": "To enable tactical disaster recovery ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-223", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Enable versioning of spinnaker configuration and existing pipeline configs", "updated": "2019-08-20T16:40:55+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-221": {"assignee": "castanoa", "created": "2018-11-08T11:27:04+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-221", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create Java cloud builder with ANZ test root in Java keystore", "updated": "2019-08-20T16:40:53+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-220": {"assignee": "vallap", "created": "2018-11-08T10:40:58+11:00", "creator": "vallap", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-220", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Mandatory Learning Fun", "updated": "2019-08-20T16:41:29+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-218": {"assignee": "agarwas2", "created": "2018-11-08T10:33:22+11:00", "creator": "castanoa", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-218", "labels": ["gitsync", "CSP"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Add OAuth access token for PSV2 repo", "updated": "2019-08-20T16:41:26+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-216": {"assignee": "vallap", "created": "2018-11-07T17:05:11+11:00", "creator": "agarwas2", "description": "Currently two firewall resources are created for np and staging projects for spinnaker resulting in a total of 4 resources created (of which 2 are superfluous). ", "fixVersions": ["0.1"], "issuetype": "Bug", "key": "CNPS-216", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Fix firewall rule for spinnaker", "updated": "2019-08-20T16:40:55+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-214": {"assignee": "vuksanom", "created": "2018-11-07T11:24:25+11:00", "creator": "agarwas2", "description": "* Manually upload NPM dependencies into Artifactory infrastructure", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-214", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Upload PSV2 NPM dependencies into Artifactory", "updated": "2019-08-20T16:40:53+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-213": {"assignee": "sandhub1", "created": "2018-11-07T11:23:57+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-213", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Setup NPM repository in Artifactory", "updated": "2019-08-20T16:40:49+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-212": {"assignee": "castanoa", "created": "2018-11-07T11:22:58+11:00", "creator": "agarwas2", "description": "* Manually upload Java (Maven) dependencies into Artifactory infrastructure", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-212", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Upload PSV2 Maven dependencies into Artifactory", "updated": "2019-08-20T16:40:49+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-211": {"assignee": "vallap", "created": "2018-11-07T11:22:35+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-211", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create new TLS certificates for GCP-NP.anz", "updated": "2019-08-20T16:40:47+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-210": {"assignee": "sandhub1", "created": "2018-11-07T11:21:05+11:00", "creator": "agarwas2", "description": "We will use the '--set-file' functionality in helm to populate an environment variable for our db password.\r\n\r\nThis will ensure that only the name of the password file is visible during builds, not its content.\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-210", "labels": ["S"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Set password using a file when provisioning artifactory", "updated": "2019-08-20T16:41:02+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-209": {"assignee": "sandhub1", "created": "2018-11-07T11:20:41+11:00", "creator": "agarwas2", "description": "Use common storage bucket for secrets in launchpad project.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-209", "labels": ["S"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Move encrypted Artifactory secrets to ex secrets bucket", "updated": "2019-08-20T16:41:02+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-208": {"assignee": "vuksanom", "created": "2018-11-07T11:20:11+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-208", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Setup Maven repo in Artifactory", "updated": "2019-08-20T16:40:59+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-207": {"assignee": "headenj1", "created": "2018-11-05T10:45:50+11:00", "creator": "headenj1", "description": "The secret\u00a0that was being\u00a0used by gitsync to replicate back to ex-launchpad GitHub enterprise repo has been removed from the repo access list. A new gihub app was created and needs to be added to the open shift configuration", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-207", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "create new gitsync secret token for launchpad", "updated": "2019-08-20T16:40:46+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-205": {"assignee": "sandhub1", "created": "2018-11-02T14:14:04+11:00", "creator": "sandhub1", "description": "Updating\u00a0GitSync configuration to include new credentials for the Source Repository in Open Banking.\u00a0", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-205", "labels": ["S", "Must"], "lastViewed": null, "priority": "Critical", "project": "CNPS", "reporter": "sandhub1", "status": "Done", "summary": "Update credentials in GitSync for Open Banking", "updated": "2019-08-20T16:40:46+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-203": {"assignee": "headenj1", "created": "2018-11-01T15:13:15+11:00", "creator": "agarwas2", "description": "* When we push to github, then the configuration file gets updated in Open Shift", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-203", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": " Get build and deploy of the gitsync agent into the Bamboo pipeline", "updated": "2019-08-20T16:40:45+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-201": {"assignee": "biggsr", "created": "2018-10-31T16:15:14+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-201", "labels": ["Should"], "lastViewed": null, "priority": "Should", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Define namespace strategy", "updated": "2019-08-20T16:41:32+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-200": {"assignee": "agarwas2", "created": "2018-10-31T15:45:49+11:00", "creator": "agarwas2", "description": "* Setup some time to run through the GitSync issues that the team is facing", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-200", "labels": ["RetroAction"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Done", "summary": "Retro Action: Setup GitSync discussion", "updated": "2019-08-20T16:41:28+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-199": {"assignee": "agarwas2", "created": "2018-10-31T15:45:04+11:00", "creator": "agarwas2", "description": "* Map the experience and create a story to address proxy issues", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-199", "labels": ["RetroAction"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Done", "summary": "Retro Action: Create a story to remediate proxy issues", "updated": "2019-08-20T16:41:28+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-198": {"assignee": "headenj1", "created": "2018-10-31T15:43:42+11:00", "creator": "agarwas2", "description": "* Collate a list of websites and tools that we need access to and raise with Rakesh", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-198", "labels": ["RetroAction"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Done", "summary": "Retro Action: Access to sites & tools", "updated": "2019-08-20T16:41:27+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-197": {"assignee": "agarwas2", "created": "2018-10-31T15:41:54+11:00", "creator": "agarwas2", "description": "* Book a workshop post MVP to refocus on the next horizon and identify where we can improve in the next iteration of the pipeline", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-197", "labels": ["RetroAction"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Done", "summary": "Retro Action: Workshop for v2 - Post Mortem", "updated": "2019-08-20T16:40:38+10:00", "estimate": null, "epic_ref": "CNPS-196", "epic_name": "", "diff_to_upstream": []}, "CNPS-196": {"assignee": "agarwas2", "created": "2018-10-31T15:39:14+11:00", "creator": "agarwas2", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CNPS-196", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Epic in Progress", "summary": "Retro Actions", "updated": "2019-11-22T10:55:39+11:00", "estimate": null, "epic_ref": null, "epic_name": "Retro Actions", "diff_to_upstream": []}, "CNPS-191": {"assignee": "vallap", "created": "2018-10-30T10:41:25+11:00", "creator": "vallap", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-191", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Connect to spinnaker UI via HTTPS, using a self-signed certs", "updated": "2019-08-20T16:41:19+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-188": {"assignee": "sandhub1", "created": "2018-10-29T14:15:56+11:00", "creator": "castanoa", "description": "* Setup google stack driver monitoring tool for private clusters\r\n ** Application Logs\r\n ** Container Metrics (Basic)\r\n ** Out of the box StackDriver functionality", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-188", "labels": ["S", "Must", "Monitoring"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Migrating to Kubernetes Monitoring", "updated": "2019-08-20T16:40:51+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-186": {"assignee": "castanoa", "created": "2018-10-29T14:10:44+11:00", "creator": "castanoa", "description": "* Includes:\r\n\r\n ** DB credentials\r\n ** Certificates", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-186", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Implement secret management pattern for PSV2", "updated": "2019-08-20T16:41:05+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-184": {"assignee": "headenj1", "created": "2018-10-29T10:10:39+11:00", "creator": "headenj1", "description": "**Gitsync crashed over the weekend. The logs on Monday were suggestive of a similar crash that had happened, for which a code update had been written but not deployed. On Friday the newer version of the code was published to Openshift but had not yet been used by the running configuration. The application was restarted on Monday with the new code release and has not as yet crashed in the same manner as over the weekend. There were some other unrelated changes made which required a configuration restart (the service account for ob stg was deleted and recreated)\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-184", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Investigate GitSync issues", "updated": "2019-08-20T16:40:45+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-182": {"assignee": "vallap", "created": "2018-10-29T09:53:17+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-182", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "TLS Certificates", "updated": "2019-08-20T16:40:58+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-177": {"assignee": "agarwas2", "created": "2018-10-25T15:43:13+11:00", "creator": "agarwas2", "description": "* Define the strategy for managing *<secrets>* in Black Duck\r\n\r\n||secrets||\r\n|Username|\r\n|Password|\r\n|Master key|\r\n|Licence|", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-177", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Define Secret Management Strategy for tech stack", "updated": "2019-08-20T16:40:44+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-174": {"assignee": "mereditj", "created": "2018-10-25T15:06:09+11:00", "creator": "headenj1", "description": "* Ensure gitsync logging is turned on and is capturing logs that can be viewed by the team", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-174", "labels": ["Should", "gitsync"], "lastViewed": null, "priority": "Minor", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Create logging for gitsync services", "updated": "2019-08-20T16:39:53+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-173": {"assignee": "vuksanom", "created": "2018-10-25T14:20:53+11:00", "creator": "agarwas2", "description": "- Get TLS cert\r\n- Setup in private cloud build\r\n- Setup for web service\r\n- Containers trust ANZ certs (new story req)", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-173", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "TLS Certificates", "updated": "2019-08-20T16:40:59+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-171": {"assignee": null, "created": "2018-10-24T14:37:50+11:00", "creator": "agarwas2", "description": "*Onboarding the CSP platform to use the CI/CD pipeline in GCP to deliver their services to production. The first customer in the bank to utilise the pipeline.*", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-171", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Backlog", "summary": "CSP - Onboard customer service platform to the initial version of the CI/CD pipeline", "updated": "2019-06-17T20:40:57+10:00", "estimate": null, "epic_ref": null, "epic_name": "CSP - Onboard customer service platform to the initial version of the GKE pipeline", "diff_to_upstream": []}, "CNPS-165": {"assignee": "sandhub1", "created": "2018-10-24T13:40:31+11:00", "creator": "agarwas2", "description": "- Permissions for ANZ user accounts\r\n - Define permissions, who should see/be able to do what\r\n - Implement permissions", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-165", "labels": ["Must", "L"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Authorization for Spinnaker users", "updated": "2019-08-20T16:40:29+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-163": {"assignee": "vallap", "created": "2018-10-24T11:05:08+11:00", "creator": "vallap", "description": "In order to be consistent with our helm installation we need to import the helm chart and start customising it if necessary. As we already experienced with Artifactory, the open source helm chart for services doesn't mean it suits our unique setup (shared vpc, private GKE, etc)\r\n\r\n\u00a0", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-163", "labels": ["TechDebt", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "[TechDebt] Refactor Spinnaker Helm Installation", "updated": "2019-08-20T16:41:17+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-161": {"assignee": "hutchisc", "created": "2018-10-24T09:38:14+11:00", "creator": "headenj1", "description": "We would like to get kubernetes-level events for pod changes into splunk so that we can get an idea of the health of the gitsync pod.\r\n\r\nThis is meant to be available as an eventrouter is running in the clusters ([https://github.com/heptiolabs/eventrouter)]\u00a0which spits out kube events to the fluent-bit logger that sends logs to splunk, but we're not seeing the events.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-161", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Get logs from Kubernetes Openshift into Splunk", "updated": "2019-08-20T16:42:02+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-155": {"assignee": "vallap", "created": "2018-10-22T13:03:59+11:00", "creator": "vallap", "description": "Like Artifactory and Blackduck, we can now use interconnect to connect to spinnaker, no need to use kubectl-port-forward anymore", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-155", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Use an internal IP to connect to spinnaker UI", "updated": "2019-08-20T16:41:18+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-154": {"assignee": "agarwas2", "created": "2018-10-22T08:52:59+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-154", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create firewall rule to test connection from on premise to artifactory in GKE", "updated": "2019-08-20T16:41:07+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-150": {"assignee": "castanoa", "created": "2018-10-19T10:35:16+11:00", "creator": "castanoa", "description": "Depends on CSP migrating changes over to GitHub Enterprise.\r\n * Merge changes in CSR (cloud source repository) to GitHub\r\n * Figure out how we can deploy on both OpenShift and GCP\r\n * Turn on Git Sync", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-150", "labels": ["S", "Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "castanoa", "status": "Story Done", "summary": "Setup Git Sync for PSV2 so that changes in GitHub Ent. can be deployed on GCP", "updated": "2019-08-20T16:41:04+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-147": {"assignee": "mereditj", "created": "2018-10-17T14:54:42+11:00", "creator": "mereditj", "description": "Cloud NAT (beta) was released recently and could be an option to allow Black Duck Hub to talk to the registration and knowledge base services in Black Duck's data centre.\r\n\r\nSee [https://cloud.google.com/nat/docs/overview#NATwithGKE]\u00a0for details on Cloud NAT.\r\n\r\nAcceptance Criteria\r\n- Spike to prove black duck connectivity to the internet\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-147", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "SPIKE: Investigate using Cloud NAT for allowing BD Hub internet comms", "updated": "2019-08-20T16:41:10+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-146": {"assignee": "agarwas2", "created": "2018-10-17T13:31:15+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-146", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Utilize IaC bamboo pipelines for infra provisioning for EX", "updated": "2019-08-20T16:41:10+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-145": {"assignee": "headenj1", "created": "2018-10-17T13:25:09+11:00", "creator": "headenj1", "description": "The git sync repo has configuration and code all together. We should seperate into two so that new repo on boarding can focus on just the openshift setup. The benefit is that the code/configuration will then be easier to reason through", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-145", "labels": ["gitsync"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "headenj1", "status": "Story Done", "summary": "Seperate gitsync repo into code & config", "updated": "2019-08-20T16:41:12+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-144": {"assignee": "vallap", "created": "2018-10-17T11:05:10+11:00", "creator": "vallap", "description": "https://github.service.anz/ex/engineering-acceleration-infrastructure/pull/7", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-144", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Merge Open Banking terraform code for cloudbuild trigger", "updated": "2019-08-20T16:41:17+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-142": {"assignee": "castanoa", "created": "2018-10-16T17:02:57+11:00", "creator": "mereditj", "description": "eg. move PSV2 out of launchpad project", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-142", "labels": ["TechDebt"], "lastViewed": null, "priority": "Could", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "[TechDebt] Extract customer source code from EX projects", "updated": "2019-08-20T16:40:27+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-141": {"assignee": "agarwas2", "created": "2018-10-16T17:00:18+11:00", "creator": "mereditj", "description": "Black Duck Hub requires access to the registration and knowledgebase services located in Black Duck's datacentre. Without this access BlackDuck won't even spin up.\r\n\r\nThis document should include the 5 different methods already established that might allow the BD Hub to access the internet.\r\n * Install and configure PaloAlto in GCP into GKE\r\n * Configure GCP firewall rules\r\n * Utilise the B2B on-prem proxy\r\n * Provision\u00a0a NAT gateway in GCP with appropriate rules\r\n * Provision a forward proxy in GCP with appropriate rules\r\n\r\nNOTE: Whichever pattern is selected will become a pattern for Artifactory and other services with provision in the future.\r\n\r\nLinked to PIPS-147", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-141", "labels": ["Must", "L"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Create AD for enabling limited internet access for Black Duck Hub", "updated": "2019-08-20T16:40:48+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-140": {"assignee": "mereditj", "created": "2018-10-16T13:31:16+11:00", "creator": "mereditj", "description": "Assign a static IP to the Black Duck internal load balancer so that we can test access to the service from on prem with specific firewall rules in place.\r\n\r\nAcceptance Criteria\r\n* Internal load balancer has a static IP address", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-140", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "mereditj", "status": "Story Done", "summary": "Assign static IP to internal LoadBalancer", "updated": "2019-08-20T16:40:57+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-138": {"assignee": "vallap", "created": "2018-10-16T10:52:17+11:00", "creator": "vallap", "description": "Cloud services cut in two the modules and the foundation for anz.com organisation.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-138", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Use module from ics/terraform-gcp-modules", "updated": "2019-08-20T16:41:16+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-136": {"assignee": "vuksanom", "created": "2018-10-15T16:40:05+11:00", "creator": "vuksanom", "description": "At the moment Artifactory is set up to use HTTP with Docker.\u00a0 This is not secure and is considered a bad practice.\r\n\r\nAcceptance criteria: Use self signed TLS certificate to serve artifactory and docker registries hosted on artifactory.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-136", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vuksanom", "status": "Story Done", "summary": "Use TLS certificates with Artifactory and Docker registry", "updated": "2019-08-20T16:41:09+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-134": {"assignee": "vallap", "created": "2018-10-15T15:53:48+11:00", "creator": "vallap", "description": "*Must*\r\n\r\nAs of now, because of firewall rules, Spinnaker running in Cluster A cannot talk to Cluster B using its internal IP address.\u00a0\r\n\r\nWe need to allow nodes running spinnaker to connect to the clusters we want to deploy to.\r\n * Create a network tag for the node pool\u00a0running spinnaker\r\n * Create firewall rules in the Host Project to allow connectivity\r\n\r\nProfit.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-134", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Create the necessary infrastructure for spinnaker to deploy to another cluster", "updated": "2019-08-20T16:41:14+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-132": {"assignee": "vallap", "created": "2018-10-15T15:48:05+11:00", "creator": "vallap", "description": "The impact of this change is to update our source code to reference the correct module", "fixVersions": ["0.1"], "issuetype": "Task", "key": "CNPS-132", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "vallap", "status": "Done", "summary": "The GCP repo `ics/terraform-gcp` has been renamed to `ics/terraform-gcp-foundations`", "updated": "2019-08-20T16:41:26+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-130": {"assignee": "vallap", "created": "2018-10-15T14:04:20+11:00", "creator": "vallap", "description": "In order for spinnaker to be triggered via PUB SUB we need to enable the pub-sub api in the project where spinnaker is deployed.\r\n\r\nFor now pub-sub will be used to trigger spinnaker when a new manifest.yaml is pushed to an artifact bucket", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-130", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "vallap", "status": "Story Done", "summary": "Enable PUB-SUB for anz-ex-services", "updated": "2019-08-20T16:41:14+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-128": {"assignee": null, "created": "2018-10-15T09:40:47+11:00", "creator": "agarwas2", "description": "*Integrating tools such as Grafeas and Kritis into the pipeline so that key governance control points can be automated.*", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-128", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Closed", "summary": "Binary Authorisation", "updated": "2019-06-13T11:48:16+10:00", "estimate": null, "epic_ref": null, "epic_name": "Binary Authorisation", "diff_to_upstream": []}, "CNPS-126": {"assignee": "castanoa", "created": "2018-10-15T09:07:20+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-126", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Define pattern for secrets management", "updated": "2019-08-20T16:41:15+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-125": {"assignee": "castanoa", "created": "2018-10-15T09:06:58+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-125", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Deploy PSV2 using spinnaker artifact model", "updated": "2019-08-20T16:41:03+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-124": {"assignee": "headenj1", "created": "2018-10-15T09:06:35+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-124", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Document openshift configuration to understand repo onboarding", "updated": "2019-08-20T16:41:12+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-123": {"assignee": "vallap", "created": "2018-10-15T09:06:00+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-123", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create staging environment in ANZ.com organisation", "updated": "2019-08-20T16:41:07+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-122": {"assignee": "vuksanom", "created": "2018-10-15T09:05:32+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-122", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Setup docker registry in artifactory", "updated": "2019-08-20T16:41:25+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-121": {"assignee": "vallap", "created": "2018-10-15T09:05:11+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-121", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Re-Deploy Vanilla spinnaker in ANZ.com environment", "updated": "2019-08-20T16:41:25+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-120": {"assignee": "vallap", "created": "2018-10-15T09:04:45+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-120", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Spinnaker Authentication using GSuite", "updated": "2019-08-20T16:40:58+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-119": {"assignee": "vallap", "created": "2018-10-15T09:04:14+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-119", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Increase quota for australia region from 24 to 48CPU ", "updated": "2019-08-20T16:41:11+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-118": {"assignee": "vuksanom", "created": "2018-10-15T09:03:37+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-118", "labels": ["Must", "L"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Configure private Cloud SQL for artifactory", "updated": "2019-08-20T16:41:01+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-117": {"assignee": "mereditj", "created": "2018-10-15T09:03:18+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-117", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Use private Cloud SQL for blackduck", "updated": "2019-08-20T16:41:08+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-116": {"assignee": "mereditj", "created": "2018-10-15T09:02:28+11:00", "creator": "agarwas2", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-116", "labels": ["Must"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Configure BD Hub to use Persistent Volume Claims for Storage", "updated": "2019-08-20T16:41:13+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-100": {"assignee": "vuksanom", "created": "2018-09-24T12:21:42+10:00", "creator": "glewr", "description": "ADR:\u00a0doc/adrs/0006-use-persistent-volumes-for-artifactory.md\r\n\r\nWe have decided to use PVC's for our deployment.", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-100", "labels": [], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Decide whether to use PVCs or GCS", "updated": "2019-08-20T16:41:01+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-95": {"assignee": "vuksanom", "created": "2018-09-24T12:17:27+10:00", "creator": "glewr", "description": "* Integration with ANZ's AD to allow LAN users to login and administer the Artifactory services\r\n* How does Artifactory integrate with AD?\r\n* Do we need to involve anyone else to be able to integrate with AD?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-95", "labels": ["Must", "M"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Integration with Active Directory - Login using ANZ credentials", "updated": "2019-08-20T16:40:52+10:00", "estimate": null, "epic_ref": "CNPS-228", "epic_name": "", "diff_to_upstream": []}, "CNPS-93": {"assignee": "agarwas2", "created": "2018-09-24T12:15:14+10:00", "creator": "glewr", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-93", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Extract code related to Artifactory and Black Duck in separate files", "updated": "2019-08-20T16:41:23+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CNPS-92": {"assignee": "agarwas2", "created": "2018-09-24T12:14:35+10:00", "creator": "glewr", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-92", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Determine what firewall rules does Spinnaker needs", "updated": "2019-08-20T16:41:24+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-91": {"assignee": "vallap", "created": "2018-09-24T12:14:04+10:00", "creator": "glewr", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-91", "labels": ["Must"], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Deploy to ANZ.com", "updated": "2019-08-20T16:41:23+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-90": {"assignee": "agarwas2", "created": "2018-09-24T12:13:49+10:00", "creator": "glewr", "description": "* Receive app (CSP) credentials to enable deployment", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-90", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Get KUBECONFIG from CSP cluster to deploy to ANZ.com", "updated": "2019-08-20T16:41:21+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-89": {"assignee": "agarwas2", "created": "2018-09-24T12:13:11+10:00", "creator": "glewr", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-89", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Build PSV2 code in ANZ.com", "updated": "2019-08-20T16:41:04+10:00", "estimate": null, "epic_ref": "CNPS-171", "epic_name": "", "diff_to_upstream": []}, "CNPS-84": {"assignee": "agarwas2", "created": "2018-09-24T12:08:54+10:00", "creator": "glewr", "description": "Private cloud build is necessary for allowing cloud build to pull artifacts from the GCP artifactory and to run the CI process in our private IP space versus Googles network ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-84", "labels": ["Must", "L"], "lastViewed": null, "priority": "Must", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Impact analysis of move to private cloud builders for ANZ.com", "updated": "2019-08-20T16:41:00+10:00", "estimate": null, "epic_ref": "CNPS-230", "epic_name": "", "diff_to_upstream": []}, "CNPS-83": {"assignee": "agarwas2", "created": "2018-09-24T12:07:28+10:00", "creator": "glewr", "description": null, "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-83", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "Run Terraform code on Bamboo for ANZ One Direct", "updated": "2019-08-20T16:41:22+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-82": {"assignee": "agarwas2", "created": "2018-09-24T12:06:56+10:00", "creator": "glewr", "description": "We need to determine if we can trigger Spinnaker from the Cloud Source Repo for a given manifest.yaml or do we need to store it in GCS?", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-82", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Story Done", "summary": "[SPIKE] Source for manifests", "updated": "2019-08-20T16:41:22+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-80": {"assignee": "agarwas2", "created": "2018-09-24T11:04:12+10:00", "creator": "glewr", "description": "h3. Description\r\nSpinnaker produces a whole variety of metrics to provide insight into the operational health of the platform. However these metrics are not all ingested into stackdriver due to a default quota limit of 500 for custom metrics. A request needs to be made to increase the quota limit of custom metrics in GCP. \r\n\r\nh3. Acceptance Criteria\r\n* Increase the quota limit for custom metrics in GCP. (By how much [~agarwas2]?)\r\n\r\n", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-80", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Increase custom metrics quota for stackdriver ", "updated": "2019-08-20T16:40:02+10:00", "estimate": null, "epic_ref": "CNPS-500", "epic_name": "", "diff_to_upstream": []}, "CNPS-74": {"assignee": null, "created": "2018-09-24T10:56:51+10:00", "creator": "glewr", "description": "*Automate software deployments so that ANZ can speed up release time and increase software quality.*\r\nSpinnaker is an open source tool that is used for continuous delivery to cloud platforms - in our case, GKE. It enables teams to release software changes with high velocity and confidence.", "fixVersions": [], "issuetype": "Epic", "key": "CNPS-74", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "glewr", "status": "Backlog", "summary": "Spinnaker - Enable high velocity software releases", "updated": "2019-03-26T00:07:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "Spinnaker - Enable high velocity software releases", "diff_to_upstream": []}, "CNPS-73": {"assignee": "vallap", "created": "2018-09-24T08:54:23+10:00", "creator": "agarwas2", "description": "ADR should capture \r\n\r\n* What secrets need to be managed\r\n* How will secrets be stored / retrieved for usage\r\n* Rotation policy for secrets", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-73", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Create ADR for Spinnaker secrets management", "updated": "2019-08-20T16:41:21+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-71": {"assignee": "agarwas2", "created": "2018-09-24T08:46:28+10:00", "creator": "agarwas2", "description": "Deploy spinnaker using helm chart and cloud build to the non production shared VPC service project in ANZ.com organisation ", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-71", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Deploy spinnaker to ANZ.com non production service project", "updated": "2019-08-20T16:41:20+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CNPS-70": {"assignee": "agarwas2", "created": "2018-09-24T08:44:06+10:00", "creator": "agarwas2", "description": "Determine firewall rules (within GCP) required to enable spinnaker deployments from ANZ.com shared vpc service project (production) to target service projects in\r\n\r\n* production shared VPC network\r\n* non production shared VPC network", "fixVersions": ["0.1"], "issuetype": "Story", "key": "CNPS-70", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CNPS", "reporter": "agarwas2", "status": "Story Done", "summary": "Determine firewall rules for Spinnaker deployments", "updated": "2019-08-20T16:41:19+10:00", "estimate": null, "epic_ref": "CNPS-74", "epic_name": "", "diff_to_upstream": []}, "CLS-596": {"assignee": "delbustr", "created": "2019-11-22T13:16:56+11:00", "creator": "mallicr1", "description": "1. Learning curve for AWS te am \r\n2. AWS team pickup 3 consumables from current apprunner and start converting to terraform modules.\r\n3. Work with Cloud Native Tooling team for repository access, development patterns, PR reviews, etc...\r\n4. Weekly brainstorming sessions", "fixVersions": [], "issuetype": "Epic", "key": "CLS-596", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "mallicr1", "status": "Epic in Progress", "summary": "Terraform Module development for AWS resources.", "updated": "2019-11-28T17:39:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "Terraform Module development for AWS resources.", "diff_to_upstream": []}, "CLS-595": {"assignee": "delbustr", "created": "2019-11-22T11:04:35+11:00", "creator": "soonw", "description": "to support Jira and confluence into production, this epic is cater for the request coming into our queue from Jira.\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-595", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic in Progress", "summary": "AWS - support Jira Confluence for production readiness ", "updated": "2019-12-02T11:34:12+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - support Jira Confluence for production readiness ", "diff_to_upstream": []}, "CLS-594": {"assignee": "delbustr", "created": "2019-11-22T11:02:29+11:00", "creator": "soonw", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-594", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Deliver Kafka consumable", "updated": "2019-11-22T11:02:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Deliver Kafka consumable", "diff_to_upstream": []}, "CLS-593": {"assignee": "ganalc1", "created": "2019-11-21T17:28:11+11:00", "creator": "ganalc1", "description": "develop a managed multi tenant GKE cluster that aligns with hardening and security controls ", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-593", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic in Progress", "summary": "k8s - Build Managed multi tenant Cluster", "updated": "2019-11-25T16:46:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - Build Managed multi tenant Cluster", "diff_to_upstream": []}, "CLS-592": {"assignee": "blackm", "created": "2019-11-21T11:39:24+11:00", "creator": "blackm", "description": "During a recent incident we had trouble restoring availability as Spinnaker required Artifactory to be available, and even Artifactory required Artifactory!\r\n\r\nThe solution is to uncouple all our tooling such that Spinnaker can deploy when Artifactory is down, and then Spinnaker itself can be used to deploy Artifactory, when no Artifactory exists.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-592", "labels": ["CNPS"], "lastViewed": "2019-11-21T16:57:47.524000+11:00", "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "CNPS: Remove inter-dependency on Artifactory / Spinnaker", "updated": "2019-11-22T10:56:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Decouple Artifactory / Spinnaker", "diff_to_upstream": []}, "CLS-591": {"assignee": "stathaml", "created": "2019-11-21T07:35:43+11:00", "creator": "patelm18", "description": "*Epic Point: 13*\r\n\r\n*Description:*\u00a0 Define Security Model for Artifact Analysis\r\n\r\n*Acceptance Criteria for Jfrog Xray:*\r\n * Define initial policy in Jfrog Xray\r\n * Container\u00a0Scanning\r\n * \u00a0Guardrails for severity (L,M,H) management\r\n\r\n*Acceptance Criteria for TFE in GCP*\r\n # Security Design review of TFE in GCP\r\n # Peer REview of the Design in SDC\r\n # Noting of Design in SDC\r\n # Follow all SiC Service and Process\r\n\r\n*Dependency:*\r\n * Access to Xray environment - Cloud Native Platform Squad", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-591", "labels": ["T22"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic with Squad", "summary": "CNA-Cloud Software Assurance Tooling and review of TFE for GCP", "updated": "2019-11-21T08:09:25+11:00", "estimate": null, "epic_ref": null, "epic_name": "Cloud Software Assurance Tooling", "diff_to_upstream": []}, "CLS-590": {"assignee": "vamshiky", "created": "2019-11-20T21:11:05+11:00", "creator": "vamshiky", "description": "This epic will have all the BAU tasks requested by Application teams to support their implementation", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-590", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Ready for Squad", "summary": "O6E321 - BAU for customers", "updated": "2019-12-02T12:54:57+11:00", "estimate": null, "epic_ref": null, "epic_name": "O6E321 - BAU for customers", "diff_to_upstream": []}, "CLS-589": {"assignee": "vamshiky", "created": "2019-11-20T21:08:59+11:00", "creator": "vamshiky", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-589", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Ready for Squad", "summary": "GCP - O6E320 - S - DNS forwarding from GCP to ANZ Onprem DNS servers", "updated": "2019-12-02T12:55:03+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - O6E320 - S - DNS forwarding from GCP to ANZ Onprem DNS servers", "diff_to_upstream": []}, "CLS-588": {"assignee": "vamshiky", "created": "2019-11-20T14:51:46+11:00", "creator": "vamshiky", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-588", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - O7E306 - RACI for GCP Platform.  (Op Readiness)", "updated": "2019-12-02T12:54:56+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - OXE306 - RACI for GCP Platform.  (Op Readiness)", "diff_to_upstream": []}, "CLS-587": {"assignee": "vamshiky", "created": "2019-11-20T14:48:03+11:00", "creator": "vamshiky", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-587", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - O7E305 - Documented GCP Logging retention's in logging playbook. (Op Readiness)", "updated": "2019-11-25T19:45:37+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - OXE305 - Documented GCP Logging retention's in logging playbook. (Op Readiness)", "diff_to_upstream": []}, "CLS-586": {"assignee": "vamshiky", "created": "2019-11-20T14:47:08+11:00", "creator": "vamshiky", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-586", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Ready for Squad", "summary": "GCP - O7E304 - Maintenance of Palo Alto appliances documented  (Op Readiness)", "updated": "2019-12-02T12:55:01+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - OXE304 - Maintenance of Palo Alto appliances documented  (Op Readiness)", "diff_to_upstream": []}, "CLS-585": {"assignee": "stathaml", "created": "2019-11-20T12:59:04+11:00", "creator": "patelm18", "description": "*Epic Points: 5*\r\n\r\n*Description:* Define, Test and Implement Organisational Policy for GCP\r\n\r\n*Acceptance Criteria:*\r\n\r\n1. Define GCP Organisational Policy Requirements\r\n\r\n2. Socialise GCP Organisational Policy Requirements with GCP Squad\r\n\r\n*Dependancy:*\r\n # Implement and test _(confirm from GCP squad on GCP instance)_GCP organisational policy as defined in the requirements - GCP Squad\r\n\r\n+*Google Collaboration*+\r\n\r\nDetermine the following impact for each policy in order to measure the usefulness for workloads:\r\n\r\nNote: For maximum impact we need to consider the workload lens and impact this has\r\n # Align to iProtect\r\n # Determine level - project folder / org\r\n # Framework / how to implement\r\n # Confirm any additional org policy based on ORA controls", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-585", "labels": ["SE03", "T29.b"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic with Squad", "summary": "CNA- Define Organisational Policy for GCP", "updated": "2019-11-21T14:15:09+11:00", "estimate": null, "epic_ref": null, "epic_name": "Define Organisational Policy for GCP", "diff_to_upstream": []}, "CLS-584": {"assignee": "vamshiky", "created": "2019-11-20T11:51:18+11:00", "creator": "vamshiky", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-584", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - F1E10 - S - Azure AD Sync uplift", "updated": "2019-11-25T19:46:14+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - F1E10 - S - Azure AD Sync uplift", "diff_to_upstream": []}, "CLS-583": {"assignee": "vamshiky", "created": "2019-11-20T11:45:39+11:00", "creator": "vamshiky", "description": "Dependencies:\r\n\r\nKoray - Splunk in GCP with a separate HEC feed for this.\r\n\r\nSOC to provide requirements.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-583", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Ready for Squad", "summary": "GCP - O7E303 - S - Integration of Palo Alto logs with Splunk   dependency on Korays work. (Op Readiness).", "updated": "2019-12-02T12:55:06+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - OXE303 - S - Integration of Palo Alto logs with Splunk   dependency on Korays work. (Op Readiness).", "diff_to_upstream": []}, "CLS-582": {"assignee": "vamshiky", "created": "2019-11-20T11:43:47+11:00", "creator": "vamshiky", "description": "Dependencies:\r\n\r\nReviewed by UAM Team, Architects, Shankar", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-582", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Ready for Squad", "summary": "GCP - O5E319 - S - IAM 2.0 - Design and POC interatively", "updated": "2019-12-02T12:55:02+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - OXE319 - S - IAM 2.0 - Design and POC interatively", "diff_to_upstream": []}, "CLS-581": {"assignee": "vamshiky", "created": "2019-11-20T11:40:07+11:00", "creator": "vamshiky", "description": "Dependencies:\u00a0\r\n\r\nShared Services Babu for advice\r\n\r\nService Now to help build\r\n\r\nArchitect/Shankar/UAM team to approve Design", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-581", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Ready for Squad", "summary": "GCP - O5E301 - S - Time boxed access elevation - Self Service, Design, POC, Implement", "updated": "2019-12-02T12:54:58+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - OXE301 - S - Time boxed access elevation - Self Service, Design, POC, Implement", "diff_to_upstream": []}, "CLS-580": {"assignee": "vamshiky", "created": "2019-11-20T11:36:26+11:00", "creator": "vamshiky", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-580", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Ready for Squad", "summary": "GCP - O5E230 - S - Document Platform non-functional requirements for foundation platform services (ORA #T32.A)", "updated": "2019-12-02T12:54:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - O5E230 - S - Document Platform non-functional requirements for foundation platform services (ORA #T32.A)", "diff_to_upstream": []}, "CLS-579": {"assignee": "praveenp", "created": "2019-11-20T09:32:16+11:00", "creator": "praveenp", "description": "* Redundant switch implementation\r\n * Understand other single points of failure in non-prod TPN line\r\n * Enable monitoring for additional non-production devices / lines\r\n\r\nAcceptance criteria:\r\n - Redundant networking infrastructure built and monitored for on-prem to Telstra data centres using TPN for non-production connectivity", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-579", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic with Squad", "summary": "SS: Non-Production redundancy for TPN connectivity on-prem to Clouds", "updated": "2019-11-21T14:39:27+11:00", "estimate": null, "epic_ref": null, "epic_name": "Non-Production redundancy for TPN connectivity on-prem to Clouds", "diff_to_upstream": []}, "CLS-578": {"assignee": "praveenp", "created": "2019-11-20T09:07:01+11:00", "creator": "praveenp", "description": "* Confirm logs are sent to Splunk non-prod from AWS\r\n * Create alerts, use GCP alerts as the basis for AWS alerts\r\n * Link up alerts created to service now\r\n\r\nAcceptance Criteria:\r\n - AWS ORA condition for alerting on platform infrastructure is satisfied", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-578", "labels": ["PI6"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic with Squad", "summary": "SS: Splunk alerts creation for AWS platform", "updated": "2019-11-25T14:57:47+11:00", "estimate": null, "epic_ref": null, "epic_name": "Splunk alerts for AWS platform", "diff_to_upstream": []}, "CLS-577": {"assignee": "praveenp", "created": "2019-11-20T09:03:28+11:00", "creator": "praveenp", "description": "Connect via TPN AWS and GCP non-production zones.\r\n\r\nStretch - connect AWS and GCP production zones\r\n\r\nAcceptance Criteria:\r\n - Connectivity using TPN between AWS and GCP exists for any workloads requiring this", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-577", "labels": ["PI6"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic with Squad", "summary": "SS: Intercloud Network Connectivity between AWS and GCP non-production (for the cybersplunk and ANZx use cases)", "updated": "2019-11-21T16:19:13+11:00", "estimate": null, "epic_ref": null, "epic_name": "Intercloud Network Connectivity between AWS and GCP non-production", "diff_to_upstream": []}, "CLS-576": {"assignee": "praveenp", "created": "2019-11-20T09:01:57+11:00", "creator": "praveenp", "description": "- BAU capacity to continue maintaining solutions built in previous PIs\r\n\r\nAcceptance criteria:\r\n - On going maintenance work for transitioned services", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-576", "labels": ["PI6"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic in Progress", "summary": "SS: BAU for Azure work, TFE platform setup", "updated": "2019-12-04T08:51:17+11:00", "estimate": null, "epic_ref": null, "epic_name": "Shared Services and Azure BAU", "diff_to_upstream": []}, "CLS-575": {"assignee": "praveenp", "created": "2019-11-20T09:00:45+11:00", "creator": "praveenp", "description": "* Pull all AWS and GCP services into Service Now CMDB and Troux\r\n * Create a dynamic solution which automatically pulls all new cloud services into service now\r\n\r\nAcceptance Criteria:\r\n * All currently used GCP and AWS services are mapped into service now as business services", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-575", "labels": [], "lastViewed": "2019-11-25T15:43:21.148000+11:00", "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic with Squad", "summary": "SS: Asset management - incorporate all AWS and GCP services into Service Now", "updated": "2019-11-25T14:57:46+11:00", "estimate": null, "epic_ref": null, "epic_name": "Asset management - incorporate all AWS and GCP services into Service Now", "diff_to_upstream": []}, "CLS-574": {"assignee": "praveenp", "created": "2019-11-20T08:57:37+11:00", "creator": "praveenp", "description": "* Design New Relic and Dynatrace capability for AWS platform 2.0\r\n * Work with Jira team to test in AWS\r\n\r\nAcceptance Criteria:\r\n - Solution design for New Relic and Dynatrace monitoring service in AWS is created and approved", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-574", "labels": ["PI6"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic with Squad", "summary": "SS: Cloud Monitoring solution for AWS", "updated": "2019-11-21T16:25:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "Cloud Monitoring solution design for AWS", "diff_to_upstream": []}, "CLS-573": {"assignee": "praveenp", "created": "2019-11-20T08:55:00+11:00", "creator": "praveenp", "description": "* Create design for GCP using Dynatrace and New Relic\r\n * Build infrastructure\r\n * Set up Dynatrace on Spinnaker, artifactory, GKE, VM SOE\r\n\r\nAcceptance criteria:\r\n * Monitoring infrastructure required in GCP is set up and productionised - Dynatrace\r\n * Solution design for Dynatrace service in GCP is created and approved\r\n * Service onboarding process exists for Dynatrace monitoring on application infrastructure", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-573", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic in Progress", "summary": "SS: Cloud Monitoring set up for GCP platform", "updated": "2019-12-04T14:49:30+11:00", "estimate": null, "epic_ref": null, "epic_name": "Cloud Monitoring set up for GCP platform", "diff_to_upstream": []}, "CLS-572": {"assignee": "mishrad1", "created": "2019-11-19T20:49:56+11:00", "creator": "thompsl8", "description": "*Definition of Done*\r\n * Shared OSE Production Corporate is now running 3.11\r\n * Shared OSE QA Corporate is now running 3.11\r\n * Banking Center (PSP) OSE Production Corporate is now running 3.11\r\n * All Technical test of the cluster is green", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-572", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "thompsl8", "status": "Backlog", "summary": "CPaaS - OSE 3.11 upgrade Sh Prod and Sh QA", "updated": "2019-11-19T20:49:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "upgrade-ose-3.11", "diff_to_upstream": []}, "CLS-571": {"assignee": "blackm", "created": "2019-11-19T14:20:29+11:00", "creator": "blackm", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-571", "labels": ["CNPS"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic Ready for Squad", "summary": "CNPS: Automate Artifactory API Access Token generation", "updated": "2019-11-22T10:55:27+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI7: Artifactory API Tokens", "diff_to_upstream": []}, "CLS-570": {"assignee": "farrella", "created": "2019-11-19T14:05:10+11:00", "creator": "singhh10", "description": "Recommendation on the tooling target state.\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-570", "labels": [], "lastViewed": "2019-11-22T11:38:50.449000+11:00", "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "CICD pipeline roadmap", "updated": "2019-11-27T10:56:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "CICD pipeline roadmap", "diff_to_upstream": []}, "CLS-569": {"assignee": "morgang", "created": "2019-11-19T14:03:27+11:00", "creator": "singhh10", "description": "Review and recommendation for service stability for CICD tool set.\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-569", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "CICD pipeline review for high availability", "updated": "2019-11-27T10:56:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "CICD pipeline review for high availability", "diff_to_upstream": []}, "CLS-568": {"assignee": "farrella", "created": "2019-11-19T14:01:58+11:00", "creator": "singhh10", "description": "Design for data movement to and from Cloud and on-prem.\u00a0\r\n\r\n3rd party data share and copying?\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-568", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "File Transfer between on prem and Cloud", "updated": "2019-11-27T10:58:48+11:00", "estimate": null, "epic_ref": null, "epic_name": "File Transfer between on prem and Cloud", "diff_to_upstream": []}, "CLS-567": {"assignee": "farrella", "created": "2019-11-19T13:58:46+11:00", "creator": "singhh10", "description": "Agreement on the preferred tooling for SOE and Config Management.\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-567", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic Ready for Squad", "summary": "Approved SOE and config management Tooling decision", "updated": "2019-11-19T14:29:31+11:00", "estimate": null, "epic_ref": null, "epic_name": "Approved SOE and config management Tooling decision", "diff_to_upstream": []}, "CLS-566": {"assignee": "morgang", "created": "2019-11-19T13:54:49+11:00", "creator": "singhh10", "description": "Supporting Jira/Confluence projects in securing restricted/accurate data in AWS.\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-566", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "Hosting restricted/accurate data in AWS", "updated": "2019-11-27T10:51:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "Hosting restricted/accurate data in AWS", "diff_to_upstream": []}, "CLS-565": {"assignee": "morgang", "created": "2019-11-19T13:53:04+11:00", "creator": "singhh10", "description": "Update the AWS network design, review and approved", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-565", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "Next version AWS Networking design", "updated": "2019-11-27T10:58:02+11:00", "estimate": null, "epic_ref": null, "epic_name": "Next version AWS Networking design", "diff_to_upstream": []}, "CLS-564": {"assignee": "farrella", "created": "2019-11-19T13:52:04+11:00", "creator": "singhh10", "description": "updates to the existing GCP Network design , review and approval", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-564", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic Ready for Squad", "summary": "Next version GCP Networking design", "updated": "2019-11-25T09:58:22+11:00", "estimate": null, "epic_ref": null, "epic_name": "Next version GCP Networking design", "diff_to_upstream": []}, "CLS-563": {"assignee": "farrella", "created": "2019-11-19T13:50:15+11:00", "creator": "singhh10", "description": "Secure pattern for services to connect to the internet", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-563", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic Ready for Squad", "summary": "Egress pattern for all Cloud platforms", "updated": "2019-11-19T14:23:20+11:00", "estimate": null, "epic_ref": null, "epic_name": "Egress pattern for all Cloud platforms", "diff_to_upstream": []}, "CLS-562": {"assignee": "farrella", "created": "2019-11-19T13:49:24+11:00", "creator": "singhh10", "description": "Secure approach to exposing services to the internet", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-562", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "Ingress pattern for all Cloud platforms", "updated": "2019-11-27T10:55:03+11:00", "estimate": null, "epic_ref": null, "epic_name": "Ingress pattern for all Cloud platforms", "diff_to_upstream": []}, "CLS-561": {"assignee": "farrella", "created": "2019-11-19T13:47:54+11:00", "creator": "singhh10", "description": "Review of Shared Kubernetes Cluster. Driven by K8S squad\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-561", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "Shared kubernetes design review", "updated": "2019-11-27T10:50:50+11:00", "estimate": null, "epic_ref": null, "epic_name": "Shared kubernetes design review", "diff_to_upstream": []}, "CLS-560": {"assignee": "morgang", "created": "2019-11-19T13:46:40+11:00", "creator": "singhh10", "description": "Adhoc requests for infra\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-560", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "BS11 Consulting and support for Cloud Infrastructure", "updated": "2019-11-27T10:57:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "BS11 Consulting and support for Cloud Infrastructure", "diff_to_upstream": []}, "CLS-559": {"assignee": "farrella", "created": "2019-11-19T13:45:49+11:00", "creator": "singhh10", "description": "Adhoc requests from ANZx on design and other general queries", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-559", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "singhh10", "status": "Epic with Squad", "summary": "ANZx Consulting and support for Cloud Infrastructure", "updated": "2019-11-19T14:17:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "ANZx Consulting and support for Cloud Infrastructure", "diff_to_upstream": []}, "CLS-558": {"assignee": "blackm", "created": "2019-11-19T13:14:28+11:00", "creator": "blackm", "description": "Artifactory does not natively support alpinelinux as a repo type, which causes undesirable behaviour for our customers. JFrog supply a plugin which can fix this - we will add this to our GCP Artifactory.\r\n\r\nReference: -CNPS-1286-", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-558", "labels": ["CNPS"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "CNPS: Artifactory Plugin for Alpine repo", "updated": "2019-12-05T11:38:41+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Artifactory Alpine Plugin", "diff_to_upstream": []}, "CLS-557": {"assignee": "blackm", "created": "2019-11-19T13:11:19+11:00", "creator": "blackm", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-557", "labels": ["CNPS"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "CNPS: Pipeline Notifications in Spinnaker", "updated": "2019-11-22T10:55:25+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI7: Spinnaker Notifications", "diff_to_upstream": []}, "CLS-556": {"assignee": "stathaml", "created": "2019-11-19T10:39:23+11:00", "creator": "stathaml", "description": "EPIC Points: 22.8\r\n\r\nAcceptance Criteria:\r\n\r\n-\u00a0Mechanism to track all BAU work for Cloud Native Assurance squad\r\n\r\nDependency:\r\n\r\n- None", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-556", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "stathaml", "status": "Epic in Progress", "summary": "CNA - BAU Work", "updated": "2019-11-26T16:38:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "CNA - BAU Work", "diff_to_upstream": []}, "CLS-555": {"assignee": "ganalc1", "created": "2019-11-18T16:26:43+11:00", "creator": "ganalc1", "description": "Configure OPA for Confidential - Trusted\r\n\r\nFor GKE customers there are currently no standard way to manage cluster traffic and policy enforcement, making setup and operational support difficult and time consuming\r\n\r\nUnlike the current solution we will develop a policies as code solution enhancing the user experience, ease of use and re-use of the platform and improved security through standardization of policies as code", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-555", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic with Squad", "summary": "k8s - configure OPA for Confidential - Trusted", "updated": "2019-11-25T16:47:07+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - configure OPA for Confidential - Trusted", "diff_to_upstream": []}, "CLS-554": {"assignee": "ganalc1", "created": "2019-11-18T16:25:54+11:00", "creator": "ganalc1", "description": "Configure ISTIO for Confidential - Trusted\r\n\r\nFor GKE customers there are currently no standard way to manage cluster traffic and policy enforcement, making setup and operational support difficult and time consuming\r\n\r\nUnlike the current solution we will develop a policies as code solution enhancing the user experience, ease of use and re-use of the platform and improved security through standardization of policies as code\r\n\r\n", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-554", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic with Squad", "summary": "k8s - configure ISTIO for Confidential - Trusted", "updated": "2019-11-25T16:47:00+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - configure ISTIO for Confidential - Trusted", "diff_to_upstream": []}, "CLS-553": {"assignee": "ganalc1", "created": "2019-11-18T16:25:05+11:00", "creator": "ganalc1", "description": "Configure Helm for deployment of advanced cluster components\r\n\r\nFor the k8s squad there is currently no standard way to manage the configuration of key cluster components.\r\n\r\nUnlike the current solution we will develop IAC solution enhancing the user experience and ease of use and re-use of the platform and code", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-553", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Ready for Squad", "summary": "k8s - configure Helm", "updated": "2019-11-20T16:46:18+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - configure Helm", "diff_to_upstream": []}, "CLS-552": {"assignee": "ganalc1", "created": "2019-11-18T16:24:17+11:00", "creator": "ganalc1", "description": "ownership of shared / dedicated cluster code base\r\n\r\nFor GKE customers there is no documented kubernetes cluster base code and each new dedicated cluster is required to develop code that may already exist and available to consume\r\n\r\nUnlike the current solution we will make available the standard managed cluster code base, enhancing the user experience and ease of use and re-use of the platform and code", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-552", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Ready for Squad", "summary": "k8s - ownership of shared / dedicated cluster code base", "updated": "2019-11-20T16:51:57+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - ownership of shared / dedicated cluster code base", "diff_to_upstream": []}, "CLS-551": {"assignee": "ganalc1", "created": "2019-11-18T16:22:52+11:00", "creator": "ganalc1", "description": "Develop operational support (Alpha support documentation)\r\n\r\nFor GKE customers, there are multiple sources of documentation ( if you can find it ), making setup and operational support difficult and time consuming\r\n\r\nUnlike the current solution we will document each aspect of the service we provide , enhancing the user experience and ease of use and re-use of the platform and code\r\n\r\n", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-551", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic with Squad", "summary": "k8s - operational support (Alpha support documentation)", "updated": "2019-11-25T16:46:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - operational support (Alpha support documentation)", "diff_to_upstream": []}, "CLS-550": {"assignee": "ganalc1", "created": "2019-11-18T16:21:45+11:00", "creator": "ganalc1", "description": "Build a managed multi tenant Confidential - Trusted cluster\r\n\r\nFor all GKE development teams, there are no managed GKE clusters they can consume. Customers are required to build, manage, maintain and secure their own clusters.\r\n\r\nUnlike the current solution we will build a managed multi tenant GKE cluster that provides standard security controls [Confidential - Trusted]. allowing customers to focus on application development and compliance.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-550", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic with Squad", "summary": "k8s - GKE  Build Managed multi tenant Confidential - Trusted cluster", "updated": "2019-11-25T16:46:43+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - GKE  Build Managed multi tenant Confidential - Trusted cluster", "diff_to_upstream": []}, "CLS-549": {"assignee": "ganalc1", "created": "2019-11-18T16:20:20+11:00", "creator": "ganalc1", "description": "Develop GKE controls framework aligned to data classification\r\n\r\nFor all customers there is currently no standard framework they can follow that identifies the security controls they need develop that aligns to ANZ's data confidentiality and integrity ratings.\r\n\r\nUnlike the current solution we will develop a Kubernetes (k8s) controls matrix that aligns to ANZ data confidentiality and integrity rating, reducing the toil involved in individually assessing each kubernetes workload\r\n\r\n", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-549", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic in Progress", "summary": "k8s - GKE controls framework aligned to data classification", "updated": "2019-11-25T16:46:28+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - GKE controls framework aligned to data classification", "diff_to_upstream": []}, "CLS-548": {"assignee": "shridhar", "created": "2019-11-18T12:50:49+11:00", "creator": "shridhar", "description": "In order to monitor the application as well as underlying hardware/network components, there is an\u00a0urgent need to implement synthetic monitoring tools such as New Relic and/or Dynatrace. Alerting in case of failures via integration to TechConnect is required as well.\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-548", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Epic in Progress", "summary": "DVE - Enterprise Artifactory Synthetic Monitoring & Alerting", "updated": "2019-11-26T17:10:08+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory Synthetic Monitoring & Alerting", "diff_to_upstream": []}, "CLS-547": {"assignee": "shridhar", "created": "2019-11-18T12:49:41+11:00", "creator": "shridhar", "description": "In order to monitor the application as well as underlying hardware/network components, there is an\u00a0urgent need to implement synthetic monitoring tools such as New Relic and/or Dynatrace. Alerting in case of failures via integration to TechConnect is required as well.\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-547", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Epic in Progress", "summary": "DVE - GitHub Enterprise Synthetic Monitoring & Alerting", "updated": "2019-11-26T17:11:29+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise Synthetic Monitoring & Alerting", "diff_to_upstream": []}, "CLS-546": {"assignee": "blackm", "created": "2019-11-18T10:55:56+11:00", "creator": "blackm", "description": "The team are carrying and will continue to carry a margin of technical debt.\r\n\r\nThis epic captures the highest priority technical debt which we plan to address during PI6.\r\n\r\nAcceptance:\r\n- All tickets complete", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-546", "labels": ["IACP"], "lastViewed": "2019-11-21T16:59:05.590000+11:00", "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "IACP: Resolving Existing Technical Debt", "updated": "2019-11-21T13:55:14+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Tech Debt", "diff_to_upstream": []}, "CLS-545": {"assignee": null, "created": "2019-09-04T17:30:46+10:00", "creator": "tanga", "description": "n\u00e9e\u00a0\"Spinnaker Enable Artifact Types\"\r\n\r\nA key use-case / deployment model with CI/CD pipelines is triggering a CD event after CI has successfully built and tested a new binary. In most cases, this binary is docker. In kubernetes, customers also want to trigger CD on changes to their deployment manifest (aka Helm chart).", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-545", "labels": ["CNPS"], "lastViewed": "2019-11-22T10:39:54.344000+11:00", "priority": "Normal", "project": "CLS", "reporter": "tanga", "status": "Epic in Progress", "summary": "CNPS: Enable Helm/Docker Triggers in Spinnaker", "updated": "2019-11-28T09:25:46+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Spinnaker Helm/Docker Triggers", "diff_to_upstream": []}, "CLS-544": {"assignee": "blackm", "created": "2019-11-15T15:34:10+11:00", "creator": "blackm", "description": "We would like a better way of exposing terraform modules within ANZ.\r\n\r\nDevelop a gatsby catalogue microsite, and publish into github pages. This site should draw its content from the GH org *terraform-modules*.\r\n\r\nAcceptance:\r\n * Gatsby site running in Github pages, exposing all repos published to GHE org terraform-modules\r\n * Deployment pipeline to publish any updates to microsite", "fixVersions": ["PI7"], "issuetype": "Epic", "key": "CLS-544", "labels": ["IACP"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Backlog", "summary": "IACP: TFE Module Microsite", "updated": "2019-11-28T11:46:06+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI7: Microsite", "diff_to_upstream": []}, "CLS-543": {"assignee": "blackm", "created": "2019-11-15T15:25:04+11:00", "creator": "blackm", "description": "To dog-food the use of TFE, CNPS terraform code was chosen as a double-win candidate to migrate first.\r\n\r\nMost of the work was completed in PI5 under\u00a0IACP-127. This epic tracks the work to get this over the line.\r\n\r\nAcceptance:\r\n * All CNPS terraform code is moved from ex/engineering-acceleration-infra repo to ex/infrastructure\r\n * All CNPS terraform code is upgraded to v0.12\r\n * All CNPS terraform code is running in TFE", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-543", "labels": ["IACP"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "IACP: Migrate CNPS Terraform code to TFE", "updated": "2019-11-21T14:30:54+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Migrate CNPS TF", "diff_to_upstream": []}, "CLS-542": {"assignee": "blackm", "created": "2019-11-15T15:23:37+11:00", "creator": "blackm", "description": "Further develop the TFE reference patterns.\r\n\r\nAcceptance:\r\n * Complete TFE API IaC Pipeline\r\n * Complete Module publishing pattern\r\n * Complete How do I use a custom provider?", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-542", "labels": ["IACP"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "IACP: TFE Reference Patterns", "updated": "2019-11-25T13:35:58+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: TFE Patterns", "diff_to_upstream": []}, "CLS-541": {"assignee": "blackm", "created": "2019-11-15T15:07:37+11:00", "creator": "blackm", "description": "Deploy Terraform Enterprise into GCP (in onedirect)\r\n\r\nReferences:\r\n * [https://github.com/hashicorp/terraform-google-terraform-enterprise]\r\n * [https://github.com/terraform-google-modules/terraform-google-sql-db]\r\n\r\nAcceptance:\r\n * Deploy VM and get TFE running\r\n * Document process and develop automation\r\n * Showcase tribe on what we learned\r\n * Develop epic for PI7 to take forth to production", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-541", "labels": ["IACP"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic in Progress", "summary": "IACP: TFE in GCP Phase 1", "updated": "2019-11-26T14:47:11+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: TFE in GCP", "diff_to_upstream": []}, "CLS-540": {"assignee": "blackm", "created": "2019-11-15T15:01:09+11:00", "creator": "blackm", "description": "Review current state of play in TFE now IACP have taken full ownership.\r\n\r\n* Security Approval & Risks\r\n* Architecture (inc network routes)\r\n* Validate Install Runsheet for BCP scenario\r\n* Validate D/R Plan and test backup\r\n* Document postgres vs \"S3\" Object store\r\n* FAQ\r\n\r\nAcceptance:\r\n- Confluence page containing above information", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-540", "labels": ["IACP"], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "IACP: Review arch of current TFE on-prem", "updated": "2019-11-28T11:46:00+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: TFE Review", "diff_to_upstream": []}, "CLS-539": {"assignee": "shridhar", "created": "2019-11-14T20:57:47+11:00", "creator": "shridhar", "description": "The intent of this epic is to implement a high availability configuration for GitHub Enterprise.\r\n\r\nCurrently GHE has 1 Primary node with 2 replication nodes running in Production instance with no DR capabilities setup. The current configuration does not divert the traffic to either of the replication nodes in the event of Primary node failing. There is no DR node available with no capability to fall back onto secondary live instance. The impact to wider engineering community is the inability for the teams to release features in Production for ANZ Business units that are supported by Projects.\r\n\r\nThe intent of this epic is to implement a highly available instance of GHE that replicates the repositories and projects across two sites with switch over capabilities implemented to ensure that in the event of the Primary instance failing, the traffic is redirected to the secondary instance seamlessly, thus minimizing the impacts to Project teams.\r\n\r\nThis change is critical to be implemented as part of Audit remediation.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-539", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - GitHub Enterprise High Availability (Analysis)", "updated": "2019-11-20T19:20:12+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise High Availability", "diff_to_upstream": []}, "CLS-538": {"assignee": "shridhar", "created": "2019-11-14T20:57:06+11:00", "creator": "shridhar", "description": "As part of Audit reviews in the month of July-August 2019, it has been identified that there are no DR and BCP capabilities available for GHE. In order to implement a robust BCP capability, the DR ratings will need to be revisited and remediated as well.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-538", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - GitHub Enterprise DR Rating uplift ", "updated": "2019-11-20T19:19:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise DR Rating uplift ", "diff_to_upstream": []}, "CLS-537": {"assignee": "shridhar", "created": "2019-11-14T20:56:27+11:00", "creator": "shridhar", "description": "As part of Audit ISS.1 outcomes, the IAM policies have been revised to ensure administrative privileges are only provided to limited number of users across Projects and implement segregation of duty controls.\r\n\r\nIn order to comply with the audit requirements, the following Project groups will be required to be created and users assigned to the groups that will control the user entitlements.\r\n\r\n\u00a0\r\n|Tool|Access level|Role|Naming convention|\r\n|Artifactory|Tool|Tool Administrator|artifactory -administrators|\r\n|Artifactory|Tool|Viewer (logged-in)|artifactory-users|\r\n|Artifactory|Tool|Tool Service Accounts|artifactory-service accounts|\r\n|Artifactory|Project|Project Administrator|artifactory-<repository name>-project administrator|\r\n|Artifactory|Project|Release Manager|artifactory-<repository name>-release manager|\r\n|Artifactory|Project|Engineer|artifactory-<repository name>-engineer|\r\n|Artifactory|Project|DevOps Engineer|artifactory-<repository name>-devops engineer|\r\n|Artifactory|Project|Project Service Accounts|artifactory-<repository name>-service accounts|\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-537", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - Enterprise Artifactory IAM Remediation (Audit Finding)", "updated": "2019-11-26T14:52:41+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory IAM Remediation (Audit Finding)", "diff_to_upstream": []}, "CLS-536": {"assignee": "shridhar", "created": "2019-11-14T20:55:53+11:00", "creator": "shridhar", "description": "As part of Audit ISS.1 outcomes, the IAM policies have been revised to ensure administrative privileges are only provided to limited number of users across Projects and implement segregation of duty controls.\r\n\r\nIn order to comply with the audit requirements, the following Project groups will be required to be created and users assigned to the groups that will control the user entitlements.\r\n|Access level|Role|Naming convention|\r\n|Tool|Tool Administrator\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|github-administrators|\r\n|Tool|Organization Member|github-users|\r\n|Tool|Tool Service Accounts|github-service accounts|\r\n|Organisation|Organisation Owner|github-<organisation name>-organisation owner|\r\n|Organisation|Organisation Service Accounts|github-<organisation name>-service accounts|\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-536", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - GitHub Enterprise IAM Remediation (Audit finding)", "updated": "2019-11-20T14:32:35+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise IAM Remediation (Audit finding)", "diff_to_upstream": []}, "CLS-535": {"assignee": "shridhar", "created": "2019-11-14T20:55:12+11:00", "creator": "shridhar", "description": "The purpose of this epic is to capture stories related to automatable tasks that are repetitive, tedious and manual in nature to improve productivity, stability, consistency and eliminate human errors.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-535", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "shridhar", "status": "Epic with Squad", "summary": "DVE - Enterprise Artifactory SRE & Automation Initiatives", "updated": "2019-11-21T14:50:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory SRE & Automation Initiatives", "diff_to_upstream": []}, "CLS-534": {"assignee": "shridhar", "created": "2019-11-14T20:54:37+11:00", "creator": "shridhar", "description": "Currently GHE has been integrated with Splunk Enterprise, however there are no useful dashboards for monitoring and automated alerting capabilities setup.\r\n\r\nThe relevant dashboards and alerting mechanisms are required to be setup\u00a0to automate notification process when performance or other tool related issues occur.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-534", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - GitHub Enterprise Splunk Dashboards", "updated": "2019-11-20T19:18:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise monitoring dashboards and automated alerts", "diff_to_upstream": []}, "CLS-533": {"assignee": "shridhar", "created": "2019-11-14T20:53:59+11:00", "creator": "shridhar", "description": "The purpose of this epic is to capture stories related to automatable tasks that are repetitive, tedious and manual in nature to improve productivity, stability, consistency and eliminate human errors.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-533", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "shridhar", "status": "Epic in Progress", "summary": "DVE - GitHub Enterprise SRE & Automation Initiatives", "updated": "2019-11-28T17:48:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise SRE & Automation Initiatives", "diff_to_upstream": []}, "CLS-532": {"assignee": "shridhar", "created": "2019-11-14T20:53:00+11:00", "creator": "shridhar", "description": "{color:#172b4d}Currently GHE QA instance does not mimic Production configuration. This difference in configuration between Production & QA results results in lower confidence when applying changes in Production after configuring and testing changes in QA.{color}\r\n\r\n\u00a0\r\n\r\nAdditionally, an incidents encountered in Production cannot be easily simulated in the QA environment, thus introducing delays in incident resolution.\r\n\r\n{color:#172b4d}The intent of this epic is to remediate the QA environment to mimic the configuration available in Production.{color}", "fixVersions": [], "issuetype": "Epic", "key": "CLS-532", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - GitHub Enterprise QA Remediation", "updated": "2019-11-26T20:38:23+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise QA Remediation", "diff_to_upstream": []}, "CLS-531": {"assignee": "shridhar", "created": "2019-11-14T20:52:19+11:00", "creator": "shridhar", "description": "Currently EA QA instance does not mimic Production configuration. This difference in configuration between Production & QA results results in lower confidence when applying changes in Production after configuring and testing changes in QA.\r\n\r\nAdditionally, any incidents encountered in Production cannot be easily simulated in the QA environment, thus introducing delays in incident resolution.\r\n\r\nThe intent of this epic is to remediate the QA environment to mimic the configuration available in Production.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-531", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - Enterprise Artifactory QA Remediation", "updated": "2019-11-26T20:39:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory QA Remediation", "diff_to_upstream": []}, "CLS-530": {"assignee": "shridhar", "created": "2019-11-14T20:50:33+11:00", "creator": "shridhar", "description": "This a long running epic, which will contain stories, tasks and bugs related to BAU activities such as service requests from ANZ Engineering community, query and error resolution.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-530", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Epic with Squad", "summary": "DVE - Enterprise Artifactory BAU Epic", "updated": "2019-12-02T15:23:07+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory BAU Epic", "diff_to_upstream": []}, "CLS-528": {"assignee": "shridhar", "created": "2019-11-14T20:47:09+11:00", "creator": "shridhar", "description": "This a long running epic, which will contain stories, tasks and bugs related to BAU activities such as service requests from ANZ Engineering community, query and error resolution.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-528", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Epic with Squad", "summary": "DVE - GitHub Enterprise BAU", "updated": "2019-12-02T17:23:36+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise BAU", "diff_to_upstream": []}, "CLS-527": {"assignee": "shridhar", "created": "2019-11-14T20:44:09+11:00", "creator": "shridhar", "description": "The current version of GHE (2.16) will be discontinued on January 22, 2019. Moving to the latest version 2.18.x will help retain GitHub support as well as provide enhanced features that the engineering community requires across on-premise and cloud elements.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-527", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - GitHub Enterprise Upgrade (2.18.x)", "updated": "2019-11-27T15:05:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise Upgrade (2.18.x)", "diff_to_upstream": []}, "CLS-526": {"assignee": "shridhar", "created": "2019-11-14T18:55:11+11:00", "creator": "shridhar", "description": "Currently Enterprise Artifactory implementation is limited to configuration in Corporate zone. There are no instances available in Perimeter zone, which has resulted in Project teams having to manually migrate the build artifacts from Corporate zone into Perimeter zone where some of the Production applications are deployed. The manual effort is time consuming and prone to errors.\r\n\r\nHaving edge nodes defined in the Perimeter zone and configuring automated event based replication from Enterprise instance available in Corporate zone will alleviate the current issues being faced by Project teams and assist with seamless Production deployments.\r\n\r\nThis epic is dependent on successful implementation of requirements defined in epic #\u00a0CLS-524\u00a0DVE - Enterprise Artifactory High Availability\r\n\r\n.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-526", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - Enterprise Artifactory Edge nodes in Perimeter (Non HA)", "updated": "2019-11-26T20:38:51+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory Edge nodes in Perimeter (Non HA)", "diff_to_upstream": []}, "CLS-525": {"assignee": "shridhar", "created": "2019-11-14T18:47:38+11:00", "creator": "shridhar", "description": "Currently Enterprise Artifactory implementation is limited to configuration in Corporate zone. There are no instances available in Perimeter zone, which has resulted in DCX Project teams having to manually migrate the build artifacts from Corporate zone into Perimeter zone where some of the Production applications are deployed. The manual effort is time consuming and prone to errors.\r\n\r\nHaving edge nodes defined in the Perimeter zone and configuring automated event based replication from Enterprise instance available in Corporate zone will alleviate the current issues being faced by Project teams and assist with seamless Production deployments.\r\n\r\nThis epic is dependent on successful implementation of requirements defined in epic #\r\n\r\nCLS-524 DVE - Enterprise Artifactory High Availability.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-525", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Backlog", "summary": "DVE - DCX Artifactory Edge nodes in Perimeter (Non HA)", "updated": "2019-11-26T20:37:10+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - DCX Artifactory Edge nodes in Perimeter (Non HA)", "diff_to_upstream": []}, "CLS-524": {"assignee": "shridhar", "created": "2019-11-14T17:28:33+11:00", "creator": "shridhar", "description": "Currently Enterprise Artifactory has a single Production instance with no DR capabilities setup. In the event that the current instance fails in Production, there is no capability to fall back onto secondary live instance. The impact to wider engineering community is the inability for the teams to release features in Production for ANZ Business units that are supported by Projects.\r\n\r\nThe intent of this epic is to implement a highly available instance of Enterprise Artifactory that replicates the repositories and artifacts across two sites with switch over capabilities implemented to ensure that in the event of the Primary instance failing, the traffic is redirected to the secondary instance seamlessly, thus minimising the impacts to Project teams.\r\n\r\nThis is also a prerequisite change to implement Artifactory Edge nodes in Perimeter, which is being tracked as two separate epics:\r\n # {color:#FF0000}CLS-426\u00a0{color}DVE - Enterprise Artifactory Edge nodes in Perimeter (Non HA)\r\n\r\n # {color:#de350b}CLS-441\u00a0{color}DVE - DCX Artifactory Edge nodes in Perimeter (Non HA)\r\n\r\nThis change is critical to be implemented as part of Audit remediation.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-524", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Epic in Progress", "summary": "DVE - Enterprise Artifactory High Availability", "updated": "2019-11-26T20:40:28+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory High Availability", "diff_to_upstream": []}, "CLS-523": {"assignee": "delbustr", "created": "2019-11-14T13:00:41+11:00", "creator": "delbustr", "description": "Complete work started on\u00a0CLS-354\r\n\r\nand ensure all components in Shared services are monitored in SNOW, with alerts that are driven by cloud native as required or equivalent.\u00a0\r\n\r\nMight need to revisit how CMDB is doen in SNOW / Troux and , but end result shoudl be if somethign goes down in AWS we are allerted on 24/7 helpline adn that we have\u00a0 capability to action procedures / playbooks and make SLA\r\n\r\n\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-523", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic in Progress", "summary": "AWS - Complete support integration to SNOW - full automated", "updated": "2019-11-28T13:47:20+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Complete support integration to SNOW - full automated", "diff_to_upstream": []}, "CLS-522": {"assignee": "delbustr", "created": "2019-11-14T12:52:55+11:00", "creator": "delbustr", "description": "Work with on premise team to come up with an effective design to extend on premise services onto AWS, clearly articulating all moving parts and integration points, as well as operating model, with clear RACI on waht platform team/onprem can do.\r\n\r\n\u00a0\r\n\r\ndeliver working in infradev with outlook of next PI get certified onto non-prod-prod", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-522", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS - MQueue and ConDirect Design and Infradev for BS11 Workloads", "updated": "2019-11-28T13:56:38+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - MQueue and ConDirect Design and Infradev", "diff_to_upstream": []}, "CLS-521": {"assignee": "delbustr", "created": "2019-11-14T12:49:03+11:00", "creator": "delbustr", "description": "Prepare platform and deliver PEN testing for treatment T3\r\n\r\nschedule to start dec 2nd, likely to pause from dec 9 to jan 5 and restart after .\u00a0\r\n\r\n\u00a0\r\n|T3|Additional pen testing and remediation and closing out existing issues|", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-521", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic in Progress", "summary": "AWS - Prepare and Support Pen Testing T3", "updated": "2019-11-28T13:47:10+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Prepare and Support Pen Testing T3", "diff_to_upstream": []}, "CLS-520": {"assignee": "delbustr", "created": "2019-11-14T12:37:25+11:00", "creator": "delbustr", "description": "This is to cover the various treatments identified by Iprotect / ORA that are to be covered by squad. for Log capturign specifically.\u00a0\r\n\r\nDOD : will include prove that the following have been done :\r\n\r\nscheduled to Jan\r\n\r\n\u00a0Removal of learning accounts is in scope of this epic. >> Cloudtrail adn gurdduty for innovation, vpc flow logs and cloudwatch metrics\u00a0\r\n\r\n\u00a0\r\n|T11|Develop a solution to obtain logs from innovation and learning and send to Cyber Defence|\r\n|T13|Completion of SOC playbooks|\r\n|T17|Close out the logging gaps and ensure all required log data is being sent to Cyber Defence|", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-520", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS - PI6-Security Treatments Log Gaps T11,13,17", "updated": "2019-11-25T09:56:32+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - PI6-Security Treatments Log Gaps", "diff_to_upstream": []}, "CLS-519": {"assignee": "delbustr", "created": "2019-11-14T12:19:13+11:00", "creator": "delbustr", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-519", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic in Progress", "summary": "AWS BAU (Security) PI6", "updated": "2019-12-05T10:54:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS BAU (Security) PI6", "diff_to_upstream": []}, "CLS-518": {"assignee": "delbustr", "created": "2019-11-14T12:18:29+11:00", "creator": "delbustr", "description": null, "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-518", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic in Progress", "summary": "AWS BAU Task PI6", "updated": "2019-12-04T12:33:32+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS BAU Task PI6", "diff_to_upstream": []}, "CLS-517": {"assignee": "blackm", "created": "2019-11-14T09:54:39+11:00", "creator": "blackm", "description": "The team are carrying and will continue to carry a margin of technical debt.\r\n\r\nThis epic captures the highest priority technical debt which we plan to address during PI6.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-517", "labels": ["IACP"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "CNPS: Resolving Existing Technical Debt", "updated": "2019-11-22T10:55:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Tech Debt", "diff_to_upstream": []}, "CLS-516": {"assignee": "blackm", "created": "2019-11-13T15:29:15+11:00", "creator": "blackm", "description": "Currently we need to do a lot of work to enable the consumption of TFE because teams are expected to acquire/implement their own Bamboo agents.\r\n\r\nDevelop a capability for us to provide this centrally, and automate the process so Developer Experience in TFE is up to our standards.\r\n\r\nAcceptance:\r\n- Clear story around on-prem VMs to run build agents for TFE\r\n- Provision VMs for use as Bamboo agents for TFE\r\n- Automate setup of VMs (install Bamboo agent and docker)\r\n- Setup of docker runners for TFE execution\r\n- View of Bamboo vs Azure DevOps", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-516", "labels": ["IACP"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "IACP: CI Build Agents for TFE API-driven Workflow", "updated": "2019-11-21T13:54:49+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: CI Build Agents", "diff_to_upstream": []}, "CLS-515": {"assignee": "blackm", "created": "2019-11-13T15:25:21+11:00", "creator": "blackm", "description": "The existing CI/CD pipeline for automating TFE needs further refinement to enable safe and simple provisioning and management of TFE Org Workspaces and RBAC Teams/Permissions.\r\n\r\nAcceptance:\r\n- Beta pipeline which can automate groups/teams and permissions\r\n- Beta pipeline which can automate workspaces\r\n- Onboarding docs for customers\r\n- Production-ready story and successful onboarding on one customer to prove it out", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-515", "labels": ["IACP"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "IACP: Beta of Automated TFE Org Management", "updated": "2019-11-22T12:07:43+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Org Configuration", "diff_to_upstream": []}, "CLS-514": {"assignee": "blackm", "created": "2019-11-13T15:16:51+11:00", "creator": "blackm", "description": "New approach to provisioning TFE orgs, implemented via the TFE API and orchestrated from _outside_ TFE.\r\n\r\nAcceptance:\r\n- Can create/update TFE orgs\r\n- Clear onboarding docs for customers\r\n- Central TFE management org is created", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-514", "labels": ["IACP"], "lastViewed": "2019-11-22T10:04:04.643000+11:00", "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "IACP: Beta of Automated TFE Org Provisioning", "updated": "2019-11-28T11:47:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Org Provisioning", "diff_to_upstream": []}, "CLS-513": {"assignee": "stathaml", "created": "2019-11-13T15:07:18+11:00", "creator": "patelm18", "description": "*Epic Point: 13*\u00a0\r\n\r\n*Description:*\u00a0\u00a0Design and Implement tactical application cloud proxy.\r\n\r\n*Acceptance Criteria:*\r\n * *GCP*\r\n ** Change management and Production deployment - 3 Points\r\n ** Complete the GCP Squid test with Artifactory - 3 Points\r\n ** Complete Squid test with Institutional\u00a0 - Data insights Azure B2C -1 Points\r\n ** Complete Process Scripts\r\n ** Complete Process documentation\r\n ** Handover to Sam (PO) - 2 Points\r\n\r\n * *AWS*\r\n ** Confirm approach with product owner (Sam) for AWS proxy uplift - 2 Points\u00a0\r\n\r\n * \u00a0*Design*\r\n ** Design to be taken to appropriate governance forums - 2 Points**\r\n * *BAU*\r\n ** Provide BAU support for Tactical Cloud Proxy\r\n\r\n\u00a0\r\n\r\n*Dependency:*\r\n * There may be a dependency on Cyber Defence\r\n * There may be a dependency on Cloud Architecture\r\n * Schedule workshop with CNP squad to understand Application Pipeline (Spinnaker) more", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-513", "labels": ["NA"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic with Squad", "summary": "CNA - Design & Implementation of tactical application cloud proxy on cloud", "updated": "2019-11-21T09:54:27+11:00", "estimate": null, "epic_ref": null, "epic_name": " Design & Implementation of tactical application cloud proxy on cloud", "diff_to_upstream": []}, "CLS-512": {"assignee": "blackm", "created": "2019-11-13T14:51:58+11:00", "creator": "blackm", "description": "We should continue to ensure Spinnaker is on the latest version.\r\n\r\nExisting issues which will be solved by 1.17:\r\n - Risks CNPS-1035 and CNPS-1037 will be mitigated by this upgrade", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-512", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "CNPS: Upgrade Spinnaker to 1.17", "updated": "2019-11-22T10:57:07+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Spinnaker 1.17", "diff_to_upstream": []}, "CLS-511": {"assignee": "stathaml", "created": "2019-11-13T14:28:47+11:00", "creator": "patelm18", "description": "*Epic Points: 18 Points*\r\n\r\n*Descriptions:*\r\n * Define the high level architecture for a centralised continuous assurance as a service that can be repeatedly consumed by multiple CI/CD pipelines.\r\n * Define End to end LifeCycle Model for Service Certification\r\n\r\n*Acceptance Criteria:*\r\n\r\n1. Design the architecture for centralised continuous services.\r\n * Continuous Assurance Services & Strategic Governance Model\r\n * Security Model - Continuous Integration/Continuous Delivery\u00a0\u00a0\r\n * Continuous Assurance Maturity Model\r\n\r\n2. End to End Service Certification LifeCycle Model\u00a0\r\n * Formalising Alpha/Beta/GA\r\n * Responsibilities Matrix\r\n * Certification Process (beyond security)\r\n\r\n3. Socialise the End to End Service certification LifeCycle Model with key stakeholder\r\n\r\n\u00a0\r\n\r\n*Dependancy:*\r\n\r\n\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-511", "labels": ["T02", "T30", "SE01"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic in Progress", "summary": "CNA - Design the architecture for the centralised continuous assurance service", "updated": "2019-11-27T09:07:42+11:00", "estimate": null, "epic_ref": null, "epic_name": "Design the architecture for the centralised continuous assurance service", "diff_to_upstream": []}, "CLS-510": {"assignee": "stathaml", "created": "2019-11-13T14:01:23+11:00", "creator": "patelm18", "description": "*Epic Point:*\u00a0*6*\r\n\r\n*Description:*\u00a0Define on-going monitoring checks\u00a0 (redlock) for AWS S3 service to ensure that the services deployed in cloud platform meet defined guardrails and squad can demonstrate continuous assurance capability\r\n\r\n*Acceptance Criteria:*\r\n # Learn and set up Red Lock Environments to AWS - 3 Points\r\n # Write on-going monitoring policy check for one services (AWS S3) - 3 Points\r\n\r\n*_Note: Remediation activities will be out of scope for this epic._*\r\n\r\n*Dependency:*\r\n\r\n1. Access to CNA Squad members of the AWS Innovation/Test environment - AWS Squad\r\n\r\n2. Redlock environment connect to AWS ANZ instance - AWS Squad and Cyber Defence\r\n\r\n3.\u00a0Training on Redlock Query to CNA Squad - Cyber Defence\r\n\r\n4.\u00a0Dashboard for the violation on alerts for security guardrails drift (consider access to workload owner) - Cyber Defence\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-510", "labels": ["SE03"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic Ready for Squad", "summary": "CNA-Ongoing Monitoring Policy (Redlock) for 1 AWS Service", "updated": "2019-11-20T16:41:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "Ongoing Monitoring Policy (Redlock) for 1 AWS service", "diff_to_upstream": []}, "CLS-509": {"assignee": "stathaml", "created": "2019-11-13T13:53:07+11:00", "creator": "patelm18", "description": "*Epic Points:*\u00a0 *6 Points*\r\n\r\n*Description:*\u00a0AWS Service contract for continuous validations service that will define key metrics, scope and RACI for the service.\r\n\r\n*Acceptance Criteria:*\r\n # Review existing Service Certification of AWS\r\n # Define and agree on roles and responsibilities.\u00a0\r\n # Update service contract for continuous validations (Scope, Key metrics, RACI)\r\n # Service Certification (confluence page) for AWS S3 service with agreed template.\r\n\r\n*Dependency -*\u00a0AWSSQ-1575\r\n\r\n1. Access to AWS environment - AWS Squad\r\n\r\n2. Walkthrough of AWS pipeline - AWS Squad\r\n\r\n3. Artefacts and demo from AWS squad - AWS Squad\r\n\r\n4. Access to AWS innovation/test environment - AWS Squad", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-509", "labels": ["SE03"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic with Squad", "summary": "CNA - AWS Service Contract for Continuous Validation", "updated": "2019-11-21T16:50:47+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS Service Contract for Continuous Validation", "diff_to_upstream": []}, "CLS-508": {"assignee": "blackm", "created": "2019-10-16T12:08:42+11:00", "creator": "blackm", "description": "We need to add container image scanning capability to Artifactory.\r\n\r\nPre-reqs:\r\n - We now have a commercial licence for JFrog X-Ray", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-508", "labels": [], "lastViewed": "2019-11-21T16:54:34.617000+11:00", "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic in Progress", "summary": "CNPS: Add image scanning capability via JFrog X-Ray", "updated": "2019-11-25T11:30:28+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: X-Ray Integration", "diff_to_upstream": []}, "CLS-507": {"assignee": "blackm", "created": "2019-09-04T17:30:13+10:00", "creator": "tanga", "description": "Currently we have no automated approach to testing Spinnaker releases.\r\n\r\nWe need to build this capability, so we can automatically test new upstream releases to Spinnaker, and create an internal capability for testing our Spinnaker platform upgrades.\r\n\r\nThis must include:\r\n * Ability to run against arbitrary Spinnaker/Armory versions\r\n * Spinnaker test pipelines to target separate sandpit cluster (as our customers do)\r\n * Integration with Artifactory staging", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-507", "labels": [], "lastViewed": "2019-11-21T16:54:55.275000+11:00", "priority": "Normal", "project": "CLS", "reporter": "tanga", "status": "Epic with Squad", "summary": "CNPS: Spinnaker Automated Testing", "updated": "2019-11-22T10:05:02+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Spinnaker Automated Testing", "diff_to_upstream": []}, "CLS-506": {"assignee": "blackm", "created": "2019-11-13T10:44:28+11:00", "creator": "blackm", "description": "The Dynamic Accounts feature was released in Spinnaker version 1.16, this will allow us to add or modify accounts without needing to reload the whole configuration.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-506", "labels": [], "lastViewed": "2019-11-21T16:55:37.224000+11:00", "priority": "Normal", "project": "CLS", "reporter": "headenj1", "status": "Epic with Squad", "summary": "CNPS: Enable Dynamic Accounts in Spinnaker", "updated": "2019-11-22T10:55:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Spinnaker Dynamic Accounts", "diff_to_upstream": []}, "CLS-505": {"assignee": "stathaml", "created": "2019-11-12T12:15:51+11:00", "creator": "patelm18", "description": "*Epic Point:*\u00a0*13 Points*\r\n\r\n*Description:*\u00a0Define post deployment audit check (redlock/Prisma) for Cloud Storage,Cloud SQL and Big Query\u00a0 to ensure that the services deployed in cloud platform meet defined guardrails and squad can demonstrate continuous assurance capability\r\n\r\n*Acceptance Criteria:*\r\n # Work with Cyber Defence to setup Redlock environments - 3 Points\r\n # Write on-going monitoring policy check for three services (cloud storage, big query and cloud sql) - 9 Points\r\n\r\n*_Note: Remediation activities will be out of scope for this epic._*\r\n\r\n*Dependency:*\r\n\r\n1. Organisational level rights for one direct and anz.com - GCP Squad\r\n\r\n2. Redlock/Prisma environment and connected to GCP - GCP Squad and Cyber Defence\r\n\r\n3. Training on Redlock Query to CNA Squad - Cyber Defence\r\n\r\n4. Dashboard for the violation on alerts for security guardrails drift (consider access to workload owner) - Cyber Defence\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-505", "labels": ["SE03", "T29.b"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic with Squad", "summary": "CNA- On-going monitoring policy (Prisma) for three GCP Services (T29.b)", "updated": "2019-11-19T11:03:08+11:00", "estimate": null, "epic_ref": null, "epic_name": "On-going monitoring policy (Redlock) for three GCP Services (T29.b)", "diff_to_upstream": []}, "CLS-504": {"assignee": "stathaml", "created": "2019-11-12T11:59:12+11:00", "creator": "patelm18", "description": "*Epics Points: 14 Points*\r\n\r\n*Description:*\u00a0Define pre-deployment check (sentinel Policy) for Cloud Storage, Cloud SQL and Big Query\u00a0 to ensure that the services are deployed in cloud platform that meet defined guardrails.\r\n\r\n*Acceptance Criteria:*\r\n # Learn and Test sentinel environment for pre-deploy checks - 5 Points\r\n # Write pre-deploy check (sentinel policy) for three services\u00a0_(Cloud storage, Cloud SQL and big query). - 9 Points_\r\n\r\n\u00a0\r\n\r\n*_Note: Remediation activities will be out of scope for this epic._*\r\n\r\n*Dependency:*\r\n # TFE is being used for deployment of services being checked (Big Query, Cloud SQL and Cloud Storage)\r\n # Cloud Native Platform and GCP Team to have sentinel environment has been setup. - CNA & GCP Squad\r\n # CNA squad will required access to sentinel environment. - CNA Squad - *CNPS-1333*", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-504", "labels": ["SE03", "T29.b"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic with Squad", "summary": "CNA- Pre-Deploy check (sentinel policy) for three GCP Services (T29.b)", "updated": "2019-11-20T13:26:32+11:00", "estimate": null, "epic_ref": null, "epic_name": "Pre-Deploy check (sentinel policy) for three GCP Services", "diff_to_upstream": []}, "CLS-503": {"assignee": "stathaml", "created": "2019-11-12T11:24:53+11:00", "creator": "patelm18", "description": "*Epic Points: 20 Points*\r\n\r\n*Description:*\u00a0Define technical security standard/requirement for the google services\u00a0to ensure that the services consumed by workloads are compliant to security standards.\r\n\r\n*Acceptance Criteria:*\r\n # Define guardrails for all Phase 1 consumable GCP Cloud Services - *15 Points*\r\n\r\n*Phase 1 Google Services*\r\n * Cloud SQL (PD)\r\n * Cloud KMS (PD)\r\n * Firebase-Remote Config (PD)\r\n * Firebase-FireStore (PD)\r\n * DataFlow (PD)\r\n * GKE Finalise (PD)\r\n * Container Registry (PD)\r\n * Cloud Pubsub (PD)\r\n * AppEngine (LS)\r\n * BigTable (LS)\r\n * Cloud Functions (AN)\r\n * Stack-driver (AN)\r\n * Cloud Composer (AN)\u00a0\r\n * Cloud Build (MP)\r\n * Cloud Source Repository (MP)\r\n\r\n2. Review and Endorse the Service Certification for above services - 5 Points\r\n\r\nNote:\u00a0\r\n # Define guardrails in Confluence page, as first step of service certification.\r\n # Consider organisational policy for all the service certification for the above GCP Service", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-503", "labels": ["SE03", "T29.b"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "patelm18", "status": "Epic with Squad", "summary": "CNA-Guardrails for GCP Cloud Services - Phase 1 (T29.b)", "updated": "2019-11-19T16:05:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "Phase 1 guardrails for GCP Cloud Services (10 GCP services)", "diff_to_upstream": []}, "CLS-494": {"assignee": "blackm", "created": "2019-10-24T15:25:28+11:00", "creator": "blackm", "description": "The GCP squad have handed the Cloud Build worker pool to CNP squad to further develop capability.\r\n\r\nThis epic should capture all work included as part of this \"handover\".\r\n\r\nQuestions:\r\n - Access to on-prem from Cloud Build?\r\n - APRA-concerns with a shared service?", "fixVersions": [], "issuetype": "Epic", "key": "CLS-494", "labels": [], "lastViewed": "2019-11-22T09:44:38.142000+11:00", "priority": "Normal", "project": "CLS", "reporter": "blackm", "status": "Epic with Squad", "summary": "CNPS: Review architecture & automation of Private Cloud Build worker pool", "updated": "2019-11-22T10:57:00+11:00", "estimate": null, "epic_ref": null, "epic_name": "PI6: Private Cloud Build", "diff_to_upstream": []}, "CLS-492": {"assignee": "shridhar", "created": "2019-09-09T19:09:01+10:00", "creator": "shridhar", "description": "The intent of this epic is to implement a high availability configuration for GitHub Enterprise.\r\n\r\nCurrently GHE has 1 Primary node with 2 replication nodes running in Production instance with no DR capabilities setup. The current configuration does not divert the traffic to either of the replication nodes in the event of Primary node failing. There is no DR node available with no capability to fall back onto secondary live instance. The impact to wider engineering community is the inability for the teams to release features in Production for ANZ Business units that are supported by Projects.\r\n\r\nThe intent of this epic is to implement a highly available instance of GHE that replicates the repositories and projects across two sites with switch over capabilities implemented to ensure that in the event of the Primary instance failing, the traffic is redirected to the secondary instance seamlessly, thus minimizing the impacts to Project teams.\r\n\r\nThis change is critical to be implemented as part of Audit remediation.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-492", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - GitHub Enterprise High Availability (Analysis)", "updated": "2019-11-20T19:49:43+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise High Availability", "diff_to_upstream": []}, "CLS-490": {"assignee": "shridhar", "created": "2019-10-17T15:57:01+11:00", "creator": "shridhar", "description": "The current version of GHE (2.16) will be discontinued on January 22, 2019. Moving to the latest version 2.18.x will help retain GitHub support as well as provide enhanced features that the engineering community requires across on-premise and cloud elements.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-490", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - GitHub Enterprise Upgrade (2.18.x)", "updated": "2019-11-20T19:44:28+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise Upgrade (2.18.x)", "diff_to_upstream": []}, "CLS-489": {"assignee": "delbustr", "created": "2019-10-17T13:54:53+11:00", "creator": "soonw", "description": "Acceptance criteria: documentation for iprotect Evidence control list is gather and sent to the analyst , note it does not need to be the perfect answer but it is what we have right now. In addition\u00a0 gaps in platform identifies in PI 4 are action and demonstrated to be close.\r\n\r\n\u00a0\r\n\r\nThis epic is expected to be swarmed around to true state of platform produce evidence quickly, and identify gaps\r\n\r\n\u00a0\r\n\r\nOne story to perform an initial high level analysis; outputs for each ORA category are:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 YES \u2013 we have evidence, and it is provided to the ORA analyst.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NO \u2013 we don\u2019t have the evidence, so we need to produce a new artefact (with any accompanying organisational changes needed), possibly raising a risk covering the gap if the work cannot be done in the current PI.\u00a0 [So we\u2019d need to agree that a risk can cover us while an app goes into AWS production]\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 N/A \u2013 we believe the ORA item is Not Applicable to our cloud platform, e.g. \u201c25\u00a0 SDM Change Order raised for Backup Scheduling\u201d\r\n\r\n\u00a0\r\n\r\nA second story to engage with the ORA analyst, agree the position on each ORA item, and plan next steps:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree evidence is sufficient for ORA items we have covered.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree work required to fill the gap, and/or risk raised to make way for an app getting in to production.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree which ORA items are N/A for our platform.\r\n\r\n\u00a0\r\n\r\nA third story to cover future work to fill gaps:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Write stories and estimate the effort required to cover ORA gaps. One story per ORA item.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-489", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-Action to help with Iprotect - PI5", "updated": "2019-11-25T15:25:41+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Action to help with Iprotect", "diff_to_upstream": []}, "CLS-487": {"assignee": "delbustr", "created": "2019-10-04T09:11:38+10:00", "creator": "soonw", "description": "This Epic is to track Security related BAU activities", "fixVersions": [], "issuetype": "Epic", "key": "CLS-487", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS BAU (Security) PI5", "updated": "2019-11-25T15:25:04+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - BAU (Security) PI5", "diff_to_upstream": []}, "CLS-486": {"assignee": "chahalv", "created": "2019-09-25T15:46:14+10:00", "creator": "ganalc1", "description": "Risk:\r\ncreating pipeline from scratch is taking longer than expected as there are multiple handoffs with different teams. i.e. SDCP team to setup bamboo, windows team to provide agent / VM\r\n\r\nNo end to end process documentation available for new projects.\r\n\r\nmitigation:\r\ncurrently sharing bamboo agent with TFE platform\r\ndocumenting journey as a new project", "fixVersions": [], "issuetype": "Delivery Risk", "key": "CLS-486", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "ganalc1", "status": "Backlog", "summary": "Risk - limited documentation available for initial bamboo pipeline development", "updated": "2019-09-25T15:46:14+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CLS-485": {"assignee": "chahalv", "created": "2019-09-25T15:40:22+10:00", "creator": "ganalc1", "description": "risk :\r\nthe alpha cluster and shared cluster are not assessed by security. Shared resource may not have enough capacity to complete assessment of cluster design and alpha service\r\n\r\nmitigation:\r\ncurrently sharing shared service security member to develop pack for SPDC ", "fixVersions": [], "issuetype": "Delivery Risk", "key": "CLS-485", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "ganalc1", "status": "Backlog", "summary": "Risk - no security partner assigned to K8s Squad", "updated": "2019-09-25T15:40:22+10:00", "estimate": null, "epic_ref": null, "epic_name": "", "diff_to_upstream": []}, "CLS-484": {"assignee": "delbustr", "created": "2019-09-13T15:22:29+10:00", "creator": "soonw", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-484", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS BAU Task PI5", "updated": "2019-11-25T15:24:47+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS BAU Task PI5", "diff_to_upstream": []}, "CLS-483": {"assignee": "vamshiky", "created": "2019-09-12T14:22:13+10:00", "creator": "morriss9", "description": "Sprint 4Splunk ReDesign - Splunk Container Application Baseline ConfigurationEstimate from below stories: Fixed PriceDependenciesAccess to Spinnaker and relevant repositoriesRequired networking rules and access policies implemented for IaC and application deployment workflows within GKE", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-483", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Ready for Squad", "summary": "GCP -\u00a0O3E242 - S -Splunk ReDesign - Splunk Container Application Baseline Configuration", "updated": "2019-10-14T11:32:51+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E242 - S -Splunk ReDesign - Splunk Container Application Baseline Configuration", "diff_to_upstream": []}, "CLS-482": {"assignee": "vamshiky", "created": "2019-09-12T14:22:10+10:00", "creator": "morriss9", "description": "Sprint 4Splunk Container Application DeploymentEstimate from below stories: Fixed PriceDependenciesAccess to Spinnaker and relevant repositoriesRequired networking rules and access policies implemented for IaC and application deployment workflows within GKE", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-482", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Ready for Squad", "summary": "GCP -\u00a0O3E241 - S -Splunk ReDesign - Splunk Container Application Deployment", "updated": "2019-10-14T11:32:56+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E241 - S -Splunk ReDesign - Splunk Container Application Deployment", "diff_to_upstream": []}, "CLS-481": {"assignee": "vamshiky", "created": "2019-09-12T14:22:07+10:00", "creator": "morriss9", "description": "Sprint 3Splunk Container Image PreparationEstimate from below stories: Fixed PriceDependenciesSupport from Hashicorp IaM team to integrate with Hashicorp Vault Secrets Management PlatformRelevant accounts and access to Secrets Management Platform providedRequired networking rules and access policies implemented for Artifactory integration", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-481", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Ready for Squad", "summary": "GCP -\u00a0O3E240 - S -Splunk ReDesign - Splunk Container Image Preparation", "updated": "2019-10-29T14:09:50+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E240 - S -Splunk ReDesign - Splunk Container Image Preparation", "diff_to_upstream": []}, "CLS-480": {"assignee": "vamshiky", "created": "2019-09-12T14:22:04+10:00", "creator": "morriss9", "description": "Sprint 3Secrets Management IntegrationEstimate from below stories: Fixed PriceDependenciesSupport from Hashicorp IaM team to integrate with Hashicorp Vault Secrets Management PlatformRelevant accounts and access to Secrets Management Platform providedRequired networking rules and access policies implemented for Artifactory integration", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-480", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Ready for Squad", "summary": "GCP -\u00a0O3E239 - S -Splunk ReDesign - Secrets Management Integration", "updated": "2019-10-29T14:09:50+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E239 - S -Splunk ReDesign - Secrets Management Integration", "diff_to_upstream": []}, "CLS-479": {"assignee": "vamshiky", "created": "2019-09-12T14:22:00+10:00", "creator": "morriss9", "description": "Sprint 2Splunk ReDesign - Splunk Containerisation Infrastructure as Code (IaC)Estimate from below stories: Fixed PriceDependenciesRelevant repositories made available for IaC pipeline and artefact configuration (i.e. GitHub, Artifactory, etc.)Access to IaC pipelineANZ laptop provided with relevant access to GKE deployment pipeline services (i.e. Terraform, Spinnaker, Bamboo, etc.)Service accounts provided for all IaC pipeline modules, i.e (Terraform, Artifactory, Bamboo, etc.)Requirements provided for endorsement of deployment and use of container images within ANZSupport to ensure prepared Splunk container image can gain endorsement for use within ANZ GKETerraform access to be providedTarget non-production Kubernetes Cluster and namespace provisioned and ready for useAll requested non-production firewall rules implemented", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-479", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic in Progress", "summary": "GCP -\u00a0O3E238 - S -Splunk ReDesign - Splunk Containerisation Infrastructure as Code (IaC)", "updated": "2019-11-20T21:27:00+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E238 - S -Splunk ReDesign - Splunk Containerisation Infrastructure as Code (IaC)", "diff_to_upstream": []}, "CLS-478": {"assignee": "vamshiky", "created": "2019-09-12T14:21:57+10:00", "creator": "morriss9", "description": "Sprint 2Splunk Heavy Forwarder (HF) Container ImageEstimate from below stories: Fixed PriceDependenciesRelevant repositories made available for IaC pipeline and artefact configuration (i.e. GitHub, Artifactory, etc.)Access to IaC pipelineANZ laptop provided with relevant access to GKE deployment pipeline services (i.e. Terraform, Spinnaker, Bamboo, etc.)Service accounts provided for all IaC pipeline modules, i.e (Terraform, Artifactory, Bamboo, etc.)Requirements provided for endorsement of deployment and use of container images within ANZSupport to ensure prepared Splunk container image can gain endorsement for use within ANZ GKETerraform access to be providedTarget non-production Kubernetes Cluster and namespace provisioned and ready for useAll requested non-production firewall rules implemented", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-478", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic in Progress", "summary": "GCP -\u00a0O3E237 - S -Splunk ReDesign - Splunk Heavy Forwarder (HF) Container Image", "updated": "2019-11-20T21:27:01+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E237 - S -Splunk ReDesign - Splunk Heavy Forwarder (HF) Container Image", "diff_to_upstream": []}, "CLS-477": {"assignee": "vamshiky", "created": "2019-09-12T14:21:53+10:00", "creator": "morriss9", "description": "Sprint 2Splunk Environment PreparationEstimate from below stories: Fixed PriceDependenciesRelevant repositories made available for IaC pipeline and artefact configuration (i.e. GitHub, Artifactory, etc.)Access to IaC pipelineANZ laptop provided with relevant access to GKE deployment pipeline services (i.e. Terraform, Spinnaker, Bamboo, etc.)Service accounts provided for all IaC pipeline modules, i.e (Terraform, Artifactory, Bamboo, etc.)Requirements provided for endorsement of deployment and use of container images within ANZSupport to ensure prepared Splunk container image can gain endorsement for use within ANZ GKETerraform access to be providedTarget non-production Kubernetes Cluster and namespace provisioned and ready for useAll requested non-production firewall rules implemented", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-477", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic in Progress", "summary": "GCP -\u00a0O3E236 - S -Splunk ReDesign - Splunk Environment Preparation", "updated": "2019-10-29T14:09:49+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E236 - S -Splunk ReDesign - Splunk Environment Preparation", "diff_to_upstream": []}, "CLS-476": {"assignee": "vamshiky", "created": "2019-09-12T14:21:50+10:00", "creator": "morriss9", "description": "Sprint 1Team setup, mobilisation and kick-offEstimate from below stories: Fixed PriceDependenciesANZ to ensure relevant project sponsor stakeholders to be identified and available for kick-off meetings and planningANZ Splunk TechOps team to be available for requirement definition, and to endorse naming conventions and network portsANZ to provide Shared Services Kubernetes cluster design for reference, inclusive of networking and namespace designANZ to raise and process prepared firewall requests for non-production and production networking requirements", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-476", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP -\u00a0O3E235 - S - Splunk ReDesign - Team setup, mobilisation and kick-off", "updated": "2019-10-29T14:09:48+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP -\u00a0O3E235 - S - Splunk ReDesign - Team setup, mobilisation and kick-off", "diff_to_upstream": []}, "CLS-475": {"assignee": "delbustr", "created": "2019-09-12T11:37:25+10:00", "creator": "soonw", "description": "Reimagine the old AWS Roadmaps page in Confluence ([https://confluence.service.anz/pages/viewpage.action?pageId=409501879]) so that:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 It is more of an overall \u2018AWS Platform Status\u2019 page, less of a long-term schedule or \u2018wish list\u2019 for upcoming work.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 It is usable / editable by all members of the AWS Squad (incl Product Owner & TAA), not just an \u2018architectural roadmap\u2019 owned by one person.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 It is useful to other people in ECP, and to our customers.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 AWS Platform components are categorised in a way that it is easy for people to understand what functions of the platform are in place, and where there are gaps in functionality or maturity.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 We link to other Confluence pages \u2013 e.g. Pipeline Consumables \u2013 to show more detailed status of components already built or planned. We can also link to sub-pages if we want to add more detail (but don\u2019t clutter up the main Platform Status page).\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 We link to +epics+ committed in the +current PI+ (or PI about to start if we are in Innovation / PI Planning).\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 We do +not+ attempt to plan beyond the next PI (long term planning can be handled elsewhere).\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Most of all, the page must be kept up to date. Some kind of weekly or end-of-sprint review process could be useful.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-475", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Backlog", "summary": " AWS Roadmaps / Platform Feature Status", "updated": "2019-10-15T19:58:57+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS Roadmaps / Platform Feature Status", "diff_to_upstream": []}, "CLS-474": {"assignee": "ganalc1", "created": "2019-09-11T11:52:01+10:00", "creator": "ganalc1", "description": "Release a shared cluster as code for Alpha release to out customers. to allow them to begin testing and development.\r\n\r\n- Develop shared cluster as code leveraging existing controls already available in the GKE environment\r\n- Develop rules for engagement for Alpha release\r\n- high level design\r\n- Alpha available in GCP non-production environment \r\n\r\ndependencies:\r\nSecurity squad:\r\n\r\n- Review existing controls already available in the GKE environment and provide a Alpha shared cluster security MVP\r\n- prepare security PDC pack review and approval\r\n\r\nFarrell, Andrew to lead the update of the shared cluster design and take to IAF for review and approval", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-474", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "k8s - Alpha Shared Cluster build (Alpha SC1)", "updated": "2019-11-20T17:14:53+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - Alpha Shared Cluster build", "diff_to_upstream": []}, "CLS-473": {"assignee": "ganalc1", "created": "2019-09-11T11:40:07+10:00", "creator": "ganalc1", "description": "k8s - Build Anthos Proof of concept", "fixVersions": [], "issuetype": "Epic", "key": "CLS-473", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Ready for Squad", "summary": "k8s - Build Anthos Proof of concept", "updated": "2019-11-25T11:20:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - Build Anthos Proof of concept", "diff_to_upstream": []}, "CLS-472": {"assignee": "ganalc1", "created": "2019-09-11T11:39:17+10:00", "creator": "ganalc1", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-472", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Ready for Squad", "summary": "k8s - Build GKE on prem Proof of concept", "updated": "2019-11-19T17:03:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - Build GKE on prem Proof of concept", "diff_to_upstream": []}, "CLS-471": {"assignee": "ganalc1", "created": "2019-09-11T11:38:37+10:00", "creator": "ganalc1", "description": "provide customer on boarding process to alpha shared cluster to allow initial testing and development with guardrails \r\n\r\n* provide standard pipeline for deployment into cluster\r\n* define support rules and \r\n* Test onboarding code and release\r\n\r\ndependencies:\r\n\r\nCloud native tooling team to provide on-boarding process ", "fixVersions": [], "issuetype": "Epic", "key": "CLS-471", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "k8s - Alpha Shared Cluster customer boarding", "updated": "2019-11-20T17:17:13+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - Alpha Shared Cluster customer boarding", "diff_to_upstream": []}, "CLS-470": {"assignee": "ganalc1", "created": "2019-09-11T11:37:52+10:00", "creator": "ganalc1", "description": "develop MVP for Non production shared clusters As Code\r\n\r\n* Develop low level design for implementation of MVP\r\n* shared cluster made available in GCP non production environment\r\n* name space provisioning as a service\r\n* Cluster developed inline with documented UAM / IAM and solution design\r\n* Develop terraform code to provision a IAC environment for shared cluster and namespace provisioning\r\n\r\nDependencies:\r\n\r\nShared Services: Service now resource - Babu required for self service namespace service catalog\r\n\r\nSecurity : define non production MVP and prepare for production artifacts / iprotect\r\n", "fixVersions": [], "issuetype": "Epic", "key": "CLS-470", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "k8s - Shared cluster build (non- prod) MVP", "updated": "2019-11-20T17:18:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - MVP cluster build (non- prod) MVP ", "diff_to_upstream": []}, "CLS-469": {"assignee": "ganalc1", "created": "2019-09-11T11:36:42+10:00", "creator": "ganalc1", "description": "Develop Shared cluster design MVP with self service namespace\r\n\r\n* Design reviewed and approved in IAF\r\n* Solution endorsed in Security PDC\r\n* UAM / IAM documented and approved including self service namespace\r\n* Develop MVP and strategic design\r\n* Namespace provisioning self service design\r\n* Design catering for multiple shared clusters\r\n* Design to cater for multiple zones?\r\n* develop cluster assessment criteria (applicability for shared cluster or dedicated cluster)\r\n* design to cater for traffic flow between public, private and internal shared clusters\r\n\r\n\r\nGoogle@\r\n\r\ncreate bamboo pipeline /separate Repo\r\n\r\nnetworking ips' subnets for shared cluster\r\n\r\nPraveen, Pranita\r\n\r\ncan we get Vivek to rout VPC through no prem firewall\r\n\r\nFarrell, Andrew to map current state of GCP networking / ip addressing etc. to highlight issues / limitations with existing clusters\r\n\r\nFarrell, Andrew to lead the update of the shared cluster design and take to IAF for review and approval\r\n\r\nSecurity squad:\r\n\r\nto review In Progress - GKE Service - Security Standard Baseline and define Multiple MVP's for release\r\nprepare security PDC pack review and approval", "fixVersions": [], "issuetype": "Epic", "key": "CLS-469", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic in Progress", "summary": "k8s - MVP kubernetes cluster design ", "updated": "2019-11-25T16:46:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - MVP kubernetes cluster design", "diff_to_upstream": []}, "CLS-460": {"assignee": "vamshiky", "created": "2019-09-11T11:00:46+10:00", "creator": "morriss9", "description": "Design documented and socialised with GCP Squad and stakeholdersDesign implementedDesign tested with a sample pipeline.Estimate from below stories: 25Dependency:UAM Team - Access to GCP Secrets engine and Ability to deploy vault sentinel policies.\u00a0UAM Team - Understand existing namespace management process if there is one.\u00a0UAM to provide key stakeholders list for socialisation.", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-460", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - O1E228\u00a0- S - Implement Vault Secrets Engine Management MVP - (ORA #T48)", "updated": "2019-11-15T11:22:56+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - O1E228\u00a0- S - Implement Vault Secrets Engine Management MVP - (ORA #T48)", "diff_to_upstream": []}, "CLS-459": {"assignee": "vamshiky", "created": "2019-09-11T11:00:43+10:00", "creator": "morriss9", "description": "Investigate points that may fail and alternatives\r\n\r\nDocument BC plan(s)\r\n\r\nCreate Test plans\r\n\r\nFor relevant Foundation services\r\n\r\n*Estimate from below stories: 8*", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-459", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - O2E20 -\u00a0Business Continuity for Foundation services", "updated": "2019-11-14T13:35:42+11:00", "estimate": 8.0, "epic_ref": null, "epic_name": "GCP - O2E20 -\u00a0Business Continuity for Foundation services", "diff_to_upstream": []}, "CLS-458": {"assignee": "vamshiky", "created": "2019-09-11T11:00:40+10:00", "creator": "morriss9", "description": "Design evaluatedTestedCoded in TFImplemented in ProductionEstimate from below stories: 8Dependency:TAA to provide approved design Networks CAB for production change approval Cloud BRB for production change approval.", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-458", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Backlog", "summary": "GCP - O3E105 - S - DNS forwarding from GCP to ANZ Onprem DNS servers for name resolution of ANZ internal host names. (dependency on Networks)", "updated": "2019-11-22T17:23:18+11:00", "estimate": 8.0, "epic_ref": null, "epic_name": "GCP - O3E105 - S - DNS forwarding from GCP to ANZ Onprem DNS servers for name resolution of ANZ internal host names. (dependency on Networks)", "diff_to_upstream": []}, "CLS-456": {"assignee": "vamshiky", "created": "2019-09-11T11:00:33+10:00", "creator": "morriss9", "description": "Design Enhanced VPC Service Control implementation potentially including Restricted VIP, Default Route config, VPC SC perimeters.Endorsed at SDC and IAF. Reviewed by Google.Plan for Implementation.Implemented as Designed.Estimate from below stories: 22Dependency:Application Teams to test changesSIC for approval of design decisions\u00a0 IAF Approval SDC Approval", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-456", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - O1E102 - S - Enhance VPC Service Control implementation (incl. Restricted APIs VIP and default route with DLP) (ORA #T52)", "updated": "2019-11-15T11:17:24+11:00", "estimate": 22.0, "epic_ref": null, "epic_name": "GCP - O1E102 - S - Enhance VPC Service Control implementation (incl. Restricted APIs VIP and default route with DLP) (ORA #T52)", "diff_to_upstream": []}, "CLS-455": {"assignee": "vamshiky", "created": "2019-09-11T11:00:30+10:00", "creator": "morriss9", "description": "All Cloud Services Bamboo Plans migrated to SDCP and tested.Ensure each plan uses a token from Vault.Estimate from below stories: 13", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-455", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - O1E201 - All Cloud Services Bamboo plans migrated to SDCP instance from DC instance (Dependency on F#E100)", "updated": "2019-11-14T13:36:23+11:00", "estimate": 13.0, "epic_ref": null, "epic_name": "GCP - O1E201 - All Cloud Services Bamboo plans migrated to SDCP instance from DC instance (Dependency on F#E100)", "diff_to_upstream": []}, "CLS-454": {"assignee": "vamshiky", "created": "2019-09-11T11:00:27+10:00", "creator": "morriss9", "description": "For all Tier 1,2,3 and CDE TF Service accounts:\r\n * stored in vault with dynamic token generation for short lived tokens.\r\n * Any deviations/exceptions documented, and owner asked to work with security to record risk and track remediation.\r\n\r\n*FOR THIS PI#5: 13 POINTS CS only*\r\n\r\n*FULL EPIC Estimate from below stories 23*\r\n\r\n*Dependency:*\u00a0UAM Team must have GCP Vault Secrets Management available in Production.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-454", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Ready for Squad", "summary": "GCP - O5E100 - S - Migrate Tier 1,2,3 and CDE TF Service Accounts to HashiCorp Vault (ORA #T48)", "updated": "2019-11-22T16:31:52+11:00", "estimate": 13.0, "epic_ref": null, "epic_name": "GCP - O1E100 - S - Migrate Tier 1,2,3 and CDE TF Service Accounts to HashiCorp Vault (ORA #T48)", "diff_to_upstream": []}, "CLS-453": {"assignee": "ganalc1", "created": "2019-09-11T09:42:17+10:00", "creator": "ganalc1", "description": "Provide operational support for existing GKE customers. Develop operational support procedures\r\n\r\n\r\n* SSD documented and approved\r\n* Squad Confluence published and accessible for customers\r\n* ITSM established for service support - SNOW resolver groups, distribution lists etc\r\n* develop shared cluster types bases on tech\r\n* develop shared cluster responsibility model", "fixVersions": ["IaaS PI #5"], "issuetype": "Epic", "key": "CLS-453", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Ready for Squad", "summary": "K8S - GKE operational support", "updated": "2019-11-20T09:52:39+11:00", "estimate": null, "epic_ref": null, "epic_name": "k8s - GKE operational support", "diff_to_upstream": []}, "CLS-452": {"assignee": "praveenp", "created": "2019-09-10T14:31:22+10:00", "creator": "praveenp", "description": "*Description:*\r\n\r\nProvide highly available and stable network connectivity to and between Cloud services\r\n\r\n*Acceptance Criteria:* \r\n Access to AWS and GCP services from 55 Collins St levels.\r\n 1G Telstra link no longer used by Azure.\r\n Scope out work to add additional circuits to DCs.\r\n Singapore Eye of the storm monitoring completed.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-452", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Enhance existing cloud network connectivity infrastructure", "updated": "2019-11-20T09:42:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "Enhance existing cloud network connectivity infrastructure", "diff_to_upstream": []}, "CLS-451": {"assignee": "praveenp", "created": "2019-09-10T13:19:51+10:00", "creator": "praveenp", "description": "*Description:*\r\n * Decide on toolset for creation of a Linux SOE which can be used for both AWS and GCP.\r\n * Create a Linux SOE pattern.\r\n * Develop Linux SOE pattern for GCP v1.\r\n\r\n*Acceptance Criteria:*\r\n\r\nLinux SOE which can be used in GCP for initial ANZx development work", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-451", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic in Progress", "summary": "SS: VM SOE Pattern for Linux GCP v1", "updated": "2019-11-25T14:57:45+11:00", "estimate": null, "epic_ref": null, "epic_name": "VM SOE Pattern for Linux v1", "diff_to_upstream": []}, "CLS-450": {"assignee": "praveenp", "created": "2019-09-10T13:11:38+10:00", "creator": "praveenp", "description": "*Description:*\r\n\r\nRun through operational readiness review checklist for GCP, AWS platforms\r\n\r\n*Acceptance Criteria:* \r\n1. Complete the service transition checklist for GCP and AWS platforms\u00a0\r\n2. Provide GCP and AWS platforms, the list of outstanding service transition requirements", "fixVersions": [], "issuetype": "Epic", "key": "CLS-450", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Operational Readiness Review - GCP, AWS, TFE", "updated": "2019-11-01T13:29:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "Operational Readiness Review - GCP, AWS, TFE", "diff_to_upstream": []}, "CLS-448": {"assignee": "praveenp", "created": "2019-09-10T10:35:15+10:00", "creator": "praveenp", "description": "Migrate cloud on-boarding to SNOW", "fixVersions": [], "issuetype": "Epic", "key": "CLS-448", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "SS: Cloud Onboarding via SNOW - automate GCP and AWS customer onboarding request", "updated": "2019-11-20T09:47:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "Cloud Onboarding via SNOW - automate GCP and AWS customer onboarding request", "diff_to_upstream": []}, "CLS-447": {"assignee": "praveenp", "created": "2019-09-10T10:33:52+10:00", "creator": "praveenp", "description": "Production Transition\r\n\r\nAcceptance Criteria:\r\n * Cloud sync iProtect completed\r\n * Cloud sync cloud request approved\r\n * Cloud sync production servers on-premise built and transitioned", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-447", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic with Squad", "summary": "SS: Cloud Sync - Production Transition of the service", "updated": "2019-11-21T16:53:07+11:00", "estimate": null, "epic_ref": null, "epic_name": "Cloud Sync - Production Transition the service", "diff_to_upstream": []}, "CLS-445": {"assignee": "praveenp", "created": "2019-09-10T10:30:59+10:00", "creator": "praveenp", "description": "Develop cloud sync infrastructure and permissions in GCP / AWS\r\n\r\n\u00a0Acceptance Criteria:\r\n * Cloud infrastructure required for Cloud Sync file transfer is built in GCP\r\n * File transfers from on-premise to GCP and vice versa can be completed using Cloud Sync\r\n * Service catalog in SNOW production exists for cloud sync file transfers", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-445", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic in Progress", "summary": "SS: Cloud Sync - Build Cloud based infrastructure", "updated": "2019-12-05T10:56:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "Cloud Sync - Build Cloud based infrastructure", "diff_to_upstream": []}, "CLS-444": {"assignee": "shridhar", "created": "2019-09-09T19:58:05+10:00", "creator": "shridhar", "description": "Due to movement of EX from Transformation to Cloud portfolio domain, the CI Mapping for Enterprise Artifactory, GitHub Enterprise and Sonarqube will need to be updated on ServiceNow (i.e Tech Connect).", "fixVersions": [], "issuetype": "Epic", "key": "CLS-444", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - ServiceNow CI Mappings", "updated": "2019-10-17T14:10:26+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - ServiceNow CI Mappings", "diff_to_upstream": []}, "CLS-443": {"assignee": "shridhar", "created": "2019-09-09T19:52:49+10:00", "creator": "shridhar", "description": "GitHub has released security fix to address the following vulnerability - A malicious OAuth application could be authorised on a targeted user's account without requiring user approval, allowing an attacker to execute actions on behalf of the user.\r\n\r\nThe security vulnerability fixes are available in GHE versions 2.17.3, 2.16.12, 2.15.17, and 2.14.24, which necessitates that ANZ upgrade to GHE version 2.16.16 to ensure the vulnerability is fixed.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-443", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - GitHub Enterprise Security Vulnerability patch", "updated": "2019-10-17T14:59:40+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise Security Vulnerability patch", "diff_to_upstream": []}, "CLS-441": {"assignee": "shridhar", "created": "2019-09-09T19:17:15+10:00", "creator": "shridhar", "description": "Currently Enterprise Artifactory implementation is limited to configuration in Corporate zone. There are no instances available in Perimeter zone, which has resulted in DCX Project teams having to manually migrate the build artifacts from Corporate zone into Perimeter zone where some of the Production applications are deployed. The manual effort is time consuming and prone to errors.\r\n\r\nHaving edge nodes defined in the Perimeter zone and configuring automated event based replication from Enterprise instance available in Corporate zone will alleviate the current issues being faced by Project teams and assist with seamless Production deployments.\r\n\r\nThis epic is dependent on successful implementation of requirements defined in epic #\u00a0CLS-430 DVE - Enterprise Artifactory High Availability.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-441", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - DCX Artifactory Edge nodes in Perimeter (Non HA)", "updated": "2019-11-20T19:55:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - DCX Artifactory Edge nodes in Perimeter (Non HA)", "diff_to_upstream": []}, "CLS-439": {"assignee": "shridhar", "created": "2019-09-09T19:15:14+10:00", "creator": "shridhar", "description": "As part of Audit reviews in the month of July-August 2019, it has been identified that there are no DR and BCP capabilities available for GHE. In order to implement a robust BCP capability, the DR ratings will need to be revisited and remediated as well.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-439", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - GitHub Enterprise DR Rating uplift ", "updated": "2019-11-20T19:57:54+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise DR Rating uplift ", "diff_to_upstream": []}, "CLS-437": {"assignee": "shridhar", "created": "2019-09-09T19:13:23+10:00", "creator": "shridhar", "description": "As part of Audit ISS.1 outcomes, the IAM policies have been revised to ensure administrative privileges are only provided to limited number of users across Projects and implement segregation of duty controls.\r\n\r\nIn order to comply with the audit requirements, the following Project groups will be required to be created and users assigned to the groups that will control the user entitlements.\r\n|Access level|Role|Naming convention|\r\n|Tool|Tool Administrator\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0|github-administrators|\r\n|Tool|Organization Member|github-users|\r\n|Tool|Tool Service Accounts|github-service accounts|\r\n|Organisation|Organisation Owner|github-<organisation name>-organisation owner|\r\n|Organisation|Organisation Service Accounts|github-<organisation name>-service accounts|\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-437", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - GitHub Enterprise IAM Remediation (Audit finding)", "updated": "2019-11-26T17:29:44+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise IAM Remediation (Audit finding)", "diff_to_upstream": []}, "CLS-436": {"assignee": "shridhar", "created": "2019-09-09T19:12:24+10:00", "creator": "shridhar", "description": "As part of Audit ISS.1 outcomes, the IAM policies have been revised to ensure administrative privileges are only provided to limited number of users across Projects and implement segregation of duty controls.\r\n\r\nIn order to comply with the audit requirements, the following Project groups will be required to be created and users assigned to the groups that will control the user entitlements.\r\n\r\n\u00a0\r\n|Tool|Access level|Role|Naming convention|\r\n|Artifactory|Tool|Tool Administrator|artifactory -administrators|\r\n|Artifactory|Tool|Viewer (logged-in)|artifactory-users|\r\n|Artifactory|Tool|Tool Service Accounts|artifactory-service accounts|\r\n|Artifactory|Project|Project Administrator|artifactory-<repository name>-project administrator|\r\n|Artifactory|Project|Release Manager|artifactory-<repository name>-release manager|\r\n|Artifactory|Project|Engineer|artifactory-<repository name>-engineer|\r\n|Artifactory|Project|DevOps Engineer|artifactory-<repository name>-devops engineer|\r\n|Artifactory|Project|Project Service Accounts|artifactory-<repository name>-service accounts|\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-436", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - Enterprise Artifactory IAM Remediation (Audit Finding)", "updated": "2019-11-26T17:31:17+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory IAM Remediation (Audit Finding)", "diff_to_upstream": []}, "CLS-431": {"assignee": "shridhar", "created": "2019-09-09T19:06:23+10:00", "creator": "shridhar", "description": "Currently there are no automated monitoring and alerting capabilities available for Enterprise Artifactory. In order to setup monitoring of EA, integration with Splunk Enterprise is required so that:\r\n # Logs from Artifactory can be moved to Splunk regularly\r\n # Alerting rules and alerts can be setup to automate notification process when performance or other tool related issues occur.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-431", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - Enterprise Artifactory integration with Splunk Enterprise", "updated": "2019-11-26T17:31:00+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory integration with Splunk Enterprise", "diff_to_upstream": []}, "CLS-430": {"assignee": "shridhar", "created": "2019-09-09T19:05:04+10:00", "creator": "shridhar", "description": "Currently Enterprise Artifactory has a single Production instance with no DR capabilities setup. In the event that the current instance fails in Production, there is no capability to fall back onto secondary live instance. The impact to wider engineering community is the inability for the teams to release features in Production for ANZ Business units that are supported by Projects.\r\n\r\nThe intent of this epic is to implement a highly available instance of Enterprise Artifactory that replicates the repositories and artifacts across two sites with switch over capabilities implemented to ensure that in the event of the Primary instance failing, the traffic is redirected to the secondary instance seamlessly, thus minimizing the impacts to Project teams.\r\n\r\nThis is also a prerequisite change to implement Artifactory Edge nodes in Perimeter, which is being tracked as two separate epics:\r\n # CLS-426 DVE - Enterprise Artifactory Edge nodes in Perimeter (Non HA)\r\n\r\n # CLS-441 DVE - DCX Artifactory Edge nodes in Perimeter (Non HA)\r\n\r\nThis change is critical to be implemented as part of Audit remediation.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-430", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - Enterprise Artifactory High Availability", "updated": "2019-11-26T17:30:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory High Availability", "diff_to_upstream": []}, "CLS-429": {"assignee": "shridhar", "created": "2019-09-09T19:03:46+10:00", "creator": "shridhar", "description": "This a long running epic, which will contain stories, tasks and bugs related to BAU activities such as service requests from ANZ Engineering community, query and error resolution.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-429", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - Enterprise Artifactory BAU Epic", "updated": "2019-11-26T17:28:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory BAU Epic", "diff_to_upstream": []}, "CLS-428": {"assignee": "shridhar", "created": "2019-09-09T19:02:56+10:00", "creator": "shridhar", "description": "This a long running epic, which will contain stories, tasks and bugs related to BAU activities such as service requests from ANZ Engineering community, query and error resolution.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-428", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - GitHub Enterprise BAU", "updated": "2019-11-26T17:29:31+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - GitHub Enterprise BAU", "diff_to_upstream": []}, "CLS-426": {"assignee": "shridhar", "created": "2019-09-09T18:32:33+10:00", "creator": "shridhar", "description": "Currently Enterprise Artifactory implementation is limited to configuration in Corporate zone. There are no instances available in Perimeter zone, which has resulted in Project teams having to manually migrate the build artifacts from Corporate zone into Perimeter zone where some of the Production applications are deployed. The manual effort is time consuming and prone to errors.\r\n\r\nHaving edge nodes defined in the Perimeter zone and configuring automated event based replication from Enterprise instance available in Corporate zone will alleviate the current issues being faced by Project teams and assist with seamless Production deployments.\r\n\r\nThis epic is dependent on successful implementation of requirements defined in epic #\u00a0CLS-430\u00a0DVE - Enterprise Artifactory High Availability\r\n\r\n.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-426", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "shridhar", "status": "Epic Done", "summary": "DVE - Enterprise Artifactory Edge nodes in Perimeter (Non HA)", "updated": "2019-11-20T19:50:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "DVE - Enterprise Artifactory Edge nodes in Perimeter (Non HA)", "diff_to_upstream": []}, "CLS-425": {"assignee": "delbustr", "created": "2019-09-06T10:42:05+10:00", "creator": "lazarom", "description": "This epic is to track\u00a0set of requirements to develop and build a Service Catalog for the AWS Platform to deliver greater business value and enable effective service request management of the product and available services.\u00a0\r\n\r\nThe first request form to be developed in the Service Catalog will be a 'User Access Request Form'.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-425", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "lazarom", "status": "Epic in Progress", "summary": "AWS - SNOW Service Catalogue \u2013 User Access Request Form", "updated": "2019-11-28T17:38:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - SNOW Service Catalogue \u2013 User Access Request Form", "diff_to_upstream": []}, "CLS-423": {"assignee": "delbustr", "created": "2019-09-05T12:02:04+10:00", "creator": "soonw", "description": "As a PO I want to enable auto monitoring and alerting of service health status in Shared Services so that we have proactive monitoring/alerting of event\r\n\r\ncurrently plumbing between AWS to techops is work in progress by shelde and once the plumbing works has been completed, we need to work on the detail to get the full integrations working\r\n\r\n\u00a0\r\n\r\nNOTE: THIS IS PLATFORM SPECIFIC MONITORING\r\n\r\n\u00a0\r\n\r\nDependencies: - SNOW Team, Tech Ops", "fixVersions": [], "issuetype": "Epic", "key": "CLS-423", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Backlog", "summary": "AWS - Monitoring and alerting", "updated": "2019-11-18T11:26:27+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Monitoring and alerting", "diff_to_upstream": []}, "CLS-422": {"assignee": "delbustr", "created": "2019-09-03T15:07:42+10:00", "creator": "soonw", "description": "acceptance criteria :\u00a0Implement design for network external patterns, and test with selected application and enable then to deliver business outcomes.\u00a0\r\n\r\nThere needs to be a clear plan of dependencies and time frames to highlight dependencies to other teams and call them early.\u00a0\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-422", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS - Network External Connectivity Implementation ", "updated": "2019-09-11T12:37:49+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Network External Connectivity Implementation ", "diff_to_upstream": []}, "CLS-421": {"assignee": "delbustr", "created": "2019-08-30T15:25:50+10:00", "creator": "soonw", "description": "develop designs for : Control-M Integration // IBM Connect:Direct Integration // Network Attached Storage (EFS)\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-421", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS - T5 - Various design approval dependancies ", "updated": "2019-09-06T14:49:40+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - T5 - Various design approval dependancies ", "diff_to_upstream": []}, "CLS-420": {"assignee": "delbustr", "created": "2019-08-30T15:25:23+10:00", "creator": "soonw", "description": "continue CLS-268, and setup usergroups for delivery of AWS capability\u00a0\r\n\r\nTraining program and materials are provided to help on board future applications onto the app-runner\u00a0\r\n\r\nmain outcomes:\r\n * Uplift documentation\u00a0in\u00a0Confluence use info form Versent,\u00a0\r\n * Setup session and provide information about consumable and inner sourcign on platform\u00a0\r\n * setup usergroup for AWS meetings once a month, book sessions/rooms and care of presentations and showcases\u00a0\r\n * become key person for working to uplift billing and reporting \u2013 uplift confluence for Cloudwatch and Bill reports\u00a0\r\n * Provide required guidance on AWS automation pipeline, AWS 2.0 and 3.0\r\n *", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-420", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS - Training, on-boarding and usergroups AWS ", "updated": "2019-11-28T13:47:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Training, on-boarding and usergroups AWS", "diff_to_upstream": []}, "CLS-419": {"assignee": "delbustr", "created": "2019-08-30T15:24:58+10:00", "creator": "soonw", "description": "This epic continues work in CLS-489 to capture stories that have fallen onto PI6\r\n\r\n\u00a0\r\n\r\nAcceptance criteria: documentation for iprotect Evidence control list is gather and sent to the analyst , note it does not need to be the perfect answer but it is what we have right now. In addition\u00a0 gaps in platform identifies in PI 4 are action and demonstrated to be close.\r\n\r\n\u00a0\r\n\r\nThis epic is expected to be swarmed around to true state of platform produce evidence quickly, and identify gaps\r\n\r\n\u00a0\r\n\r\nOne story to perform an initial high level analysis; outputs for each ORA category are:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 YES \u2013 we have evidence, and it is provided to the ORA analyst.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NO \u2013 we don\u2019t have the evidence, so we need to produce a new artefact (with any accompanying organisational changes needed), possibly raising a risk covering the gap if the work cannot be done in the current PI.\u00a0 [So we\u2019d need to agree that a risk can cover us while an app goes into AWS production]\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 N/A \u2013 we believe the ORA item is Not Applicable to our cloud platform, e.g. \u201c25\u00a0 SDM Change Order raised for Backup Scheduling\u201d\r\n\r\n\u00a0\r\n\r\nA second story to engage with the ORA analyst, agree the position on each ORA item, and plan next steps:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree evidence is sufficient for ORA items we have covered.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree work required to fill the gap, and/or risk raised to make way for an app getting in to production.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree which ORA items are N/A for our platform.\r\n\r\n\u00a0\r\n\r\nA third story to cover future work to fill gaps:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Write stories and estimate the effort required to cover ORA gaps. One story per ORA item.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-419", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS-Action to help with Iprotect - PI6", "updated": "2019-11-25T09:56:43+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Action to help with Iprotect - PI6", "diff_to_upstream": []}, "CLS-418": {"assignee": "delbustr", "created": "2019-08-30T15:24:25+10:00", "creator": "soonw", "description": "dependent on IAM - SHELDE to deliver,\u00a0\r\n\r\nacceptance criteria : we work with IAM squad that needs to deliver Secrets management solution , our work is to design the most appropriate way for them to deliver this solution, create repos and bamboo plans for deployment\u00a0 onto correctly identified location\u00a0 / account.\u00a0\r\n\r\n\u00a0\r\n\r\nour work includes training and up-skill\u00a0 in App runner, as well as definitions for how platform will interact with sercrets manager, includign update on RACI matrix.\r\n\r\nwork is not the implementation of the solution.\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-418", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS - T1 - Implement Secrets management solution for BS11", "updated": "2019-11-28T13:57:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - T1 - Implement Secrets management solution ", "diff_to_upstream": []}, "CLS-417": {"assignee": "delbustr", "created": "2019-08-30T15:24:00+10:00", "creator": "soonw", "description": "Acceptance criteria : Work for AWS squad to track new consumable development, all tickets have 2 components, security and pull request, both to be covered under support.\r\n\r\nWe need a process defined to track both the security advise from platform team as well as conducting pull request to main repo's on the platform.\r\n\r\nteam to identify if we do one tick per Consumable or TWO tick per consumable, separating security and pull request components.\r\n\r\nOn completion we will have implemented identified 20 consumables, no more than 20 to be done this PI.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-417", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS - T3/T4 - New consumable and updates merge onto main branch", "updated": "2019-12-03T16:18:08+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - T3/T4 - New consumable and updates merge onto main branch", "diff_to_upstream": []}, "CLS-416": {"assignee": "delbustr", "created": "2019-08-30T15:12:23+10:00", "creator": "soonw", "description": "Acceptance criteria: Design tactical external network connectivity pattern and select best option to integrate with existing network structure with native tools and fulfil the security requirement with long term solutions to come.\r\n\r\n\u00a0\r\n\r\nThis epic is mainly to support ANZx only\u00a0\r\n\r\n\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-416", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS - Network design for External connectivity (tactical to support ANZx)", "updated": "2019-11-29T14:24:44+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Network design for External connectivity (tactical)", "diff_to_upstream": []}, "CLS-415": {"assignee": "delbustr", "created": "2019-08-30T15:11:56+10:00", "creator": "soonw", "description": "Acceptance criteria: Design external network connectivity pattern and select best option to integrate with existing network structure and Transit Gateway, note goal of design is to present 2 options, with a high level estimation of relative effort.\u00a0\r\n\r\na. most aligned to plan\u00a0\r\n\r\nb. least impact to platform\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-415", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS - Network design for External connectivity with TGW and Palo Alto for BS11", "updated": "2019-11-28T13:58:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Network design for External connectivity with TGW and Palo Alto", "diff_to_upstream": []}, "CLS-414": {"assignee": "delbustr", "created": "2019-08-30T15:08:37+10:00", "creator": "soonw", "description": "*Background*\r\n * BS11 requires that business applications used by the ANZ New Zealand legal entity can be recovered within 6 hours (with RPO Zero) in the event of a \u2018split\u2019 with the ANZ Australian parent group.\r\n * This means that the application must be recovered on NZ-owned infrastructure, either in ANZ NZ-owned datacentres, or ANZ NZ-owned cloud platforms.\r\n * In terms of AWS, this means that any AWS-hosted apps must be capable of being recovered on to an AWS Organisation (\u2018master account\u2019) owned and operated by ANZ NZ.\r\n * It\u2019s important to understand that while we use terms such as RTO and RPO, it\u2019s not in the context of a traditional DR scenario. From the moment \u2018the split\u2019 is declared (somewhat analogous to a DR failover being declared), there will be time (apparently 5 minutes) to synch data stores, hence the data replication technology we use doesn\u2019t have to be synchronous to meet the RPO Zero requirement.\r\n\r\n\u00a0\r\n\r\n*Epic Objectives*\r\n * Discovery exercise to determine the feasibility of the proposed High Level Design Concept.\r\n ** Ensure we fully understand requirements, operating model (what each legal entity is responsible for), how Shared Services will work (not just Guacamole, Squid etc, but things like Apptio), etc.\r\n ** Ensure we think through key use cases, e.g. apps shared by AU and NZ, apps dedicated to NZ but operated by AU.\r\n ** Must have clear reasoning for either using the main ANZ NZ AWS Organisation that they\u2019re already using, or creating a new AWS Organisation specifically for BS11 purposes. Think through all implications.\r\n * Assuming the proposed design concept is feasible, document a High Level Design in Confluence. If the design is not feasible, the squad will need to discuss next steps at that point.\r\n * Review the design internally within the AWS Squad (no formal IAF or SDC or other endorsement required as part of this epic). Draw in others from ECP (e.g. TAAs) as required. Updated the design according to feedback.\r\n * Document write next steps in Confluence and request SOWs from vendors.\r\n\r\n\u00a0\r\n\r\n*Proposed High Level Design Concept*\r\n * Extend the AWS Pipeline (Core Runner and App Runner) to deploy to a second AWS organisation in the Sydney region. It\u2019s assumed that this second AWS organisation is the one that ANZ NZ already operates.\r\n * The ANZ NZ entity will allow the AWS Pipeline to deploy resources into pre-allocated NZ-owned AWS accounts in the second AWS organisation.\r\n * The purpose of the ANZ NZ accounts is to:\r\n ** Host data replication targets, e.g. a database that is a log shipping target, or an S3 bucket, etc. These will need to be permanently in place, as it will be impossible to replicate large volumes of data in the window just after a BS11 split. Note that logging data is not expected to be replicated [assumption].\r\n ** Host application services, PaaS services, etc in the event of a BS11 split. These could be deployed by the App Runner in the event of a BS11 split, followed by BCP scripts to re-point these services to ANZ NZ Shared Services and other applications that have also split off from ANZ AU.\r\n\r\n\u00a0\r\n\r\n*Scope*\r\n * While it\u2019s important to think about how we will host BS11-related workloads, and how the split could work, the objective of this epics is just to design the AWS Pipeline infrastructure. Don\u2019t get too distracted with the details of how data replication and failover processes might work.\r\n * Replicating the cloud code (currently in BitBucket) to our NZ partner is important, but recovering the whole AWS pipeline service (including Bamboo etc) is not our responsibility, so out of scope of the design.\r\n * We are not expected to replicated the AU Shared Services (Guacamole, Squid, AD etc) to the ANZ NZ AWS Organisation (our counterparts in NZ need to figure out how to do this) so this is out of scope of the design.\r\n * Need to carefully consider both IaaS (e.g. EC2) and PaaS services.\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-414", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS - BS11 Design and KDD's", "updated": "2019-09-05T15:10:56+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - BS11 Design", "diff_to_upstream": []}, "CLS-413": {"assignee": "delbustr", "created": "2019-08-29T15:30:35+10:00", "creator": "soonw", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-413", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Develop SQL Server consumable", "updated": "2019-09-11T10:52:34+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Develop SQL Server consumable", "diff_to_upstream": []}, "CLS-412": {"assignee": null, "created": "2019-08-29T12:47:07+10:00", "creator": "thompsl8", "description": "* DTR image promotion policy to be in place\r\n * DTR image signing process document with notary to be completed\r\n * Image signing process to be shared with Secrity team and agreed upon\r\n * Security team to be onboarded to DTR to have access to all images.\r\n * Security team to take the ownership of the image signing", "fixVersions": [], "issuetype": "Epic", "key": "CLS-412", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "thompsl8", "status": "Backlog", "summary": "PI5 - CPaaS - Docker Trusted Registry Pipeline for Internal and Cloud", "updated": "2019-08-29T12:47:07+10:00", "estimate": null, "epic_ref": null, "epic_name": "PI5 - CPaaS - Docker Trusted Registry Pipeline for Internal and Cloud", "diff_to_upstream": []}, "CLS-411": {"assignee": "thompsl8", "created": "2019-08-29T12:41:44+10:00", "creator": "thompsl8", "description": "* DTR image promotion policy to be in place\r\n * DTR image signing process document with notary to be completed\r\n * Image signing process to be shared with Secrity team and agreed upon\r\n * Security team to be onboarded to DTR to have access to all images.\r\n * Security team to take the ownership of the image signing", "fixVersions": ["IaaS PI #5", "IaaS PI #4"], "issuetype": "Epic", "key": "CLS-411", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "thompsl8", "status": "Backlog", "summary": "PI5 - CPaaS - Docker Trusted Registry Pipeline for Internal and Cloud - PI5", "updated": "2019-08-29T12:43:45+10:00", "estimate": null, "epic_ref": null, "epic_name": "dtr-pipeline", "diff_to_upstream": []}, "CLS-410": {"assignee": "delbustr", "created": "2019-08-29T11:03:38+10:00", "creator": "delbustr", "description": "Acceptance criteria: documentation for iprotect Evidence control list is gather and sent to the analyst , note it does not need to be the perfect answer but it is what we have right now. In addition\u00a0 gaps in platform identifies in PI 4 are action and demonstrated to be close.\r\n\r\n\u00a0\r\n\r\nThis epic is expected to be swarmed around to true state of platform produce evidence quickly, and identify gaps\r\n\r\n\u00a0\r\n\r\nOne story to perform an initial high level analysis; outputs for each ORA category are:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 YES \u2013 we have evidence, and it is provided to the ORA analyst.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 NO \u2013 we don\u2019t have the evidence, so we need to produce a new artefact (with any accompanying organisational changes needed), possibly raising a risk covering the gap if the work cannot be done in the current PI.\u00a0 [So we\u2019d need to agree that a risk can cover us while an app goes into AWS production]\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 N/A \u2013 we believe the ORA item is Not Applicable to our cloud platform, e.g. \u201c25\u00a0 SDM Change Order raised for Backup Scheduling\u201d\r\n\r\n\u00a0\r\n\r\nA second story to engage with the ORA analyst, agree the position on each ORA item, and plan next steps:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree evidence is sufficient for ORA items we have covered.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree work required to fill the gap, and/or risk raised to make way for an app getting in to production.\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Agree which ORA items are N/A for our platform.\r\n\r\n\u00a0\r\n\r\nA third story to cover future work to fill gaps:\r\n\r\n\u00b7\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Write stories and estimate the effort required to cover ORA gaps. One story per ORA item.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-410", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-PI5-Security gaps for Iprotect/ORA", "updated": "2019-11-25T15:25:25+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Security gaps for Iprotect/ORA", "diff_to_upstream": []}, "CLS-409": {"assignee": "delbustr", "created": "2019-08-28T10:04:50+10:00", "creator": "soonw", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-409", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-Security in Change Stories (Archives) ", "updated": "2019-11-25T15:27:27+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Security in Change Stories (Archives)", "diff_to_upstream": []}, "CLS-408": {"assignee": "delbustr", "created": "2019-08-14T13:48:55+10:00", "creator": "soonw", "description": "there is a need to ensure process to create consumables work in a distributed manner and allows multiple parties within bank to contribute.\r\n\r\n\u00a0\r\n\r\nwe want to uplift user management to enable such goal , test and document process.\u00a0\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-408", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Distributed Consumables Development", "updated": "2019-11-25T15:24:31+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Distributed Consumables Development", "diff_to_upstream": []}, "CLS-405": {"assignee": "delbustr", "created": "2019-08-09T10:52:34+10:00", "creator": "soonw", "description": "\u00a0\r\n\r\nThis Epic is to track the activities that called out by Security in change for platform production readiness\u00a0", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-405", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-close security gaps for production readiness ", "updated": "2019-11-28T14:03:19+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-close security gaps for production readiness", "diff_to_upstream": []}, "CLS-404": {"assignee": "praveenp", "created": "2019-07-05T11:49:35+10:00", "creator": "praveenp", "description": "*Description:*\r\n\r\nSet up Terraform Enterprise end to end for deployments into AWS and GCP, using DevOps as the CI tool.\r\n\r\nHandover to the Production support team in ANZ\r\n\r\n*Acceptance Criteria:* \r\nHandover of TFE platform to operational support team accepted.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-404", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Productionise Terraform Enterprise platform", "updated": "2019-11-29T15:07:31+11:00", "estimate": null, "epic_ref": null, "epic_name": "Terraform Enterprise Production pipeline set up", "diff_to_upstream": []}, "CLS-403": {"assignee": "praveenp", "created": "2019-07-05T11:47:02+10:00", "creator": "praveenp", "description": "Set up AWS non-prod environment for ABT", "fixVersions": [], "issuetype": "Epic", "key": "CLS-403", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "ABT in AWS Non-Production", "updated": "2019-09-10T11:49:49+10:00", "estimate": null, "epic_ref": null, "epic_name": "ABT in AWS Non-Production", "diff_to_upstream": []}, "CLS-402": {"assignee": "delbustr", "created": "2019-07-04T16:10:03+10:00", "creator": "soonw", "description": "Epic to track all task to enhance the AWS platform. not limit to defects, good to have, issues etc", "fixVersions": [], "issuetype": "Epic", "key": "CLS-402", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Ready for Squad", "summary": "AWS Platform Enhancement", "updated": "2019-11-15T13:39:28+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS Platform Enhancement", "diff_to_upstream": []}, "CLS-401": {"assignee": "praveenp", "created": "2019-06-17T10:55:17+10:00", "creator": "praveenp", "description": "Assess what needs to be done to monitoring AWS activity using Splunk. Build as required, or work with Shelde to complete build of a Splunk monitoring solution in AWS for both non-production and production", "fixVersions": [], "issuetype": "Epic", "key": "CLS-401", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Splunk monitoring for AWS", "updated": "2019-07-22T10:57:09+10:00", "estimate": null, "epic_ref": null, "epic_name": "Splunk monitoring for AWS", "diff_to_upstream": []}, "CLS-399": {"assignee": "praveenp", "created": "2019-06-17T10:52:47+10:00", "creator": "praveenp", "description": "monitoring solution for the network connectivity of TPN to GCP and AWS.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-399", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Network Monitoring for GCP and AWS", "updated": "2019-08-07T09:57:32+10:00", "estimate": null, "epic_ref": null, "epic_name": "Network Monitoring for GCP and AWS", "diff_to_upstream": []}, "CLS-398": {"assignee": "vamshiky", "created": "2019-06-17T10:51:59+10:00", "creator": "praveenp", "description": "Create scripts to assess non-compliant firewalls within the shared VPC and other networks. This is until Algosec is available for GCP workloads.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-398", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Backlog", "summary": "Define non-compliant firewall rules for shared VPC and stand alone networks.", "updated": "2019-09-10T13:21:16+10:00", "estimate": null, "epic_ref": null, "epic_name": "Define non-compliant firewall rules for shared VPC and stand alone networks.", "diff_to_upstream": []}, "CLS-397": {"assignee": "praveenp", "created": "2019-06-17T10:49:02+10:00", "creator": "praveenp", "description": "GCP Innovation Environment. Set up a request process for customers to request a GCP environment to test PoCs, which will be isolated from any non-prod or prod workloads and isolated from ANZ.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-397", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "GCP Innovation Environment - Phase 1", "updated": "2019-09-10T11:49:57+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP Innovation Environment - Phase 1", "diff_to_upstream": []}, "CLS-396": {"assignee": "praveenp", "created": "2019-06-17T10:46:46+10:00", "creator": "praveenp", "description": "Set up ABT in GCP non-production as per their initial non-production requirements. The requirements are not defined and will come as the program progresses.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-396", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "ABT in GCP Non-Production", "updated": "2019-08-07T09:58:13+10:00", "estimate": null, "epic_ref": null, "epic_name": "ABT in GCP Non-Production", "diff_to_upstream": []}, "CLS-395": {"assignee": "delbustr", "created": "2019-06-13T13:06:19+10:00", "creator": "soonw", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-395", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS BAU (External)", "updated": "2019-08-14T12:36:57+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS BAU (External)", "diff_to_upstream": []}, "CLS-394": {"assignee": null, "created": "2019-06-12T16:19:55+10:00", "creator": "pault3", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-394", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "pault3", "status": "Backlog", "summary": "Setting up the Mac Local system for manual build", "updated": "2019-06-12T16:19:55+10:00", "estimate": null, "epic_ref": null, "epic_name": "BLUD-16", "diff_to_upstream": []}, "CLS-392": {"assignee": "vamshiky", "created": "2019-06-03T20:24:00+10:00", "creator": "vamshiky", "description": "Review, Test and implement re-auth feature as tactical solution for the reported vulnerability.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-392", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Implement re-auth", "updated": "2019-08-20T11:51:57+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Implement re-auth", "diff_to_upstream": []}, "CLS-391": {"assignee": "vamshiky", "created": "2019-06-03T18:27:52+10:00", "creator": "vamshiky", "description": "Integrate Hashi Vault with GCP to manage all the service accountsF1E6 -\u00a0Service account integration with Vault (Contino) P1Dependencies: UAM, GCP Consumers", "fixVersions": [], "issuetype": "Epic", "key": "CLS-391", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Service account integration with Vault (Contino)", "updated": "2019-09-06T10:32:24+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Service account integration with Vault (Contino)", "diff_to_upstream": []}, "CLS-390": {"assignee": "vamshiky", "created": "2019-06-03T18:27:49+10:00", "creator": "vamshiky", "description": "Design and develop Sentinel policy framework for TFE to be enforced on IaC pipelineF1E5 -\u00a0Sentinel Policy Framework design and develop (Contino) P1Dependencies: None", "fixVersions": [], "issuetype": "Epic", "key": "CLS-390", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Sentinel Policy Framework design and develop (Contino)", "updated": "2019-09-02T11:16:32+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Sentinel Policy Framework design and develop (Contino)", "diff_to_upstream": []}, "CLS-389": {"assignee": "vamshiky", "created": "2019-06-03T18:27:47+10:00", "creator": "vamshiky", "description": "Build design for Infra as Code pipeline using TFE, GHE and Hashi VaultF1E3 -\u00a0Design IAC pipeline (Contino) P1Dependencies: Security In Change, Engineering Acceleration, CPaaS, TAA", "fixVersions": [], "issuetype": "Epic", "key": "CLS-389", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Design IAC pipeline (Contino)", "updated": "2019-09-02T11:16:27+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Design IAC pipeline (Contino)", "diff_to_upstream": []}, "CLS-388": {"assignee": "vamshiky", "created": "2019-06-03T18:27:44+10:00", "creator": "vamshiky", "description": "Develop a design to build and deploy containerized Splunk Heavy Forwarder on GKE in GCP. F1E2 -\u00a0Splunk Redesign P1Dependencies: Tech Ops, Cyber Security, Security In Change, TAA", "fixVersions": [], "issuetype": "Epic", "key": "CLS-388", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Splunk Redesign", "updated": "2019-09-06T10:31:27+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Splunk Redesign", "diff_to_upstream": []}, "CLS-387": {"assignee": "vamshiky", "created": "2019-06-03T18:27:42+10:00", "creator": "vamshiky", "description": "*F1E9 -\u00a0Plan to migrate users to IAM 2.0 P1 (45 SP)Dependencies: UAM", "fixVersions": [], "issuetype": "Epic", "key": "CLS-387", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Plan to migrate users to IAM 2.0", "updated": "2019-09-06T10:31:40+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Plan to migrate users to IAM 2.0", "diff_to_upstream": []}, "CLS-386": {"assignee": "vamshiky", "created": "2019-06-03T18:27:39+10:00", "creator": "vamshiky", "description": "Build dashboards to provide a view of impact to ANZ applications on GCP from outage to GCP servicesF1E21 -\u00a0Build a dashboard to provide service outage for ANZ apps. P1 (12 SP)Dependencies: None", "fixVersions": [], "issuetype": "Epic", "key": "CLS-386", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Build a dashboard to provide service outage for ANZ apps", "updated": "2019-08-16T11:10:14+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Build a dashboard to provide service outage for ANZ apps", "diff_to_upstream": []}, "CLS-385": {"assignee": "vamshiky", "created": "2019-06-03T18:27:36+10:00", "creator": "vamshiky", "description": "Provide Tech Ops the required Service accounts to enable testing of Service Now asset discovery.F1E1 - Enable Service Now asset discovery V2 P1 (2 SP)Dependencies: Tech Ops, CES", "fixVersions": [], "issuetype": "Epic", "key": "CLS-385", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Enable Service Now asset discovery", "updated": "2019-09-02T11:16:46+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Enable Service Now asset discovery", "diff_to_upstream": []}, "CLS-384": {"assignee": "vamshiky", "created": "2019-06-03T18:27:33+10:00", "creator": "vamshiky", "description": "Define team roster and escalation process to enable 24/7 support for GCP platform. Guidelines to the squad for claiming compensations.F1E19 -\u00a0Elevate Support Model to 24/7 P1\u00a0(12 SP)Dependencies: None", "fixVersions": [], "issuetype": "Epic", "key": "CLS-384", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Elevate Support Model to 24/7", "updated": "2019-08-16T11:02:19+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Elevate Support Model to 24/7", "diff_to_upstream": []}, "CLS-383": {"assignee": "vamshiky", "created": "2019-06-03T18:27:29+10:00", "creator": "vamshiky", "description": "Work with UAM team to define break-glass process for workloads running on GCP. Definition should contain details on the trigger for break glass scenarios and process to elevate access for Application teams.F1E11 -\u00a0Define Break Glass process P1 (8 SP)Dependencies: UAM", "fixVersions": [], "issuetype": "Epic", "key": "CLS-383", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Define Break Glass process", "updated": "2019-08-20T11:52:30+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Define Break Glass process", "diff_to_upstream": []}, "CLS-382": {"assignee": "vamshiky", "created": "2019-06-03T18:27:27+10:00", "creator": "vamshiky", "description": "Audit and capture service accounts in GCP. Gather information of owner, purpose of the service accounts. Define process to on-boarding new Service accounts.F1E7 -\u00a0IAM Audit Service accounts P1 (33 SP)Dependencies: UAM, Various Project owners", "fixVersions": [], "issuetype": "Epic", "key": "CLS-382", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - IAM Audit Service accounts", "updated": "2019-08-20T11:53:24+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - IAM Audit Service accounts", "diff_to_upstream": []}, "CLS-381": {"assignee": "vamshiky", "created": "2019-06-03T18:27:24+10:00", "creator": "vamshiky", "description": "Review interconnect configuration in GCP and assess the impact during various BCP scenarios. Build a plan to treat any gaps identified.F1E14 -\u00a0Review interconnect from BCP perspective P1 (7 SP)Dependencies: None", "fixVersions": [], "issuetype": "Epic", "key": "CLS-381", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Review interconnect from BCP perspective", "updated": "2019-09-02T11:16:58+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Review interconnect from BCP perspective", "diff_to_upstream": []}, "CLS-380": {"assignee": "vamshiky", "created": "2019-06-03T18:27:22+10:00", "creator": "vamshiky", "description": "Assist Cyber Security by providing requirements for the Proxy and in testing their proposed solutionF1E31 - GCP Proxy Remediation for Public Cloud Access P1 (6 SP)Dependencies: Cyber Security, TAA", "fixVersions": [], "issuetype": "Epic", "key": "CLS-380", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP  - Proxy Remediation for Public Cloud Access", "updated": "2019-09-02T11:17:13+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP  - Proxy Remediation for Public Cloud Access", "diff_to_upstream": []}, "CLS-379": {"assignee": "vamshiky", "created": "2019-06-03T18:27:20+10:00", "creator": "vamshiky", "description": "Implement Tactical solution for file transfer in production to allow CSP, Open Banking and NSW to bring their Cloud SQL back ups on premises.F3E10 -\u00a0Tactical solution for file\u00a0transfer\u00a0P1 (9 SP)Dependencies: CPaaS, Storage, CSP", "fixVersions": [], "issuetype": "Epic", "key": "CLS-379", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Tactical solution for file\u00a0transfer", "updated": "2019-09-02T11:17:22+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Tactical solution for file\u00a0transfer", "diff_to_upstream": []}, "CLS-378": {"assignee": "vamshiky", "created": "2019-06-03T18:27:17+10:00", "creator": "vamshiky", "description": "Complete AlgoSec integration with Palo appliances on GCP that includes Risk profile creation, on boarding and sign-off from Network Compliance.F1E13 -\u00a0Complete AlgoSec integration with Palo P1 (5 SP)\u00a0Dependencies: Network Compliance, Security In Change", "fixVersions": [], "issuetype": "Epic", "key": "CLS-378", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - AlgoSec integration with Palo", "updated": "2019-09-02T11:08:28+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - AlgoSec integration with Palo", "diff_to_upstream": []}, "CLS-363": {"assignee": "thompsl8", "created": "2019-05-31T12:54:19+10:00", "creator": "bhatta12", "description": "* DTR image promotion policy to be in place\r\n * DTR image signing process document with notary to be completed\r\n * Image signing process to be shared with Secrity team and agreed upon\r\n * Security team to be onboarded to DTR to have access to all images.\r\n * Security team to take the ownership of the image signing", "fixVersions": ["IaaS PI #5", "IaaS PI #4"], "issuetype": "Epic", "key": "CLS-363", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "bhatta12", "status": "Epic Ready for Squad", "summary": "CPaaS - Docker Trusted Registry Pipeline for Internal and Cloud - PI5", "updated": "2019-08-29T12:57:34+10:00", "estimate": null, "epic_ref": null, "epic_name": "dtr-pipeline", "diff_to_upstream": []}, "CLS-354": {"assignee": "delbustr", "created": "2019-05-30T19:09:50+10:00", "creator": "soonw", "description": "The product must have all key service and incident management procedures in place and tested prior being available as a production service\r\n\r\n\u00a0\r\n\r\nDependencies: - CES and SNOW\r\nNetwork team for Dx & perimeter firewall teams for capacity management\r\nCloud engagement squad for service, incident & change management \u2013 ANZ cloud practice standardisation in Service Now\r\n\r\n\u00a0\r\n\r\nthis EPIC is for SKY focus to\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-354", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Onboarding + Ops Support Model - SKY/JIRA Focus (service playbook - Procedure)", "updated": "2019-11-25T15:27:06+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Onboarding + Ops Support Model - SKY/JIRA Focus (service playbook)", "diff_to_upstream": []}, "CLS-353": {"assignee": "ganalc1", "created": "2019-05-30T18:43:27+10:00", "creator": "ganalc1", "description": "\"\r\n---Acceptance Criteria---\r\nExpand minimum acceptable learning paths on max and detailed training plans for cloud services plus key areas/roles in ANZ \r\n\r\n\r\n---Dependency--\r\n1. owl and edge\r\n2. Squads, vendor\r\n\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-353", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Learn@ANZ phase 2", "updated": "2019-09-11T09:10:00+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Learn@ANZ phase 2", "diff_to_upstream": []}, "CLS-352": {"assignee": "ganalc1", "created": "2019-05-30T18:42:53+10:00", "creator": "ganalc1", "description": "\"Develop Roadshows for Melbourne audience\r\n---Acceptance Criteria---\r\n.run x  Melbourne sessions and target an additional 300 participants \r\nDevelop X Technical deep dive sessions (provider squads and vendors) \r\n\r\n\r\n---Dependency--\r\n1. owl and edge\r\n2. Squads, vendor\r\nowl and edge\r\nSquads, vendor\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-352", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Melbourne Roadshow", "updated": "2019-09-11T09:09:42+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Melbourne Roadshow", "diff_to_upstream": []}, "CLS-350": {"assignee": "ganalc1", "created": "2019-05-30T18:40:42+10:00", "creator": "ganalc1", "description": "\"Telstra PEN SSD \r\n---Acceptance Criteria---\r\n\r\n---DOD---\r\nService transition artefacts reviewed and approved by PO\r\n---Dependency--\r\nAws, GCP Squads:\r\nDevelop documentation for cloud service transition\r\n.Networks\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-350", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Service Transition TPEN", "updated": "2019-09-10T16:39:50+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Service Transition TPEN", "diff_to_upstream": []}, "CLS-348": {"assignee": "ganalc1", "created": "2019-05-30T18:30:07+10:00", "creator": "ganalc1", "description": "\"\r\n ---Acceptance Criteria---\r\n Reviewed and approved by TAA\r\n\r\n---DOD---\r\n\r\nAudit items ISS4 Closed and treated\r\n\r\nSolution Documented \r\n Solution reviewed by Cloud services TAA\r\n Solution Approved by Cloud Services TAA\r\n Solution Accepted by command Centre\r\n\r\n---Dependency--\r\n AWS and GCP\r\n \"", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-348", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Workload assessment", "updated": "2019-09-10T16:39:39+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Workload assessment", "diff_to_upstream": []}, "CLS-347": {"assignee": "ganalc1", "created": "2019-05-30T18:29:44+10:00", "creator": "ganalc1", "description": "\"Workload placement questionnaire \r\n ---Acceptance Criteria---\r\n Reviewed and approved by TAA\r\n\r\n---DOD---\r\n Published and approved workload assessment and placement framework\r\n ---Dependency--\r\n Azure , Aws, GCP Squads:\r\n Register the list of services available for each cloud as a CI in SNOW\r\n\r\nIdentify placement criteria for Azure, AWS, GCP, Internal Cloud, Container platform\"\"\r\n AWS and GCP\"", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-347", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Workload placement  ", "updated": "2019-09-10T16:39:34+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Workload placement  ", "diff_to_upstream": []}, "CLS-346": {"assignee": "ganalc1", "created": "2019-05-30T18:28:20+10:00", "creator": "ganalc1", "description": "\"Review terms of use risk for Google  and define all cloud solution\r\n---Acceptance Criteria---\r\nClose risk item for Cloud training acceptable use\r\nupdate terms of use standard across all clouds\r\n---DOD---\r\n\r\nAudit items ISS4 Closed and treated\r\n\r\nSolution Documented \r\nSolution reviewed by Cloud services Google PO\r\nSolution Approved by Cloud Services Risk- Sean Yuen \r\n\r\n \r\n\r\n---Dependency--\r\nAWS and GCP\r\nrisk Sean yeung\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-346", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Terms of use Risk for Google", "updated": "2019-09-10T16:39:28+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Terms of use Risk for Google", "diff_to_upstream": []}, "CLS-345": {"assignee": "ganalc1", "created": "2019-05-30T18:27:49+10:00", "creator": "ganalc1", "description": "\"submit Monitoring and alerting solution for Risk Review and closure\r\n---Acceptance Criteria---\r\n1)Define a process in Cloud approval to keep Troux u todate\r\n2. Update Troux for all existing SaaS Cloud Assets \r\n3. Automated Cloud discovery for all \u2018discoverable\u2019 platforms which will trigger population of asset data to ServiceNow\r\n\r\n4. Cloud Operations monitoring tool enabled\r\n\r\n---DOD---\r\n\r\nAudit items ISS4 Closed and treated\r\n\r\nSolution Documented \r\nSolution reviewed by Cloud services TAA\r\nSolution Approved by Cloud Services TAA\r\nSolution Accepted by command Centre\r\n \r\n\r\n---Dependency--\r\nAWS and GCP\r\n AWS, GCP to provide Monitoring and alerting solution\r\nTAA: provide common solution / approach for Splunk integration\r\nEngagement with Shelde \"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-345", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - ISS4 Document and submit Monitoring and alerting solution", "updated": "2019-10-24T12:37:49+11:00", "estimate": null, "epic_ref": null, "epic_name": "CES - ISS4 Document and submit Monitoring and alerting solution", "diff_to_upstream": []}, "CLS-344": {"assignee": "ganalc1", "created": "2019-05-30T18:27:17+10:00", "creator": "ganalc1", "description": "\"Command Centre Dashboard\r\n---Acceptance Criteria---\r\nCreate Playbook\r\nCreate dashboard\r\nCommand Centre test & accept\r\n---DOD---\r\n\r\nAudit items ISS4 Closed and treated\r\n\r\nSolution Documented \r\nSolution reviewed by Cloud services TAA\r\nSolution Approved by Cloud Services TAA\r\nSolution Accepted by command Centre\r\n \r\n\r\n---Dependency--\r\nAWS and GCP\r\nSplunk\r\nvivek - cedrick -\r\ncommand centre\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-344", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Command Centre Dashboard ", "updated": "2019-09-11T09:09:24+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Command Centre Dashboard ", "diff_to_upstream": []}, "CLS-343": {"assignee": "ganalc1", "created": "2019-05-30T18:25:49+10:00", "creator": "ganalc1", "description": "\"retrospectively add poc items in SNOW\r\n---Acceptance Criteria---\r\nAdd inflight POC items to Cloud approval in SNOW\r\ndevelop attestation email\r\ninclude metrics reporting\r\n---DOD---\r\nSolution reviewed and approved by Cloud services TAL\r\nImplemented in Snow PROD\r\nSolution documented and reviewed by TAA\r\n---Dependency--\r\nSNOW\r\n\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-343", "labels": ["Service_Improvement"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud approval retrospectively add poc items in SNOW", "updated": "2019-09-11T09:09:18+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud approval retrospectively add poc items in SNOW", "diff_to_upstream": []}, "CLS-342": {"assignee": "ganalc1", "created": "2019-05-30T18:25:13+10:00", "creator": "ganalc1", "description": "\"migrate cloud approval form in Service now to provide oversight and governance\r\n---Acceptance Criteria---\r\nnotifications for : extension required - in progress - completed\r\n\r\n.Attestation notification generated for \r\n    POC data deleted  at completion of POC\r\n\r\n   Cloud approval conditions have not changed - yearly\r\n. Alignment to Troux for CI prior to approval\r\n---DOD---\r\nSolution reviewed and approved by Cloud services TAL\r\nImplemented in Snow PROD\r\nSolution documented and reviewed by TAA\r\n---Dependency--\r\nSNOW\r\nAmithash.Sharma@anz.com Gaurav.Jain4@anz.com  to create Workbook instructions to create Apps in Troux\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-342", "labels": ["Service_Improvement"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud approval form in SNOW", "updated": "2019-08-19T16:25:26+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud approval form in SNOW", "diff_to_upstream": []}, "CLS-340": {"assignee": "ganalc1", "created": "2019-05-30T18:23:01+10:00", "creator": "ganalc1", "description": "\"POC for Stackdriver to Snow Eventing and alerting \r\n---Acceptance Criteria---\r\nNon production POC\r\n---DOD---\r\nSolution Documented reviewed and approved by Cloud services TAA\r\nProduction Change approved and implemented\r\n\r\n\r\n\r\n\r\n---Dependency--\r\n\r\n.TAA to develop H/L design for Cloud to cloud integration between Stack Driver and SNOW\r\n.SNOW to provide access and permissions to API\r\n.GCP to provide POC support\r\n\"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-340", "labels": ["Service_Improvement"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Google Eventing to service Now (POC) ", "updated": "2019-09-11T09:08:23+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Google Eventing to service Now (POC) ", "diff_to_upstream": []}, "CLS-339": {"assignee": "ganalc1", "created": "2019-05-30T18:22:06+10:00", "creator": "ganalc1", "description": "\"tactical implementation of the inventory solution for Service now. This solution will provide input into the strategic solution being developed (POC) by techops\r\n---Acceptance Criteria---\r\nimplemented in production \r\n---DOD---\r\nSolution Documented reviewed and approved by Cloud services TAA\r\nProduction Change approved and implemented\r\n\r\n\r\n\r\n\r\n---Dependency--\r\n\r\n.AWS to develop suitable Architectural documentation for the discovery of assets in their environment  \r\n.AWS to tag business applications for the ingestion into service now\r\n.AWS to define services for ingestion into service now\r\n.AWS to support POC for Snow Service Discovery \r\n.Google to support  POC for Snow Service Discovery \"\r\n", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-339", "labels": ["Service_Improvement"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Service now Inventory AWS", "updated": "2019-09-11T09:08:54+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Service now Inventory AWS", "diff_to_upstream": []}, "CLS-333": {"assignee": "ganalc1", "created": "2019-05-30T17:53:10+10:00", "creator": "ganalc1", "description": "Build on prem infrastructure and firewall rules\r\n\r\n. On prem infra build & tested in non-prod\r\n. Change approved and executed for on -Prem infra\r\n. Change approved and executed for Fire wall rules\r\n. File transfer function tested  test results recorded ", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-333", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud Sync on Prem S3 Infrastructure (NP)", "updated": "2019-09-10T16:38:39+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud Sync on Prem S3 Infrastructure (NP)", "diff_to_upstream": []}, "CLS-331": {"assignee": "delbustr", "created": "2019-05-28T18:39:39+10:00", "creator": "soonw", "description": "The product must have all key service and incident management procedures in place and tested prior being available as a production service\r\n\r\n\u00a0\r\n\r\nDependencies: - IAM", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-331", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Create Playbook for Access Management", "updated": "2019-11-25T15:26:12+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - PI5 - Create Playbook for Access Management", "diff_to_upstream": []}, "CLS-326": {"assignee": "delbustr", "created": "2019-05-26T17:56:08+10:00", "creator": "soonw", "description": "The product must have all key service and incident management procedures in place and tested prior being available as a production service\r\n\r\n\u00a0\r\n\r\nDependencies: -\u00a0\r\n\r\n\u00a0\r\n\r\nthis EPIC is for SKY focus to\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-326", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Ready for Squad", "summary": "AWS - Onboarding + Ops Support Model", "updated": "2019-09-12T16:02:56+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Onboarding + Ops Support Model", "diff_to_upstream": []}, "CLS-324": {"assignee": "delbustr", "created": "2019-05-24T16:19:55+10:00", "creator": "soonw", "description": "As a Product Owner, I want to perform a POC of Terraform Enterprise with AWS and a test application.\r\n\r\nExpected outcome is a thorough analysis of TFE vs existing AppSpec pipelines, highlighting pros/cons, capability gaps, costs, recommended next steps, etc.\u00a0", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-324", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Terraform Enterprise POC (APP)", "updated": "2019-08-09T13:51:21+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Terraform Enterprise POC (APP)", "diff_to_upstream": []}, "CLS-321": {"assignee": "delbustr", "created": "2019-05-24T16:08:13+10:00", "creator": "soonw", "description": "As a Product Owner, I want to perform Terraform Discovery to understand the\u00a0service capabilities, availability, integration points, authentication and authorisation model, licensing model, etc.\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-321", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Terraform Discovery & POC Design", "updated": "2019-07-31T09:59:13+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Terraform Discovery & POC Design", "diff_to_upstream": []}, "CLS-320": {"assignee": "delbustr", "created": "2019-05-24T15:57:14+10:00", "creator": "soonw", "description": "As a Product Owner, I want the platform provided RHEL SOEs to follow ANZ production hardening standards (exclude puppet)\r\n\r\ndiscuss further with the team on waht else need to go in a acceptance criterial\u00a0\r\n\r\n\u00a0\r\n\r\ndependencies Unix team\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-320", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Ready for Squad", "summary": "OLD-DELETE-AWS - SOE + Configuration Mgmt + Patch Mgmt (RHEL)", "updated": "2019-11-14T12:06:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "OLD-DELETE-AWS - SOE + Configuration Mgmt + Patch Mgmt (RHEL)", "diff_to_upstream": []}, "CLS-319": {"assignee": "delbustr", "created": "2019-05-24T14:42:48+10:00", "creator": "soonw", "description": "The product must have all key controls in place and controls assurance approved before it can be declared production ready\r\n\r\n\u00a0\r\n\r\nDependencies: -\r\nSOC readiness to develop security playbooks & conduct fire-drills\r\nRisk team buy-in for appropriate assurance and reviews of controls and endorsement of results\r\nConfiguration management, network and AV teams, Vuln Scanning teams availability for playbooks and fire-drills\r\nControl Owner", "fixVersions": [], "issuetype": "Epic", "key": "CLS-319", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Ready for Squad", "summary": "AWS - Production Shared Services Controls & Assurance", "updated": "2019-11-14T13:16:56+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Production Shared Services Controls & Assurance", "diff_to_upstream": []}, "CLS-318": {"assignee": "delbustr", "created": "2019-05-24T14:36:19+10:00", "creator": "soonw", "description": "Finish the work with Shelde that started in previous PIs.\r\n\r\nProd and NonProd forwarding of logs to Cyber Defense Splunk Platforms.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-318", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Finish Platform SIEM Logging to Cyber Defense Splunk", "updated": "2019-09-13T12:47:00+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Finish Platform SIEM Logging to Cyber Defense Splunk", "diff_to_upstream": []}, "CLS-317": {"assignee": "delbustr", "created": "2019-05-24T14:30:20+10:00", "creator": "soonw", "description": "Enable Inspector in AWS as tactical solution for\u00a0Vulnerability Management on SOE.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-317", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic with Squad", "summary": "AWS - Vulnerability Management for SOE - Inspector", "updated": "2019-11-26T20:12:25+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Vulnerability Management for SOE - Inspector", "diff_to_upstream": []}, "CLS-316": {"assignee": "delbustr", "created": "2019-05-23T17:15:10+10:00", "creator": "soonw", "description": "AWS - Production Shared Services Readiness (SKY/JIRA)\r\n\r\nbuild production shared services component to support SKY and Jira", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-316", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic in Progress", "summary": "AWS - Production Shared Services AV/AD/Guac Readiness (SKY/JIRA)", "updated": "2019-11-26T20:10:49+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Production Shared Services Readiness (SKY/JIRA)", "diff_to_upstream": []}, "CLS-315": {"assignee": "delbustr", "created": "2019-05-23T17:06:45+10:00", "creator": "cuffr", "description": "Setup\u00a0DNS forwarding, CA/LDAPS, Firewall rules, Trust etc.\r\n\r\n'Operationalise' the globaltest --> non-Production AD Trust\u00a0by ensuring all services are fully implemented and tested, processes are in place, AD Management Host locked down, IIQ is managing the directory, ServiceNow integration in place for Incident & Change.", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-315", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "cuffr", "status": "Epic in Progress", "summary": "AWS-Implement AD solution nonProd and Prod T27", "updated": "2019-11-29T14:25:37+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Implement AD solution nonProd and Prod T27", "diff_to_upstream": []}, "CLS-314": {"assignee": "delbustr", "created": "2019-05-22T14:26:37+10:00", "creator": "soonw", "description": "The product must have all key service and incident management procedures in place and tested prior being available as a production service\r\n\r\n\u00a0\r\n\r\nDependencies: - CES and SNOW\r\nNetwork team for Dx & perimeter firewall teams for capacity management\r\nCloud engagement squad for service, incident & change management \u2013 ANZ cloud practice standardisation in Service Now\r\n\r\n\u00a0\r\n\r\nthis EPIC is for SKY focus to\u00a0", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-314", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Onboarding + Ops Support Model - SKY/JIRA Focus (control playbook - Process)", "updated": "2019-09-12T10:53:13+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Onboarding + Ops Support Model - SKY/JIRA Focus", "diff_to_upstream": []}, "CLS-292": {"assignee": "delbustr", "created": "2019-05-17T16:11:53+10:00", "creator": "soonw", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-292", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS BAU Task PI4", "updated": "2019-11-19T15:31:42+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS BAU Task", "diff_to_upstream": []}, "CLS-291": {"assignee": "praveenp", "created": "2019-05-16T20:09:48+10:00", "creator": "praveenp", "description": "*Description:*\r\n * Support users of Azure AD\r\n * Onboard new applications into Azure AD\r\n * Maintain Azure AD documentation", "fixVersions": [], "issuetype": "Epic", "key": "CLS-291", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure AD - BAU", "updated": "2019-11-20T09:23:57+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure AD - BAU", "diff_to_upstream": []}, "CLS-290": {"assignee": "delbustr", "created": "2019-05-09T16:46:24+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-290", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Onboard Third wave of applications", "updated": "2019-06-14T19:33:17+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Onboard Third wave of applications", "diff_to_upstream": []}, "CLS-289": {"assignee": "delbustr", "created": "2019-05-09T16:45:53+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-289", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Onboard second wave of applications", "updated": "2019-06-14T19:33:12+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Onboard second wave of applications", "diff_to_upstream": []}, "CLS-288": {"assignee": "delbustr", "created": "2019-05-09T16:45:12+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-288", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-Onboard first wave of applications", "updated": "2019-11-20T17:12:54+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Onboard first wave of applications", "diff_to_upstream": []}, "CLS-287": {"assignee": "delbustr", "created": "2019-05-09T16:41:27+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-287", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Deliver Kafka consumable", "updated": "2019-11-22T11:02:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Deliver Kafka consumable", "diff_to_upstream": []}, "CLS-286": {"assignee": "delbustr", "created": "2019-05-09T16:40:36+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-286", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS - T3/T4 - New consumable security assessment", "updated": "2019-10-09T12:40:46+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - T3/T4 - New consumable security assessment", "diff_to_upstream": []}, "CLS-285": {"assignee": "delbustr", "created": "2019-05-09T16:39:57+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-285", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-get security approvals for EFX sandpit - external con", "updated": "2019-06-14T19:31:45+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-get security approvals for EFX sandpit - external con", "diff_to_upstream": []}, "CLS-284": {"assignee": "delbustr", "created": "2019-05-09T16:37:37+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-284", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Implement alternative for Ibahn file transfers", "updated": "2019-06-14T19:31:50+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Implement alternative for Ibahn file transfers", "diff_to_upstream": []}, "CLS-283": {"assignee": "delbustr", "created": "2019-05-09T16:35:38+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-283", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Get security approvals for Ibahn - external con", "updated": "2019-06-14T19:32:39+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Get security approvals for Ibahn - external con", "diff_to_upstream": []}, "CLS-282": {"assignee": "delbustr", "created": "2019-05-09T16:34:49+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-282", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Design alternative for Ibahn file transfers", "updated": "2019-06-14T19:32:32+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Design alternative for Ibahn file transfers", "diff_to_upstream": []}, "CLS-281": {"assignee": "delbustr", "created": "2019-05-09T16:33:18+10:00", "creator": "delbustr", "description": "We need a reliable mechanism to transfer files between AWS S3 and ANZ, something that deals with proxies, security concerns, differences between ANZ Melbourne and Singapore datacentres, etc.\r\n\r\nThis epic is about solving the underlying technical problems we are currently facing with S3 file transfers; this is not about building a 'Managed File Transfer' solution.\r\n\r\nUse cases include:\r\n * ANZ MEL NonProd Server --> S3\r\n * ANZ SG NonProd Server --> S3\u00a0 *(covered in CLS-280)*\r\n * ANZ User --> S3 via MEL Prod perimeter\r\n * ANZ User --> S3 via SG Prod perimeter\r\n * ANZ NonProd User (VDI) --> S3 via MEL Prod perimeter\r\n * ANZ NonProd User (VDI) --> S3 via SG Prod perimeter\r\n * There will also be variations for AWS CLI and SDK (e.g. .NET, Java)\r\n\r\nWork with other Cloud Services squads to resolve issues with proxies etc.\u00a0 This is a high-priority Cloud Services initiative.\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["PI6"], "issuetype": "Epic", "key": "CLS-281", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic with Squad", "summary": "AWS-Reliable solution for S3 file transfers (remaining use cases)", "updated": "2019-11-19T19:19:28+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Reliable solution for S3 file transfers ", "diff_to_upstream": []}, "CLS-280": {"assignee": "delbustr", "created": "2019-05-09T16:31:35+10:00", "creator": "delbustr", "description": "*We need a reliable mechanism to transfer files between AWS S3 and ANZ.*\r\n\r\nThis is a high-priority epic focussing on Sky on Cloud (other S3 use cases are covered in CLS-281)\r\n\r\nThe solution must deal with proxy issues, security concerns, differences between ANZ Melbourne and Singapore datacentres, etc.\r\n\r\nThis epic is about solving the underlying technical problems we are currently facing with S3 file transfers; this is +not+ about building a 'Managed File Transfer' solution.\r\n\r\n*The key use case for Sky on Cloud is:*\r\n * ANZ SG NonProd / Prod Server --> S3\u00a0via Squid Proxy (bypassing on-premises proxies)\r\n\r\n\u00a0\r\n\r\n*The proposed design is included at high level in the Design story.*\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-280", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-Reliable solution for S3 file transfers (Sky on Cloud)", "updated": "2019-08-14T12:35:54+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Reliable solution for S3 file transfers (Sky on Cloud)", "diff_to_upstream": []}, "CLS-279": {"assignee": "delbustr", "created": "2019-05-09T16:28:23+10:00", "creator": "delbustr", "description": "*Assumes preconfiguration of\u00a0DNS forwarding, CA/LDAPS, Firewall rules, Trust etc in CLS-278*\r\n\r\n'Operationalise' the NonProd AD solution by ensuring all services are fully implemented and tested, processes are in place, AD Management Host locked down, IIQ is managing the directory, ServiceNow integration in place for Incident & Change.\r\n\r\n*Also note:* Things like ServiceNow integration for Incident & Change will happen as part of a separate PI4 epic, and will likely happen near the end of PI4.\r\n\r\n\u00a0", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-279", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-Implement AD solution for NonProd", "updated": "2019-08-14T12:35:44+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Implement AD solution for NonProd", "diff_to_upstream": []}, "CLS-278": {"assignee": "delbustr", "created": "2019-05-09T16:27:20+10:00", "creator": "delbustr", "description": "The solution is for a 1-way AD Trust from CLOUD AD --> GLOBAL AD (Prod & NonProd instances, with separate trusts for AWS Sydney & Singapore regions). Contact Richard Cuff for details.\r\n\r\nThis will allow applications hosted in AWS to grant access to GLOBAL users (this does +not+ allow us to grant access to on-premises systems with CLOUD AD identity).\r\n\r\nThis may also be used for remote access to Windows & Linux instances in AWS.\r\n\r\nSystem integration (server-to-server) between ANZ and AWS is not intended to be covered by this solution (think about mutual auth with certificates, secrets management etc) .\r\n\r\nKey activities:\r\n * POC in AWS to test Firewall rule assumptions, behaviour of LDAP with Domain Local Groups etc.\r\n * Detailed Design - DNS, CA/LDAPS, Trust, IIQ, UAM, etc\r\n * NonProd CLOUD AD Setup (incl GLOBALTEST trust) and test all use cases.\r\n * IAF & SDC endorsement.\r\n\r\n('Operationalise' the NonProd AD solution in CLS-279, Prod solution in CLS-315).\r\n\r\nKey dependencies:\r\n * I&AM IIQ Squad - IIQ design and integration work.\r\n * Commodity Compute AD Squad - assist with design work, NonProd setup & troubleshooting.\r\n\r\n\u00a0", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-278", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS-Develop AD solution for AWS", "updated": "2019-09-12T10:53:50+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Develop AD solution for AWS ", "diff_to_upstream": []}, "CLS-277": {"assignee": "delbustr", "created": "2019-05-09T15:01:58+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-277", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Deliver Kubernetes consumable non-prod/prod", "updated": "2019-06-14T19:31:28+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Deliver Kubernetes consumable non-prod/prod", "diff_to_upstream": []}, "CLS-276": {"assignee": "delbustr", "created": "2019-05-09T15:00:47+10:00", "creator": "delbustr", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-276", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "delbustr", "status": "Backlog", "summary": "AWS-Design and sign off Kubernetes security controls", "updated": "2019-06-14T19:25:33+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS-Des & sign off Kubernetes sec cntrls", "diff_to_upstream": []}, "CLS-275": {"assignee": "tawhak", "created": "2019-05-08T11:48:35+10:00", "creator": "tawhak", "description": "Infrastructure is currently monitored via different means within IaaS based on individual platforms.   Alerting or eventing plus associated treatments (email alert, Service Now ticket, priorities) are not centrally documented or captured to align Service Now auto generated tickets with a monitoring or event standard or matrix.\r\n\r\nThis Feature is to deliver agreed monitoring and alerting into Service Now as per Tech Area Monitoring Standards of Event Management Matrix\r\n", "fixVersions": [], "issuetype": "Epic", "key": "CLS-275", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "tawhak", "status": "Backlog", "summary": "Alerting and Events sent to Service Now in accordance with agreed standards", "updated": "2019-05-08T11:48:35+10:00", "estimate": null, "epic_ref": null, "epic_name": "Monitoring and Alerting Standards", "diff_to_upstream": []}, "CLS-274": {"assignee": "delbustr", "created": "2019-03-12T16:12:47+11:00", "creator": "soonw", "description": "As a PO I want a clear definition of the Non-Prod environment so we can get approvals to deliver and clearly communicate offering to customers and get approvals from\u00a0\r\n\r\n\u00a0\r\n\r\nDOD :\u00a0 artifacts are produced and endorsed by architecture forums so that future architecture and\u00a0 security approvals have a pattern they can refer to and we can implement. scope is limited to what we know now.\u00a0", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-274", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS -PI2- non-prod architecture and security design", "updated": "2019-09-11T11:39:47+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS -PI2- non-prod architecture and security design", "diff_to_upstream": []}, "CLS-271": {"assignee": "delbustr", "created": "2019-03-08T12:28:49+11:00", "creator": "ayyalr1", "description": "As a Product Owner, I want the platform to be ready with the SOE\u00a0compliance reporting/enforcement process and automatic testing process available\r\n\r\n\u00a0\r\n\r\nDependencies:\r\n\u2022 Unix team\r\n\u2022 Windows team\r\n\u2022 Security\r\n\u2022ANZ process bank", "fixVersions": [], "issuetype": "Epic", "key": "CLS-271", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ayyalr1", "status": "Backlog", "summary": "AWS- SOE and Configuration Management - Stretch", "updated": "2019-11-14T12:05:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS- SOE and Configuration Management - Stretch", "diff_to_upstream": []}, "CLS-270": {"assignee": "delbustr", "created": "2019-03-08T12:27:36+11:00", "creator": "chettis", "description": "As a PO I want to enable an account in AWS to run a Redlock POC that is able to leverage our innovation environment and read data from our AWS landing zone so we can enable the POC team to properly evaluate the tool\r\n\r\n\u00a0\r\n\r\nDOD : REdlock / Palo alto can see data for our non prod environment\u00a0 and selected innovation account\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-270", "labels": ["CS_PI3_10"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "chettis", "status": "Epic Done", "summary": "AWS - RedLock PoC in Non-Prod + 1 x Innovation Account - Stretch", "updated": "2019-09-11T11:39:41+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - RedLock PoC in Non-Prod + 1 x Innovation Account - Stretch", "diff_to_upstream": []}, "CLS-269": {"assignee": "delbustr", "created": "2019-03-08T12:22:40+11:00", "creator": "sharma48", "description": "The product must have all key controls in place and controls assurance approved before it can be declared production ready\r\n\r\n\u00a0\r\n\r\nDependencies: -\r\nSOC readiness to develop security playbooks & conduct fire-drills\r\nRisk team buy-in for appropriate assurance and reviews of controls and endorsement of results\r\nConfiguration management, network and AV teams, Vuln Scanning teams availability for playbooks and fire-drills\r\nControl Owner", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-269", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "sharma48", "status": "Epic Done", "summary": "AWS - Production Shared Services Security Controls & Assurance - SKY/JIRA Focus", "updated": "2019-07-16T11:19:33+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Production Shared Services Controls & Assurance - SKY/JIRA Focus", "diff_to_upstream": []}, "CLS-268": {"assignee": "delbustr", "created": "2019-03-07T18:48:54+11:00", "creator": "sharma48", "description": "Insto is interested in on-boarding their below applications on AWS cloud.\r\n\r\n\u00a0\r\n|*Project*\u00a0|*Domain*|\r\n|SKY On Cloud|INSTO|\r\n|Murex|INSTO|\r\n|Insto Dev/Test Xceptor|INSTO|\r\n\r\nAWS Squad to help them by provide guidance on automation pipeline where ever required. This will help them to do their POC on AWS and on-board application on non-prod AWS platform", "fixVersions": [], "issuetype": "Epic", "key": "CLS-268", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "sharma48", "status": "Epic Done", "summary": "AWS - Training application teams for on-boarding on AWS ", "updated": "2019-11-25T15:26:36+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Training application team ", "diff_to_upstream": []}, "CLS-265": {"assignee": "ganalc1", "created": "2019-03-06T12:14:54+11:00", "creator": "ganalc1", "description": "\"As a product owner I want to create a functional data and analytics framework so that it  can assist in the decision making, understanding metrics for use and concentration \r\n---Acceptance Criteria----\r\nDevelop engagement metrics for \r\n\u2022 Learn Cloud @ ANZ\r\n\u2022 Cloud Approvals\r\n\u2022 Engagement\r\n\u2022 Innovation and learning environment  metrics \r\n\u2022 Cloud approvals / pocs / audit\r\n\u2022 Cloud usage concentrations\r\n---Dependencies----\r\nlearning and development squad\r\n- Provide engineering support to capture metrics for the Edge \r\n\r\nMax publishing team:\r\nProvide monthly metrics \r\n\r\nAzure , Aws, GCP Squads:\r\nprovide metrics for cloud environments (i.e. number of users / accounts / environments\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-265", "labels": ["CS_PI3_1"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Engagement  Data and Analytics", "updated": "2019-05-24T15:45:47+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Engagement  Data and Analytics", "diff_to_upstream": []}, "CLS-264": {"assignee": "ganalc1", "created": "2019-03-06T12:11:57+11:00", "creator": "ganalc1", "description": "There is a need a complete a POC for the guardrail process to determine the viability of the service for our customers and the cloud services squad.\r\n\r\nThis POC will determine use cases that are applicable for\u00a0guard rail approval and if it ultimately is approved through the Guardrail process or whether the applications don't satisfy the requirements based on further analysis.\r\n\r\nPOC is defined as a 1 PI period that will determine the viability of the guard rails process. A process exemption form will be submitted which will cover the approval of the POC to commence. No process documents or customer facing documents will be updated to notify customers of the POC but it will be an internal process conducted by the Cloud Services team. Note: Customers may be informed of the process in an unofficial POC point of view.\r\n\r\n\u00a0*As a* Cloud Services TAL\r\n\r\n*I want to* know whether guardrail approval is successful for use cases\r\n\r\n*to determine* if it should be applied as an official process\r\n\r\n\"As a product owner I want run a POC for guard rail cloud approval process so that it can better assess Guardrail viability for customers.\r\n +_*---Acceptance Criteria----*_+\r\n * Guardrail\u00a0POC use cases have been assessed to provide outcomes whether\u00a0successful or unsuccessful\r\n * The information is presented to TAL and cloud services representatives for review and feedback\r\n * Workload placement / Assessment considered as part of assessment\r\n * The POC is run for 1-2 months\r\n\r\n+_*---Dependencies----*_+\r\n Guardrail approval\r\n Workload placement / Assessment\r\n\r\nSharePoint Guy (Amit something)\r\n\r\nO365 Share Point OnLine\"", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-264", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": " CES - Cloud approval updates (Guard Rail POC)", "updated": "2019-05-23T10:50:08+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud approval updates", "diff_to_upstream": []}, "CLS-263": {"assignee": "ganalc1", "created": "2019-03-06T12:02:07+11:00", "creator": "ganalc1", "description": "\"As a product owner I want a single view of my customers TCO including their % of the cloud services cost reflected in Apptio so that provide cost transparency for my customers\r\n---Acceptance Criteria----\r\nApptio will provide Show back of the TCO for each customer based on \r\nApplication, BSB/CC, Consumption cost and shared services cost\r\n---Dependencies----\r\nApptio:\r\n\r\n\u2022 Develop cloud shared service pool as a cost item in Apptio (as per agreed Model) \r\n\u2022 Include shared services cost for each customer \r\n\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-263", "labels": ["CS_PI3_3"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Apptio shared services cost", "updated": "2019-05-24T14:55:20+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Apptio shared services cost", "diff_to_upstream": []}, "CLS-262": {"assignee": "ganalc1", "created": "2019-03-06T11:54:52+11:00", "creator": "ganalc1", "description": "\"As a product owner I want treat Audit risk and Issues  (assigned to Cloud services) by developing monitoring and reporting capability for cloud services so that I can provide secure environment for my customers \r\n---Acceptance Criteria----\r\nSplunk integration and dashboard development\r\nintegration of alerts into  Service now\r\n---Dependencies----\r\nAzure , Aws, GCP Squad\r\n\u2022 Provide Splunk integration and dashboard setup.\r\n\u2022 Develop Splunk to service now alerting \r\n\r\nService now team: \r\nProvide engineering support for integration for each cloud\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-262", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES Splunk - SNOW monitoring and alerting", "updated": "2019-05-24T15:45:38+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES Splunk - SNOW monitoring and alerting", "diff_to_upstream": []}, "CLS-261": {"assignee": "ganalc1", "created": "2019-03-06T11:49:49+11:00", "creator": "ganalc1", "description": "\"As a product owner I want understand Command centers requirement for monitoring of cloud services  so that I can provide secure environment for my customers and close audit item ISS4\r\n---Acceptance Criteria----\r\nCommand centre monitoring and tooling requirements \r\nintegration of cloud services alerting information into Command Centre\r\n---Dependencies----\r\nTech ops\r\n\u2022 Command centre requirements for  Cloud operations monitoring integration \r\n\u2022 Ingest cloud  alerting from Service now\r\n\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-261", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Command Centre monitoring requirements", "updated": "2019-05-24T15:44:21+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Command Centre monitoring requirements", "diff_to_upstream": []}, "CLS-260": {"assignee": "vamshiky", "created": "2019-03-06T11:35:44+11:00", "creator": "zanonn", "description": "(M) Azure AD Sync production improvements (SP) (10 points)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-260", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Azure AD Sync production improvements", "updated": "2019-09-02T11:17:34+10:00", "estimate": 10.0, "epic_ref": null, "epic_name": "GCP - Azure AD Sync production improvements", "diff_to_upstream": []}, "CLS-259": {"assignee": "ganalc1", "created": "2019-03-06T11:34:17+11:00", "creator": "ganalc1", "description": "\"As product owner I want Roadshow the learning capabilities developed by the Engagement Squad  so that we can accelerate the organizations cloud capability, enabling increased adoption of cloud technologies\r\n---Acceptance Criteria----\r\nDeliver Learn Cloud@ANZ roadshow in China, Australia, Philippines and India.\r\n\r\n---Dependencies----\r\n $$$$\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-259", "labels": ["CS_PI3_2"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Roadshow (Learn Cloud@ANZ)", "updated": "2019-05-24T15:17:37+10:00", "estimate": null, "epic_ref": null, "epic_name": "Roadshow (Learn Cloud@ANZ)", "diff_to_upstream": []}, "CLS-258": {"assignee": null, "created": "2019-03-06T11:04:20+11:00", "creator": "morriss9", "description": "(H) Sign off from Security of Policy requirements (Peter)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-258", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "morriss9", "status": "Backlog", "summary": "GCP - Sign off from Security of Policy requirements", "updated": "2019-09-02T11:17:41+10:00", "estimate": 4.0, "epic_ref": null, "epic_name": "GCP - Sign off from Security of Policy requirements", "diff_to_upstream": []}, "CLS-257": {"assignee": null, "created": "2019-03-06T11:03:44+11:00", "creator": "morriss9", "description": "(H) Create Policies as code based off Lucas controls. (Peter)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-257", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "morriss9", "status": "Backlog", "summary": "GCP - Create Policies as code based off Lucas controls.", "updated": "2019-09-02T11:18:17+10:00", "estimate": 7.0, "epic_ref": null, "epic_name": "GCP - Create Policies as code based off Lucas controls.", "diff_to_upstream": []}, "CLS-256": {"assignee": null, "created": "2019-03-06T11:03:09+11:00", "creator": "morriss9", "description": "(H) Learn how to create and document how so others can use Config Validator and Sentinal (Peter) (4 Points)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-256", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "morriss9", "status": "Backlog", "summary": "GCP - Learn how to create and document how so others can use Config Validator and Sentinal", "updated": "2019-09-02T11:18:00+10:00", "estimate": 4.0, "epic_ref": null, "epic_name": "GCP - Learn how to create and document how so others can use Config Validator and Sentinal", "diff_to_upstream": []}, "CLS-255": {"assignee": "vamshiky", "created": "2019-03-06T11:02:18+11:00", "creator": "zanonn", "description": "(VH) Investigate how we stop people logging on from home after getting a token whilst at work eg Guest Wifi. Google Premium, IAM Conditions.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-255", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Investigate how we stop people logging on from home after getting a token whilst at work eg Guest Wifi. Google Premium, IAM Conditions.", "updated": "2019-09-02T11:19:01+10:00", "estimate": 8.0, "epic_ref": null, "epic_name": "GCP - Investigate how we stop people logging on from home after getting a token whilst at work eg Guest Wifi. Google Premium, IAM Conditions.", "diff_to_upstream": []}, "CLS-254": {"assignee": "vamshiky", "created": "2019-03-06T11:00:53+11:00", "creator": "zanonn", "description": "(M) Move Guardian to SAAS solution (Sam) (1 Point)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-254", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Move Guardian to SAAS solution", "updated": "2019-09-02T11:18:26+10:00", "estimate": 1.0, "epic_ref": null, "epic_name": "GCP - Move Guardian to SAAS solution", "diff_to_upstream": []}, "CLS-253": {"assignee": "vamshiky", "created": "2019-03-06T10:57:38+11:00", "creator": "zanonn", "description": "(L) Guardian/Forseti upgrade (Sam)\u00a0 (3 Points)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-253", "labels": [], "lastViewed": null, "priority": "Low", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Guardian/Forseti upgrade", "updated": "2019-09-02T11:18:33+10:00", "estimate": 3.0, "epic_ref": null, "epic_name": "GCP - Guardian/Forseti upgrade", "diff_to_upstream": []}, "CLS-252": {"assignee": "vamshiky", "created": "2019-03-06T10:56:49+11:00", "creator": "zanonn", "description": "(VH) Logging enablement audit, fix, mandate (who can change) via code/policies (Uday\u00a0*Total 20 SPs*\u00a0)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-252", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Logging enablement audit, fix, mandate (who can change) via code/policies", "updated": "2019-09-02T11:18:41+10:00", "estimate": 20.0, "epic_ref": null, "epic_name": "GCP - Logging enablement audit, fix, mandate (who can change) via code/policies", "diff_to_upstream": []}, "CLS-251": {"assignee": "vamshiky", "created": "2019-03-06T10:55:54+11:00", "creator": "zanonn", "description": "(H) Document Bus Continuity plans for host project, rebuild, mention liens, re-attach service projects, list out components (Jason)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-251", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Document Bus Continuity plans for host project, rebuild, mention liens, re-attach service projects, list out components", "updated": "2019-09-02T11:18:51+10:00", "estimate": 22.0, "epic_ref": null, "epic_name": "GCP - Document Bus Continuity plans for host project, rebuild, mention liens, re-attach service projects, list out components", "diff_to_upstream": []}, "CLS-250": {"assignee": "vamshiky", "created": "2019-03-06T10:55:13+11:00", "creator": "zanonn", "description": "(M) VPC Service Control coverage review and action (Jason)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-250", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - VPC Service Control coverage review and action", "updated": "2019-09-02T11:19:10+10:00", "estimate": 25.0, "epic_ref": null, "epic_name": "GCP - VPC Service Control coverage review and action", "diff_to_upstream": []}, "CLS-249": {"assignee": "vamshiky", "created": "2019-03-06T10:53:30+11:00", "creator": "zanonn", "description": "(VH) Project IAM Cleanup, including remove old Forseti projects (Prasanna -\u00a0*Total 37 SP*)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-249", "labels": ["CS_PI3_5"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "zanonn", "status": "Epic Done", "summary": "GCP - Project IAM Cleanup", "updated": "2019-09-02T11:20:12+10:00", "estimate": 37.0, "epic_ref": null, "epic_name": "GCP - Project IAM Cleanup, including remove old Forseti projects", "diff_to_upstream": []}, "CLS-248": {"assignee": "vamshiky", "created": "2019-03-06T10:52:50+11:00", "creator": "zanonn", "description": "(H) Rebuild via TerraForm (Anil) or Re-configure where required. Projects and Services eg. Proxy (Anil) (*Total 26 Story points*)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-248", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Rebuild via TerraForm or Re-configure where required", "updated": "2019-09-02T11:23:02+10:00", "estimate": 26.0, "epic_ref": null, "epic_name": "GCP - Rebuild via TerraForm or Re-configure where required", "diff_to_upstream": []}, "CLS-247": {"assignee": "vamshiky", "created": "2019-03-06T10:51:19+11:00", "creator": "zanonn", "description": "(L) Audit requirements - ISCC, PUAM, CCA, GCC (Vamshi)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-247", "labels": [], "lastViewed": null, "priority": "Low", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Audit requirements - ISCC, PUAM, CCA, GCC", "updated": "2019-09-02T11:19:17+10:00", "estimate": 8.0, "epic_ref": null, "epic_name": "GCP - Audit requirements - ISCC, PUAM, CCA, GCC", "diff_to_upstream": []}, "CLS-246": {"assignee": "vamshiky", "created": "2019-03-06T10:50:38+11:00", "creator": "zanonn", "description": "(VH) Have GCP Services Certified for NSW Gov and OB and written down\u00a0(Dependency on Security)\u00a0\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-246", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Have GCP Services Certified for NSW Gov and OB", "updated": "2019-09-02T11:22:51+10:00", "estimate": 75.0, "epic_ref": null, "epic_name": "GCP - Have GCP Services Certified for NSW Gov and OB", "diff_to_upstream": []}, "CLS-245": {"assignee": "vamshiky", "created": "2019-03-06T10:49:54+11:00", "creator": "zanonn", "description": "(H) GCP IAM/UAM 2.0 including Service account permissions including TF and who can create accounts and keys, leveraging Vault , identify priv functions, Temporary Elevated access, Break Glass, what should and should not be created by TF eg Host project perhaps not (Prasanna -\u00a0*Total 26 SP*)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-245", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - IAM/UAM 2.0", "updated": "2019-09-02T11:19:25+10:00", "estimate": 26.0, "epic_ref": null, "epic_name": "GCP - IAM/UAM 2.0", "diff_to_upstream": []}, "CLS-243": {"assignee": "vamshiky", "created": "2019-03-06T10:48:09+11:00", "creator": "zanonn", "description": "(VH) Governance Documentation SSD, IAM, APRA??? (Nathan)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-243", "labels": ["CS_PI3_5"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "zanonn", "status": "Epic Done", "summary": "GCP - Develop Platform Playbooks", "updated": "2019-09-02T11:15:33+10:00", "estimate": 44.0, "epic_ref": null, "epic_name": "GCP - Develop Platform Playbooks", "diff_to_upstream": []}, "CLS-242": {"assignee": "vamshiky", "created": "2019-03-06T10:45:39+11:00", "creator": "zanonn", "description": "(L) Splunk on GCP, containerised (Sam) (8 points)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-242", "labels": [], "lastViewed": null, "priority": "Low", "project": "CLS", "reporter": "zanonn", "status": "Backlog", "summary": "GCP - Splunk on GCP, containerised", "updated": "2019-09-02T11:19:30+10:00", "estimate": 8.0, "epic_ref": null, "epic_name": "GCP - Splunk on GCP, containerised", "diff_to_upstream": []}, "CLS-241": {"assignee": "vamshiky", "created": "2019-03-06T10:44:56+11:00", "creator": "zanonn", "description": "(H) Asset management - SNOW CIs (Sam)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-241", "labels": ["CS_PI3_5"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "zanonn", "status": "Epic Done", "summary": "GCP - Asset management - SNOW CIs", "updated": "2019-07-12T08:37:13+10:00", "estimate": 12.0, "epic_ref": null, "epic_name": "GCP - Asset management - SNOW CIs", "diff_to_upstream": []}, "CLS-240": {"assignee": "vamshiky", "created": "2019-03-06T10:44:18+11:00", "creator": "zanonn", "description": "(VH) Standard Project, including GKE, limiting network, Kubectl, APIs, etc (Prasanna -\u00a0*Total 44 SP*)\u00a0", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-240", "labels": ["CS_PI3_5"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "zanonn", "status": "Epic Done", "summary": "GCP -  Project Cleanup (phase 1)", "updated": "2019-09-02T11:20:18+10:00", "estimate": 44.0, "epic_ref": null, "epic_name": "GCP -  Standard Project, including GKE, limiting network, Kubectl, APIs, etc", "diff_to_upstream": []}, "CLS-237": {"assignee": "vamshiky", "created": "2019-03-06T10:22:10+11:00", "creator": "zanonn", "description": "(M) Splunk Dashboards V2.0 (Sam) (2 points)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-237", "labels": ["CS_PI3_5"], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "zanonn", "status": "Epic Done", "summary": "GCP - Splunk Dashboards V2.0", "updated": "2019-05-17T11:35:52+10:00", "estimate": 2.0, "epic_ref": null, "epic_name": "GCP - Splunk Dashboards V2.0", "diff_to_upstream": []}, "CLS-236": {"assignee": "vamshiky", "created": "2019-03-06T10:19:59+11:00", "creator": "zanonn", "description": "(H) Billing Alerts (Sam) (5 points)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-236", "labels": ["CS_PI3_5"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "zanonn", "status": "Epic Done", "summary": "GCP - Billing Alerts", "updated": "2019-05-17T11:35:59+10:00", "estimate": 5.0, "epic_ref": null, "epic_name": "GCP - Billing Alerts", "diff_to_upstream": []}, "CLS-235": {"assignee": "vamshiky", "created": "2019-03-06T10:03:22+11:00", "creator": "morriss9", "description": "* (M) Automation of Palo configuration (Arjun)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-235", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "morriss9", "status": "Backlog", "summary": "GCP - Automation of Palo configuration", "updated": "2019-03-06T11:22:47+11:00", "estimate": 18.0, "epic_ref": null, "epic_name": "GCP - Automation of Palo configuration", "diff_to_upstream": []}, "CLS-234": {"assignee": "vamshiky", "created": "2019-03-06T10:02:23+11:00", "creator": "morriss9", "description": "* (H) Operational Transition to Network Compliance - Risk Rules, AlgoSec Integration (Arjun) Dependency on Network team, Raj Simadhri.", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-234", "labels": ["CS_PI3_12"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Operational Transition to Network Compliance - Risk Rules, AlgoSec Integration (Arjun) Dependency on Network team, Raj Simadhri.", "updated": "2019-09-02T11:25:56+10:00", "estimate": 9.0, "epic_ref": null, "epic_name": "Operational Transition to Network Compliance - Risk Rules, AlgoSec Integration (Arjun) Dependency on Network team, Raj Simadhri.", "diff_to_upstream": []}, "CLS-233": {"assignee": "vamshiky", "created": "2019-03-06T10:00:53+11:00", "creator": "morriss9", "description": "* (H)\u00a0Operational Transition to SOC team, IPS profiles -> Palo appliances (Arjun)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-233", "labels": ["CS_PI3_12"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Operational Transition to SOC team, IPS profiles -> Palo appliances", "updated": "2019-09-02T11:19:46+10:00", "estimate": 10.0, "epic_ref": null, "epic_name": "GCP - Operational Transition to SOC team, IPS profiles -> Palo appliances", "diff_to_upstream": []}, "CLS-232": {"assignee": "vamshiky", "created": "2019-03-06T10:00:46+11:00", "creator": "vamshiky", "description": "(H) Vault, on-board service accounts, enable authentication (Peter)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-232", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Vault, on-board service accounts, enable authentication ", "updated": "2019-09-02T11:23:17+10:00", "estimate": 9.0, "epic_ref": null, "epic_name": "GCP - Vault, on-board service accounts, enable authentication ", "diff_to_upstream": []}, "CLS-230": {"assignee": "vamshiky", "created": "2019-03-06T09:59:55+11:00", "creator": "morriss9", "description": "(VH)\u00a0Build NSW Government\u00a0*Prod Infra*\u00a0(Santosh)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-230", "labels": ["CS_PI3_12"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Build NSW Government Prod Infra", "updated": "2019-05-03T11:31:04+10:00", "estimate": 10.0, "epic_ref": null, "epic_name": "GCP - Build NSW Government Prod Infra", "diff_to_upstream": []}, "CLS-229": {"assignee": "vamshiky", "created": "2019-03-06T09:59:24+11:00", "creator": "morriss9", "description": "(VH)\u00a0Build NSW Government\u00a0*Non Prod*\u00a0Infra (Santosh)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-229", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Build NSW Government Non Prod Infra", "updated": "2019-03-08T10:58:38+11:00", "estimate": 8.0, "epic_ref": null, "epic_name": "GCP - Build NSW Government Non Prod Infra", "diff_to_upstream": []}, "CLS-228": {"assignee": "vamshiky", "created": "2019-03-06T09:58:38+11:00", "creator": "morriss9", "description": "* (VH)\u00a0Build OB\u00a0*Production*\u00a0Infra (Thinh)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-228", "labels": ["CS_PI3_12"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Build OB Production Infra", "updated": "2019-09-02T11:15:26+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Build OB Production Infra", "diff_to_upstream": []}, "CLS-227": {"assignee": "vamshiky", "created": "2019-03-06T09:58:08+11:00", "creator": "morriss9", "description": "* (VH)\u00a0Build OB\u00a0*Non Prod*\u00a0Infra (Thinh)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-227", "labels": ["CS_PI3_12"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Build OB Non Prod Infra", "updated": "2019-03-27T13:21:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Build OB Non Prod Infra", "diff_to_upstream": []}, "CLS-226": {"assignee": "vamshiky", "created": "2019-03-06T09:56:44+11:00", "creator": "morriss9", "description": "(VH) Non Production and Production Foundation Build (Arjun)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-226", "labels": ["CS_PI3_12"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Non Production and Production Foundation Build", "updated": "2019-03-27T13:20:47+11:00", "estimate": 34.0, "epic_ref": null, "epic_name": "GCP - Non Production and Production Foundation Build", "diff_to_upstream": []}, "CLS-225": {"assignee": "vamshiky", "created": "2019-03-06T09:53:04+11:00", "creator": "vamshiky", "description": "(L) Migrate all plans from DC Bamboo to on prem Bamboo (Santosh)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-225", "labels": [], "lastViewed": null, "priority": "Low", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Migrate all plans from DC Bamboo to Enterprise Bamboo", "updated": "2019-09-02T11:19:58+10:00", "estimate": 18.0, "epic_ref": null, "epic_name": "GCP - Migrate all plans from DC Bamboo to on prem Bamboo", "diff_to_upstream": []}, "CLS-224": {"assignee": "vamshiky", "created": "2019-03-06T09:51:22+11:00", "creator": "vamshiky", "description": "(VH) On Call Support (3 Points)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-224", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Define plan for On Call Support", "updated": "2019-09-02T11:20:53+10:00", "estimate": 3.0, "epic_ref": null, "epic_name": "GCP - Define plan for On Call Support ", "diff_to_upstream": []}, "CLS-223": {"assignee": "vamshiky", "created": "2019-03-06T09:43:06+11:00", "creator": "morriss9", "description": "(VH) Get Cloud SQL backups back to on prem (13 points)", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-223", "labels": ["CS_PI3_12"], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Get Cloud SQL backups back to on prem", "updated": "2019-07-31T12:08:40+10:00", "estimate": 13.0, "epic_ref": null, "epic_name": "Get Cloud SQL backups back to on prem", "diff_to_upstream": []}, "CLS-222": {"assignee": "vamshiky", "created": "2019-03-06T09:37:27+11:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-222", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "Design Pattern for outbound Internet Access", "updated": "2019-03-08T11:25:07+11:00", "estimate": 30.0, "epic_ref": null, "epic_name": "Design Pattern for outbound Internet Access", "diff_to_upstream": []}, "CLS-221": {"assignee": "delbustr", "created": "2019-03-05T17:21:41+11:00", "creator": "soonw", "description": "As a Product Owner I need an I&AM solution that works with IaaS and PaaS services hosted in AWS\r\n\r\nSolution Design covering 4 key use cases, focussing on current security control gaps:\r\n # IAM console & CLI access \u2013 solve MFA gap and lack of Identity Management (IIQ).\r\n # SSO for business apps \u2013 federation with Azure AD, ADFS (straightforward, mainly about documenting patterns and testing)\r\n # SSO for business apps \u2013 AD/Kerberos/NTLM/LDAP\r\n # Remote OS management of EC2 instances \u2013 SSH, PowerShell, RDP\r\n\r\n - Timing important; may need tactical solution for (3) e.g. IIQ managing AWS-based AD.\u00a0 Expectation is that Xceptor has a solution by end-Sprint 3.\r\n\r\n - Implement solution for each use case.\r\n\r\n - UAM squad (I&AM tribe) to take ownership of (3) and (4).\r\n\r\n - Look to Xceptor (Markets Trading Workflow app) which has budget for POC and early Dev.\r\n\r\nDependencies:\r\n\r\nUAM Squad in I&AM tribe (already have QBR dependency); Versent (third party employed by UAM squad);\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-221", "labels": [], "lastViewed": null, "priority": "Highest", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - I&AM with focus on AD", "updated": "2019-09-11T11:39:59+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - I&AM with focus on AD", "diff_to_upstream": []}, "CLS-219": {"assignee": "delbustr", "created": "2019-03-05T17:02:28+11:00", "creator": "soonw", "description": "As a PO I want to build AWS production landing zone so that the zone is ready for production workload on-boarding\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-219", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Production Environment Landing Zone Readiness", "updated": "2019-09-11T11:39:44+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Production Environment Landing Zone Readiness", "diff_to_upstream": []}, "CLS-216": {"assignee": "delbustr", "created": "2019-03-05T14:21:06+11:00", "creator": "sharma48", "description": "As a product owner, I want the learning platform to be build for uplifting skills of customers and AWS Squad", "fixVersions": [], "issuetype": "Epic", "key": "CLS-216", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "sharma48", "status": "Epic Done", "summary": "AWS - Academy and Skill uplift", "updated": "2019-09-11T11:39:59+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Academy and Skill uplift", "diff_to_upstream": []}, "CLS-213": {"assignee": "delbustr", "created": "2019-03-05T10:17:41+11:00", "creator": "soonw", "description": "As a PO I want to the platform to be ready for disaster recovery activities during significant failures\r\n\r\n\u00a0\r\n\r\nDependencies: \r\n# - Engage with the tooling team and understand the availability of services and monitoring available\r\n# - Engage with Cloud Enablement Squad to determine frequency if DR activities and notification of planned outages for testing", "fixVersions": [], "issuetype": "Epic", "key": "CLS-213", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - BCP, DR and Backup for Shared Service ", "updated": "2019-11-25T15:26:54+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - BCP, DR and Backup for Shared Service ", "diff_to_upstream": []}, "CLS-201": {"assignee": "vamshiky", "created": "2019-03-04T12:47:10+11:00", "creator": "morriss9", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-201", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Develop infra as code to automate all the build activities P3", "updated": "2019-09-02T11:20:59+10:00", "estimate": null, "epic_ref": null, "epic_name": "Platform - Build Automation", "diff_to_upstream": []}, "CLS-200": {"assignee": "vamshiky", "created": "2019-03-04T12:35:58+11:00", "creator": "morriss9", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-200", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Backlog", "summary": "GCP - Dashboards and Monitoring P3", "updated": "2019-03-08T10:43:04+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Dashboards and Monitoring P3", "diff_to_upstream": []}, "CLS-199": {"assignee": "vamshiky", "created": "2019-03-04T11:32:17+11:00", "creator": "morriss9", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-199", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Backlog", "summary": "GCP - Security and Compliance - P3 ", "updated": "2019-09-02T11:20:48+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Security and Compliance", "diff_to_upstream": []}, "CLS-197": {"assignee": "ganalc1", "created": "2019-02-27T18:30:58+11:00", "creator": "ganalc1", "description": "\"As product owner I want Develop learning paths for my customers   so that we can accelerate the organizations cloud capability, enabling increased adoption of cloud technologies\r\n---Acceptance Criteria----\r\nLearning and training content Published to OWL / Edge\r\n---Dependencies----\r\n\u2022 Our Way of Learning (OWL) team - access to KB.\r\n\u2022 Learning Operations Shared Services (Edge) \r\nMax publishing team. \r\n\u2022 Provider squads - to support learning journeys, to be available to support vendor days, including setup of accounts and answering platform specific questions etc.\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-197", "labels": ["CS_PI3_2"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Learn Cloud@ANZ", "updated": "2019-05-24T15:15:49+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Learn Cloud@ANZ", "diff_to_upstream": []}, "CLS-196": {"assignee": "ganalc1", "created": "2019-02-27T18:28:28+11:00", "creator": "ganalc1", "description": "\"As a product owner I want to service transition my platform so that  my services  comply with ANZ policy \r\n---Acceptance Criteria----\r\n3 cloud services are service transitioned (stretch)\r\n---Dependencies----\r\nAzure , Aws, GCP Squad\r\nDevelop documentation for cloud service transition\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-196", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud service transition", "updated": "2019-05-24T15:43:29+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud service transition", "diff_to_upstream": []}, "CLS-195": {"assignee": "ganalc1", "created": "2019-02-27T18:27:44+11:00", "creator": "ganalc1", "description": "\"As a product owner I want treat Audit risk and Issues  (assigned to Cloud services) so that I can provide secure environment for my customers\r\n---Acceptance Criteria----\r\nIIS#4 Audit related risk and issues have been treated and accepted.\"\r\n", "fixVersions": [], "issuetype": "Epic", "key": "CLS-195", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES- IIS#4 Audit related risk and issues", "updated": "2019-05-24T15:36:11+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES- IIS#4 Audit related risk and issues", "diff_to_upstream": []}, "CLS-194": {"assignee": "ganalc1", "created": "2019-02-27T18:27:07+11:00", "creator": "ganalc1", "description": "\"As a product owner I want a single view of my customers TCO including their % of the cloud services cost reflected in Apptio so that provide cost transparency for my customers\r\n---Acceptance Criteria----\r\nApptio will provide Show back of the TCO for each customer based on \r\nApplication, BSB/CC, Consumption cost and shared services cost\"\r\n", "fixVersions": [], "issuetype": "Epic", "key": "CLS-194", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES- Cloud shared services charge", "updated": "2019-05-23T11:27:42+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES- Cloud shared services charge", "diff_to_upstream": []}, "CLS-193": {"assignee": "ganalc1", "created": "2019-02-27T18:25:55+11:00", "creator": "ganalc1", "description": "\"As an Asset manager  I want an inventory of cloud assets integrated into the non production instance of Service Now CMDB for all 3 clouds so that I can enable IT service management against the assets in service now\r\n---Acceptance Criteria----\r\n\r\nCloud inventory integrated into the non- production instance of Service NOW for all 3 clouds\r\n\r\n\r\n---Dependencies----\r\nService now team: \r\n\u2022 Provide engineering support for integration for each cloud\r\n\u2022 Identify ITSM requirements for ingestion into service now (ETL)\r\n\u2022 Access to release in prod\"\r\n\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-193", "labels": ["CS_PI3_4"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Service now CMDB integration (non prod)", "updated": "2019-05-24T15:48:23+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Service now CMDB integration (non prod)", "diff_to_upstream": []}, "CLS-192": {"assignee": "ganalc1", "created": "2019-02-27T18:24:36+11:00", "creator": "ganalc1", "description": "\"As a cloud service product owner I want to develop an automated inventory mechanism for each cloud  so that I can enable IT service management against the assets in service now\r\n---Acceptance Criteria----\r\nAutomated inventory of assets triggered by Service NOW for Azure, Aws and GCP \r\nScheduled Service now request to each cloud to initiate inventory collection\r\n---Dependencies----\r\nAzure , Aws, GCP Squad\r\n\u2022 Identify Asset inventory mechanism (i.e. API) \r\n\u2022 Provide support for integration into service now\r\n\u2022 Register the list of services available for each cloud as a CI in SNOW\r\n\r\n\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-192", "labels": ["CS_PI3_4"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud Inventory development non prod", "updated": "2019-05-23T11:26:55+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud Inventory development non prod", "diff_to_upstream": []}, "CLS-191": {"assignee": "ganalc1", "created": "2019-02-27T17:39:46+11:00", "creator": "ganalc1", "description": "As a product owner, I want to evaluate Redlock compliance tooling and reporting against all three cloud platforms.\r\n\r\n\u00a0\r\n\r\nAcceptance criteria:\r\n * *Redlock* *SaaS configured with read only access to all 3 enterprise cloud service offerings*\r\n * *Redlock* *compliance assurance, reporting and alerting assessed against security controls and requirements* \r\n * *Documented design including security, networks and system integration*\r\n * *POC recommendation*\r\n * *Delete ANZ data to ensure* *no residual information with vendor upon* *PoC* *completion.*\r\n * **", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-191", "labels": ["CS_PI3_10"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "Redlock POC for cloud services", "updated": "2019-05-24T15:47:47+10:00", "estimate": null, "epic_ref": null, "epic_name": "Redlock POC for cloud services", "diff_to_upstream": []}, "CLS-190": {"assignee": "praveenp", "created": "2019-02-26T17:12:50+11:00", "creator": "praveenp", "description": "* move from sharepoint provisioning request site onto SNOW for Azure InfraDev environment\r\n * use existing provisioning powershell scripts and incorporate for SNOW for Azure InfraDev environment\r\n * aim to provide new users access to Azure, as well as make them contributor to an empty Resource Group\r\n * out of scope - self-provisioning of any innovation patterns, such as containers etc\u00a0\r\n * out of scope - provisioning in Azure Non-prod environment", "fixVersions": [], "issuetype": "Epic", "key": "CLS-190", "labels": ["CS_PI3_23"], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - provision access and environments in Azure InfraDev using SNOW", "updated": "2019-05-16T20:14:56+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - provision access and environments using SNOW", "diff_to_upstream": []}, "CLS-189": {"assignee": "praveenp", "created": "2019-02-25T10:40:25+11:00", "creator": "praveenp", "description": "Incorporating identity management as per on-prem SOE\r\n\r\nProvide pipeline for customers to provision Linux SOE for their VMs\r\n\r\nAssess other pieces that can be incorporated into cloud Linux SOE (look at on-prem linux SOE)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-189", "labels": ["CS_PI3_21"], "lastViewed": null, "priority": "Low", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Enhancement of Linux SOE", "updated": "2019-05-16T20:00:52+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Enhancement of Linux SOE", "diff_to_upstream": []}, "CLS-187": {"assignee": "praveenp", "created": "2019-02-25T09:03:34+11:00", "creator": "praveenp", "description": "Design approval for Azure AD B2C\r\n\r\nSet up Azure AD B2C in production tenant for NSW Government users\r\n\r\nIAM for Azure AD B2C platform", "fixVersions": [], "issuetype": "Epic", "key": "CLS-187", "labels": ["CS_PI3_19"], "lastViewed": null, "priority": "Highest", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure AD B2C - Provide production ready solution for NSW Government ", "updated": "2019-05-07T11:21:08+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure AD B2C - Provide production ready solution for NSW Government ", "diff_to_upstream": []}, "CLS-186": {"assignee": "praveenp", "created": "2019-02-25T08:57:40+11:00", "creator": "praveenp", "description": "Document Azure AD support model\r\n\r\nCreate an onboarding form for new Azure AD authentication use cases", "fixVersions": [], "issuetype": "Epic", "key": "CLS-186", "labels": ["CS_PI3_9"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure AD - operationalise for prod workloads", "updated": "2019-05-16T20:12:46+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure AD - operationalise for prod workloads", "diff_to_upstream": []}, "CLS-185": {"assignee": "praveenp", "created": "2019-02-25T08:52:04+11:00", "creator": "praveenp", "description": "*Description:*\r\n\r\nProvide Mac@ANZ a production cloud service.\r\n\r\n*Acceptance Criteria:* \r\n\r\nSuccessful installation of application in Azure by Mac@ANZ", "fixVersions": [], "issuetype": "Epic", "key": "CLS-185", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Mac@ANZ progress into production", "updated": "2019-11-20T09:24:54+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Mac@ANZ progress into production", "diff_to_upstream": []}, "CLS-182": {"assignee": "delbustr", "created": "2019-02-22T11:53:32+11:00", "creator": "soonw", "description": "The product must have all key service and incident management procedures in place and tested prior being available as a production service\r\n\r\n\u00a0\r\n\r\nDependencies: - CES and SNOW\r\nNetwork team for Dx & perimeter firewall teams for capacity management\r\nCloud engagement squad for service, incident & change management - ANZ cloud practice standardisation in Service Now\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-182", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "Highest", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Onboarding + Ops Support Model", "updated": "2019-09-11T11:39:50+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Onboarding + Ops Support Model", "diff_to_upstream": []}, "CLS-181": {"assignee": "delbustr", "created": "2019-02-22T11:51:04+11:00", "creator": "soonw", "description": "As a Product Owner, I want Platform and Application logs collected in a centralised location to enable data visualisation of all aspects of the platform\r\n\r\n\u00a0\r\n\r\nDependencies:\r\n\u2022 TechOps team\r\n\u2022 CyberSec team", "fixVersions": [], "issuetype": "Epic", "key": "CLS-181", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Centralised logging for core portfolio", "updated": "2019-09-11T11:39:42+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Centralised logging for core portfolio", "diff_to_upstream": []}, "CLS-180": {"assignee": "delbustr", "created": "2019-02-22T11:49:32+11:00", "creator": "soonw", "description": "As a Product Owner, I want the platform provided SOEs to follow ANZ production hardening standards\r\n\r\n\u00a0\r\n\r\nDependencies:\r\n\u2022 Unix team\r\n\u2022 Windows team\r\n\u2022 Security\r\n\u2022ANZ process bank", "fixVersions": [], "issuetype": "Epic", "key": "CLS-180", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - SOE + Configuration Mgmt + Patch Mgmt", "updated": "2019-09-11T11:39:49+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - SOE + Configuration Mgmt + Patch Mgmt", "diff_to_upstream": []}, "CLS-179": {"assignee": "delbustr", "created": "2019-02-22T11:48:04+11:00", "creator": "soonw", "description": "The product must have all key controls in place and controls assurance approved before it can be declared production ready\r\n\r\n\u00a0\r\n\r\nDependencies: -\r\nSOC readiness to develop security playbooks & conduct fire-drills\r\nRisk team buy-in for appropriate assurance and reviews of controls and endorsement of results\r\nConfiguration management, network and AV teams, Vuln Scanning teams availability for playbooks and fire-drills\r\nControl Owner", "fixVersions": [], "issuetype": "Epic", "key": "CLS-179", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "Highest", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Production Shared Services Controls & Assurance", "updated": "2019-09-11T11:39:43+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Production Shared Services Controls & Assurance", "diff_to_upstream": []}, "CLS-178": {"assignee": "delbustr", "created": "2019-02-22T11:39:00+11:00", "creator": "soonw", "description": "As a PO I want to enable Vulnerability Management in AWS so that the workload and infrastructure in AWS have adequate Vulnerability\u00a0Management\r\n\r\n\u00a0\r\n\r\nDependencies: - Security vulnerability scanning team", "fixVersions": [], "issuetype": "Epic", "key": "CLS-178", "labels": ["CS_PI3_16"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Vulnerability Management for SOE", "updated": "2019-09-11T11:39:45+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Vulnerbility Management for SOE", "diff_to_upstream": []}, "CLS-177": {"assignee": "delbustr", "created": "2019-02-22T11:31:47+11:00", "creator": "soonw", "description": "As a PO I want to enable auto monitoring and alerting of service health status in Shared Services so that we have proactive monitoring/alerting of event\r\n\r\n\u00a0\r\n\r\nNOTE: THIS IS PLATFORM SPECIFIC MONITORING\r\n\r\n\u00a0\r\n\r\nDependencies: - SNOW Team, Tech Ops , CMDB CI in SNOW (for incident management)", "fixVersions": ["IaaS PI #4"], "issuetype": "Epic", "key": "CLS-177", "labels": ["Service_Improvement"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Monitoring and alerting - insource", "updated": "2019-09-11T11:39:40+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Monitoring and Alerting - insource", "diff_to_upstream": []}, "CLS-175": {"assignee": "praveenp", "created": "2019-02-11T12:51:08+11:00", "creator": "praveenp", "description": "Set up RedLock in Azure Poc Environment.\r\n\r\nAssess data from RedLock with Security and Cloud stakeholders.\r\n\r\nDetermine whether RedLock will need to be implemented for Azure based on PoC results.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-175", "labels": [], "lastViewed": null, "priority": "Low", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "RedLock POC for Azure", "updated": "2019-05-16T20:15:37+10:00", "estimate": null, "epic_ref": null, "epic_name": "RedLock POC for Azure", "diff_to_upstream": []}, "CLS-174": {"assignee": "delbustr", "created": "2019-02-08T12:16:05+11:00", "creator": "soonw", "description": "As a PO I want to enable an account in AWS to run a Redlock POC that is able to leverage our innovation environment and read data from our AWS landing zone so we can enable the POC team to properly evaluate the tool", "fixVersions": [], "issuetype": "Epic", "key": "CLS-174", "labels": ["CS_PI3_10"], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Innovation Account Redlock POC", "updated": "2019-09-11T11:39:40+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Innovation Account Redlock POC", "diff_to_upstream": []}, "CLS-173": {"assignee": "delbustr", "created": "2019-02-07T16:57:03+11:00", "creator": "soonw", "description": "As a PO I want the direct connect link migrated to 10GB and test it.\r\n\r\n\u00a0this epic also include the routing of ANZ QA to AWS SS\r\n\r\nDOD : connectivity from on premise to our defined VPC's for non prod in Australia\u00a0 is in place, including routing and DNS \u2013 Singapore is working as it is all prod", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-173", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - non prod Direct Connect link readiness", "updated": "2019-09-11T11:39:48+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS -PI2- non prod Direct Connect link readiness", "diff_to_upstream": []}, "CLS-172": {"assignee": "delbustr", "created": "2019-02-07T14:37:11+11:00", "creator": "soonw", "description": "As a PO i want to setup automated cost optimisation or alerting so that cost can be keep to minimal", "fixVersions": [], "issuetype": "Epic", "key": "CLS-172", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Cost optimisation and Alerting ", "updated": "2019-03-11T09:15:00+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Cost optimisation and alerting", "diff_to_upstream": []}, "CLS-171": {"assignee": "delbustr", "created": "2019-02-07T13:17:41+11:00", "creator": "soonw", "description": "As a PO I want\u00a0to enable ingestion of AWS logs into Cyber Defense Splunk so that Cyber defense team have the visibility of security log", "fixVersions": [], "issuetype": "Epic", "key": "CLS-171", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Splunk enablement for Cyber Defense Splunk platform", "updated": "2019-03-20T12:05:50+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Splunk enablement for Cyber Defense Splunk platform", "diff_to_upstream": []}, "CLS-169": {"assignee": "delbustr", "created": "2018-12-18T16:05:06+11:00", "creator": "soonw", "description": "As a PO i want to define finance management and chargeback process so that all AWS charges will get paid and\u00a0charge back to the business unit\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-169", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Finance Management and Chargeback", "updated": "2019-04-08T05:33:57+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Finance Management and Chargeback", "diff_to_upstream": []}, "CLS-168": {"assignee": "delbustr", "created": "2018-12-18T15:56:34+11:00", "creator": "soonw", "description": "As a PO i want to ensure innovation zone is ready so that we can onboard customer into innovation environment", "fixVersions": [], "issuetype": "Epic", "key": "CLS-168", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Innovation Environment Readiness", "updated": "2019-03-11T09:14:39+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Innovation Environment Readiness", "diff_to_upstream": []}, "CLS-167": {"assignee": "delbustr", "created": "2018-12-13T11:17:20+11:00", "creator": "soonw", "description": "As a PO i want to have training and user material available so that innovation zone user able to have the guide to perform POC", "fixVersions": [], "issuetype": "Epic", "key": "CLS-167", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Innovation training and user material", "updated": "2019-03-11T09:14:29+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Innovation training and user material", "diff_to_upstream": []}, "CLS-165": {"assignee": "delbustr", "created": "2018-12-10T16:17:00+11:00", "creator": "soonw", "description": "As a PO i want architecture pattern for I&AM approved", "fixVersions": [], "issuetype": "Epic", "key": "CLS-165", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - I&AM design - MV design draft, moved to new Epic", "updated": "2019-04-05T11:41:32+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - I&AM design - MV design draft, moved to new Epic", "diff_to_upstream": []}, "CLS-164": {"assignee": "praveenp", "created": "2018-12-03T12:11:01+11:00", "creator": "loeckxc", "description": "Establish Linux RHEL SOE", "fixVersions": [], "issuetype": "Epic", "key": "CLS-164", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "loeckxc", "status": "Epic Done", "summary": "Azure - Establish Linux SOE", "updated": "2019-03-05T15:19:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Establish Linux SOE", "diff_to_upstream": []}, "CLS-161": {"assignee": "delbustr", "created": "2018-11-29T10:45:59+11:00", "creator": "soonw", "description": "As an AWS Adopter I want access to an AWS environment where I can assess the viability of a workload in AWS over a short period so that I can save my team both time and cost in provisioning servers on premise\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-161", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - innovation onboard and billing", "updated": "2019-03-11T09:14:08+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - onboard innovation teams", "diff_to_upstream": []}, "CLS-160": {"assignee": "delbustr", "created": "2018-11-29T10:45:07+11:00", "creator": "soonw", "description": "As a PO I want a clear definition of the innovation/poc environment so we can get approvals (security, data , budget, etc) to deliver and clearly communicate offering to customers.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-160", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Innovation architecture and security design", "updated": "2019-04-08T10:40:23+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Innovation architecture and security design", "diff_to_upstream": []}, "CLS-159": {"assignee": "delbustr", "created": "2018-11-29T10:42:05+11:00", "creator": "soonw", "description": "As a Murex/Sky on Cloud app owner, I want centralised application level logging on the platform , so that I can\u00a0 provide customers with the means to run & troubleshoot their deployments\r\n\r\n\u00a0\r\n\r\nNOTE: THIS EPIC IS FOR APP SPECIFIC MONITORING", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-159", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Centralised logging for app portfolios", "updated": "2019-09-11T11:39:43+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Centralised logging for app portfolios", "diff_to_upstream": []}, "CLS-158": {"assignee": "delbustr", "created": "2018-11-29T10:41:01+11:00", "creator": "soonw", "description": "As a Sky on Cloud product owner, I want to enable IAM permissions for launching CFN based clusters for SKY on Cloud grid controller", "fixVersions": [], "issuetype": "Epic", "key": "CLS-158", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Sky on Cloud CFN", "updated": "2019-03-20T12:05:39+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Sky on Cloud CFN", "diff_to_upstream": []}, "CLS-157": {"assignee": "delbustr", "created": "2018-11-29T10:36:41+11:00", "creator": "soonw", "description": "As a Sky on Cloud product owner, I want to consume a secure and compliant Lambda step function service exposed via the platform for SKY automate deliverables", "fixVersions": [], "issuetype": "Epic", "key": "CLS-157", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - Sky on Cloud non-prod environment", "updated": "2019-03-20T12:05:36+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Sky on Cloud Lambda", "diff_to_upstream": []}, "CLS-155": {"assignee": "delbustr", "created": "2018-11-29T10:30:39+11:00", "creator": "soonw", "description": "As a product owner, I want automated testing for shared services , so that I can I can automate the QA of my baseline resources and ensure HA of our services and extend as a CI service to our developer teams", "fixVersions": [], "issuetype": "Epic", "key": "CLS-155", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - non prod platform op man and resilience", "updated": "2019-04-08T05:34:32+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - non prod platform op man and resilience", "diff_to_upstream": []}, "CLS-154": {"assignee": "delbustr", "created": "2018-11-29T10:28:34+11:00", "creator": "soonw", "description": "As a Murex/Sky on Cloud app owner, I want to develop new pipeline features and consumable , so that I can\u00a0 meet my workload requirements\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-154", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "soonw", "status": "Backlog", "summary": "AWS - non prod new features for hero workloads", "updated": "2019-02-22T11:37:23+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - non prod new features for hero workloads", "diff_to_upstream": []}, "CLS-152": {"assignee": "delbustr", "created": "2018-11-29T10:19:07+11:00", "creator": "soonw", "description": "As a product owner, I want the platform SOE to support anti malware, so that I can have a ANZ security compliant SOE\r\n\r\n\u00a0\r\n\r\nDOD : The non production AMI for windows and Linux is inegrated to on premise non prod AV solution\u00a0\r\n\r\nOR\r\n\r\nDOD (alternate) : we have an exception from security to not use AV until a number of clearly documented steps take place .\r\n\r\n\u00a0", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-152", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - non prod SOE AV", "updated": "2019-09-11T11:39:46+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS -PI2- non prod SOE AV", "diff_to_upstream": []}, "CLS-151": {"assignee": "delbustr", "created": "2018-11-29T10:15:35+11:00", "creator": "soonw", "description": "As a Product owner I want to have a Basic level of operational monitoring on the AWS platform to ensure direct connect, all proxy's we use to access aws and that basic shared services are up and running including a single pane using Splunk - cloud hosted\u00a0\r\n\r\n\u00a0\r\n\r\nAlerting Email Group\r\n|IaaS - Cloud Services - AWS - Network Alerts|Alerts when network connectivity test fail , direct connect / proxies / etc|\r\n|IaaS - Cloud Services - AWS - Automation Alerts|This are Baboo or similar automation tasks indicating issues when a build fails or \u2026..|\r\n|aaS - Cloud Services - AWS - Security Alerts|Security breach or alert of possible activity that is not in line to that expected|\r\n|IaaS - Cloud Services - AWS - Service Health|AWS Service health, eg\u00a0[https://status.aws.amazon.com/]|", "fixVersions": [], "issuetype": "Epic", "key": "CLS-151", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - non prod platform monitoring MVP", "updated": "2019-03-20T12:05:25+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - non prod platform monitoring MVP", "diff_to_upstream": []}, "CLS-150": {"assignee": "ganalc1", "created": "2018-11-29T10:14:24+11:00", "creator": "schonrod", "description": "As part of the APRA submission there is a need to provide a governance framework for GCP/ Institutional for the material workload deployment\r\n\r\nThis will include:\r\n * SLA requirements (in conjunction with Outsourcing compliance team)\r\n ** GCP Cloud Services Squad\u00a0requirements for Google Cloud Provider (Vendor)\r\n ** Institutional Requirements for the GCP squad\r\n * Incident management (interaction with GCP Squad and Google Cloud Provider Vendor\u00a0[and vice versa])\r\n * Risk and issue management (including escalation channels) this will include official notifications and agreed response time\r\n * Platform monitoring accountability\r\n\r\n*As* APRA\r\n\r\n*I want* to understand the GCP and institutional cloud governance framework\r\n\r\n*So that* I can ensure they adhere to agreed standards for cloud material workload.\r\n\r\n\u00a0\r\n\r\n*Acceptance Criteria:*\r\n * Sufficient input on the above criteria\u00a0is provided for successful submission by the working group for the Institutional workload APRA in May********\r\n\r\n*Dependencies:*\r\nGCP Squad to provide inputs based on the above criteria\r\n\r\n\u00a0", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-150", "labels": ["CS_PI3_6"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "schonrod", "status": "Epic Done", "summary": "CES - Cloud governance model (GCP/ Institutional APRA Submission)", "updated": "2019-05-23T10:49:29+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud gov GCP/ APRA Sub", "diff_to_upstream": []}, "CLS-149": {"assignee": "delbustr", "created": "2018-11-29T10:14:14+11:00", "creator": "soonw", "description": "As PO I want S.O.E. to be developed in collaboration with broker services as to have a homogeneous approach across clouds", "fixVersions": [], "issuetype": "Epic", "key": "CLS-149", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - non prod SOE BASE", "updated": "2019-04-07T15:43:03+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - non prod SOE BASE", "diff_to_upstream": []}, "CLS-147": {"assignee": "delbustr", "created": "2018-11-28T17:01:04+11:00", "creator": "bhutejar", "description": "Feature: This is linked to Feature IAASINF-78", "fixVersions": [], "issuetype": "Epic", "key": "CLS-147", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Highest", "project": "CLS", "reporter": "soonw", "status": "Epic Done", "summary": "AWS - onboard sky on cloud to non-prod environment", "updated": "2019-03-20T12:05:11+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - onboard sky on cloud to non-prod environment", "diff_to_upstream": []}, "CLS-140": {"assignee": "vamshiky", "created": "2018-11-23T15:56:33+11:00", "creator": "morriss9", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-140", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "morriss9", "status": "Epic Done", "summary": "GCP - Security and Compliance - P2", "updated": "2019-03-04T12:55:03+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Security and Compliance", "diff_to_upstream": []}, "CLS-139": {"assignee": "praveenp", "created": "2018-11-20T17:25:02+11:00", "creator": "bhutejar", "description": "Work with Employee Experience Domain to perform a POC of hosting the Apple MAC management platform on Azure", "fixVersions": [], "issuetype": "Epic", "key": "CLS-139", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "bhutejar", "status": "Epic Done", "summary": "Azure - MAC @ ANZ ", "updated": "2019-03-05T15:19:31+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - MAC @ ANZ ", "diff_to_upstream": []}, "CLS-138": {"assignee": "ganalc1", "created": "2018-11-12T14:11:36+11:00", "creator": "schonrod", "description": "Measuring and reporting of Cloud Adoption within ANZ Business and Technology Teams", "fixVersions": [], "issuetype": "Epic", "key": "CLS-138", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "schonrod", "status": "Epic Done", "summary": "CES - Metrics & Reporting", "updated": "2019-05-24T15:42:45+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Metrics & Reporting", "diff_to_upstream": []}, "CLS-123": {"assignee": "delbustr", "created": "2018-09-03T16:58:21+10:00", "creator": "delbustr", "description": "As a Product owner of AWS I want our foundation platform to be audited so we can gain a clear idea on any gaps in the design and take remedial action.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-123", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "delbustr", "status": "Epic Done", "summary": "AWS - conduct a Well-Architected Framework Audit", "updated": "2019-02-20T09:22:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Well-Architected Framework - Audit", "diff_to_upstream": []}, "CLS-107": {"assignee": "delbustr", "created": "2018-10-26T11:04:25+11:00", "creator": "cuffr", "description": "AWS Squad require ongoing training and development in cloud technologies", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-107", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "cuffr", "status": "Epic Done", "summary": "AWS Squad -MC- Staff Development", "updated": "2019-04-05T11:51:46+11:00", "estimate": null, "epic_ref": null, "epic_name": "AWS Squad - Staff Development", "diff_to_upstream": []}, "CLS-106": {"assignee": "vamshiky", "created": "2018-10-26T10:41:53+11:00", "creator": "vamshiky", "description": "Configure IaC pipeline to integrate with end to end self service workflow", "fixVersions": [], "issuetype": "Epic", "key": "CLS-106", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Configure IaC Pipeline", "updated": "2019-03-04T12:54:18+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Configure IaC Pipeline", "diff_to_upstream": []}, "CLS-105": {"assignee": "vamshiky", "created": "2018-10-26T10:36:59+11:00", "creator": "vamshiky", "description": "Develop innovation patterns for high-demand use cases - e.g\r\n\r\n> GKE\r\n\r\n> Data Analytics\r\n\r\n> Machine Learning/AI\r\n\r\n> Dialog Flow/Chatbot", "fixVersions": [], "issuetype": "Epic", "key": "CLS-105", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Develop Innovation Patterns ", "updated": "2019-09-02T11:20:44+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Develop Innovation Patterns ", "diff_to_upstream": []}, "CLS-104": {"assignee": "vamshiky", "created": "2018-10-26T10:32:19+11:00", "creator": "vamshiky", "description": "Build a dashboard to indicate the cost for consumption of Google Cloud services for poc project", "fixVersions": [], "issuetype": "Epic", "key": "CLS-104", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Know my cost dashboard", "updated": "2019-03-04T12:41:48+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Monitoring Dashboards", "diff_to_upstream": []}, "CLS-103": {"assignee": "vamshiky", "created": "2018-10-26T10:30:01+11:00", "creator": "vamshiky", "description": "develop a web portal to enable self service access.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-103", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Portal access for Self-service", "updated": "2019-09-02T11:20:39+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Portal access for Self-service", "diff_to_upstream": []}, "CLS-102": {"assignee": "farrella", "created": "2018-10-26T09:29:01+11:00", "creator": "farrella", "description": "Done. Email from Dean Thompson confirming that the Private Cloud (ANZ IP Address) are part of our \"Trusted Network\" and that no proxies are required in between.", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-102", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "farrella", "status": "Epic Done", "summary": "Establish Trust equivilance between Cloud and on premise", "updated": "2019-11-19T14:07:58+11:00", "estimate": null, "epic_ref": null, "epic_name": "Establish Trust equivilance between Cloud and on premise", "diff_to_upstream": []}, "CLS-100": {"assignee": "vamshiky", "created": "2018-10-25T11:42:05+11:00", "creator": "bhutejar", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-100", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "bhutejar", "status": "Backlog", "summary": "GCP - Insto WD Enablement", "updated": "2019-09-02T11:20:35+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Insto WD Enablement", "diff_to_upstream": []}, "CLS-99": {"assignee": "vamshiky", "created": "2018-10-25T11:40:44+11:00", "creator": "bhutejar", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-99", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "bhutejar", "status": "Backlog", "summary": "GCP - Open Banking Enablement", "updated": "2019-09-02T11:15:19+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Open Banking Enablement", "diff_to_upstream": []}, "CLS-98": {"assignee": "vamshiky", "created": "2018-10-25T11:39:23+11:00", "creator": "bhutejar", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-98", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "bhutejar", "status": "Backlog", "summary": "GCP - CSP Enablement", "updated": "2019-03-12T11:52:24+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - CSP Enablement", "diff_to_upstream": []}, "CLS-90": {"assignee": "ganalc1", "created": "2018-10-09T15:53:29+11:00", "creator": "butleri2", "description": null, "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-90", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "butleri2", "status": "Epic Done", "summary": "CES - Understand Customer Journey", "updated": "2019-05-21T16:53:14+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Awareness & education", "diff_to_upstream": []}, "CLS-88": {"assignee": "praveenp", "created": "2018-10-08T17:04:46+11:00", "creator": "praveenp", "description": "Incorporate use of puppet to manage Azure deployment patterns", "fixVersions": [], "issuetype": "Epic", "key": "CLS-88", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Establish Puppet instance", "updated": "2019-02-28T12:58:51+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Establish Puppet instance", "diff_to_upstream": []}, "CLS-86": {"assignee": "praveenp", "created": "2018-10-08T16:28:16+11:00", "creator": "praveenp", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-86", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Australian Transformation Program Wave 0", "updated": "2019-06-18T14:41:08+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Australian Transformation Program Wave 0", "diff_to_upstream": []}, "CLS-85": {"assignee": "ganalc1", "created": "2018-10-08T11:54:24+11:00", "creator": "schonrod", "description": "Stories relating to the governance or communication peices within the Cloud Broker squad", "fixVersions": [], "issuetype": "Epic", "key": "CLS-85", "labels": [], "lastViewed": null, "priority": "Normal", "project": "CLS", "reporter": "schonrod", "status": "Epic Done", "summary": "CES - Governance and Communication", "updated": "2019-05-23T11:26:46+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Governance and Communication", "diff_to_upstream": []}, "CLS-81": {"assignee": "praveenp", "created": "2018-09-14T09:43:47+10:00", "creator": "morgang", "description": "# Azure AD Application & Service onboarding\r\n # Azure request provisioning\r\n # Cloud poertal updates sand modifications.\r\n # MFA User remediation.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-81", "labels": [], "lastViewed": null, "priority": "Very High", "project": "CLS", "reporter": "morgang", "status": "Epic Done", "summary": "Azure - squad operations to support customer workloads", "updated": "2019-06-18T14:43:50+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - squad operations to support customer workloads", "diff_to_upstream": []}, "CLS-77": {"assignee": "praveenp", "created": "2018-07-06T16:31:54+10:00", "creator": "praveenp", "description": "Build and test and implement firewalls in Azure ", "fixVersions": [], "issuetype": "Epic", "key": "CLS-77", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Implement firewalls around Azure environment", "updated": "2018-10-08T16:52:15+11:00", "estimate": null, "epic_ref": null, "epic_name": "Implement firewalls around Azure environment", "diff_to_upstream": []}, "CLS-60": {"assignee": null, "created": "2018-06-28T01:54:30+10:00", "creator": "aaretis1", "description": "This is for Enterprise network requirements from ANZ On-premises to establish a coonectivity between AWS & ANZ. AWS Direct Connect service provides private connectivity between AWS and on-premises environment. The connection(s) can be used to access private resources running within an Amazon Virtual Private Cloud (VPC) using private IP space, while maintaining network separation between the public and private environments. \r\n\r\n*Scope:*\r\n\r\n\u2022 New Telstra TPN network connectivity for AWS Direct Connect, alongside the existing links for anz.com & FX App.\r\n \u2022 One Link for \u2018InfraDev\u2019.\r\n \u2022 One Link for Non-Prod (solely for developing & testing hybrid cloud solutions).\r\n \u2022 Redundant Production links for CI/CD Pipeline, AWS Console access, Remote Access etc.\r\n\r\n*Tasks:*\r\n \u2022 Network Solution.\r\n \u2022 CIDR Block allocations.\r\n \u2022 Work with Network Team to establish Telstra TPN & AWS Direct Connect.\r\n\u2022\u2022 Firewall Rules & Proxy configuration.\r\n\r\n \r\n\r\n*Definition of done:*\r\n\r\n\u2022 All required ANZ security approvals have been obtained (ANZ-AWS connectivity).\r\n \u2022 DNS, Routing, Proxy configuration is all working optimally.\r\n \u2022 Developers can access the AWS Console and Bastion Hosts in AWS.\r\n \u2022 Developers can test hybrid cloud applications (ANZ non-prod server  AWS non-prod server) via the ANZ non-prod perimeter.\r\n \u2022 IaaS team have a dedicated non-production link for testing things like DNS, Proxy Servers, routing etc without risk of impacting regular non-production work.\r\n\u2022 Using the blueprint from AWS Singapore, an instance of the Shared Services VPC is implemented in AWS Sydney, using the CI/CD Pipeline.\r\n\u2022 The design is documented in Confluence.\r\n\r\n*Architectural Governance:*\r\n\r\n\u2022 Networking solution needs finalising. Work through it with Klaus. High Priority.\r\n \u2022 Design around peering (or not) with Singapore Shared Services VPC.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-60", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "aaretis1", "status": "Epic Done", "summary": "NP-SER - Network Enablement on-prem", "updated": "2018-11-15T13:34:19+11:00", "estimate": null, "epic_ref": null, "epic_name": "1.1 NP-SER - Network Enablement On-Premises", "diff_to_upstream": []}, "CLS-57": {"assignee": "delbustr", "created": "2018-06-22T12:58:11+10:00", "creator": "alluguls", "description": "As a PO i want to create Innovation zone support model so that customer will know who to contact for support", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-57", "labels": ["CS_PI3_15"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "alluguls", "status": "Epic Done", "summary": "AWS - Operating & Support Model", "updated": "2019-04-08T19:34:05+10:00", "estimate": null, "epic_ref": null, "epic_name": "AWS - Operating & Support Model", "diff_to_upstream": []}, "CLS-48": {"assignee": "praveenp", "created": "2018-06-22T12:10:45+10:00", "creator": "praveenp", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-48", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - establish firewalls in Azure", "updated": "2018-10-08T16:57:47+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - establish firewalls in Azure", "diff_to_upstream": []}, "CLS-47": {"assignee": "vamshiky", "created": "2018-06-05T13:00:36+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-47", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Direct connectivity to GCP via Telstra Programable Network (TPN)", "updated": "2019-03-04T12:56:58+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP Interconnect (Prod)", "diff_to_upstream": []}, "CLS-46": {"assignee": "vamshiky", "created": "2018-06-05T12:55:41+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-46", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Develop infra as code to automate all the build activities - P2", "updated": "2019-03-12T11:51:09+11:00", "estimate": null, "epic_ref": null, "epic_name": "Platform - Build Automation", "diff_to_upstream": []}, "CLS-45": {"assignee": "vamshiky", "created": "2018-06-05T12:55:03+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-45", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Billing Integration with Aptio", "updated": "2019-03-04T12:51:02+11:00", "estimate": null, "epic_ref": null, "epic_name": "GCP  - Billing Integration with Aptio", "diff_to_upstream": []}, "CLS-44": {"assignee": "vamshiky", "created": "2018-06-05T12:43:03+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-44", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Complete UAM document draft and get it approved by security and other stakeholders", "updated": "2019-01-25T10:03:42+11:00", "estimate": null, "epic_ref": null, "epic_name": "Platform - Complete UAM document", "diff_to_upstream": []}, "CLS-43": {"assignee": "vamshiky", "created": "2018-06-05T12:41:54+10:00", "creator": "vamshiky", "description": "Configure Hashicorp vault for secret management (Prod instance)", "fixVersions": [], "issuetype": "Epic", "key": "CLS-43", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Backlog", "summary": "GCP - Configure Hashicorp vault for secret management", "updated": "2019-09-20T14:43:38+10:00", "estimate": null, "epic_ref": null, "epic_name": "GCP - Configure Hashicorp vault for secret management", "diff_to_upstream": []}, "CLS-42": {"assignee": "vamshiky", "created": "2018-06-05T12:40:32+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-42", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Build a process to schedule extract of all the IAM roles, users and their privileges. This is a compensating control for IIQ being unavailable. ", "updated": "2019-01-25T10:03:27+11:00", "estimate": null, "epic_ref": null, "epic_name": "Prod - IIQ Manual Extraction", "diff_to_upstream": []}, "CLS-41": {"assignee": "vamshiky", "created": "2018-06-05T12:39:25+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-41", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP Build and setup CI/CD pipeline using available toolset", "updated": "2019-01-25T10:03:16+11:00", "estimate": null, "epic_ref": null, "epic_name": "Prod - CI/CD Pipeline", "diff_to_upstream": []}, "CLS-40": {"assignee": "vamshiky", "created": "2018-06-05T12:36:39+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-40", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP  build VPN tunnel in production to GCP", "updated": "2019-01-25T10:03:02+11:00", "estimate": null, "epic_ref": null, "epic_name": "Prod - Cloud VPN setup", "diff_to_upstream": []}, "CLS-39": {"assignee": "vamshiky", "created": "2018-06-05T12:36:03+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-39", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP Set up Azure AD integration with GCP for authentication", "updated": "2019-01-25T10:02:52+11:00", "estimate": null, "epic_ref": null, "epic_name": "Prod - Azure AD Integration ", "diff_to_upstream": []}, "CLS-38": {"assignee": "vamshiky", "created": "2018-06-05T12:35:25+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-38", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Set up Arcsight Integration for Security Incident and Event Monitoring (SIEM)", "updated": "2019-01-25T10:02:39+11:00", "estimate": null, "epic_ref": null, "epic_name": "Prod - Arcsight Integration", "diff_to_upstream": []}, "CLS-37": {"assignee": "vamshiky", "created": "2018-06-05T12:34:32+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-37", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "GCP - Set up Splunk Integration in production for logging ", "updated": "2019-01-25T10:18:02+11:00", "estimate": null, "epic_ref": null, "epic_name": "Prod - Splunk Integration", "diff_to_upstream": []}, "CLS-36": {"assignee": "vamshiky", "created": "2018-06-05T12:33:42+10:00", "creator": "vamshiky", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-36", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "vamshiky", "status": "Epic Done", "summary": "Proof of concept to test Azure AD for GCP authentication", "updated": "2018-10-26T10:08:37+11:00", "estimate": null, "epic_ref": null, "epic_name": "(Non-Prod) Azure AD Integration with GCP PoC", "diff_to_upstream": []}, "CLS-35": {"assignee": "ganalc1", "created": "2018-05-21T16:51:41+10:00", "creator": "singhh10", "description": "\"As customer I want to determine the right cloud to fit my requirements (Internal/External)  so that that aligns with existing ANZ cloud policy as standards\r\n---Acceptance Criteria----\r\n\u2022 develop Workload Assessment process (treatment plans)\r\n\u2022 include entry criteria defined in placement intent \r\n---Dependencies----\r\nAzure , Aws, GCP Squads:\r\nRegister the list of services available for each cloud as a CI in SNOW\r\n\r\nWipro:\r\ndevelop Workload Assessment process (treatment plans)\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-35", "labels": ["CS_PI3_18"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud workload assessment ", "updated": "2019-05-24T15:36:50+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud workload assessment ", "diff_to_upstream": []}, "CLS-34": {"assignee": "ganalc1", "created": "2018-05-11T15:03:13+10:00", "creator": "singhh10", "description": "Create a cloud policy / Strategy that is effective and address the genuine needs of our customers\r\n\r\nwe have succeeded when we have a policy that is:\r\n* easy to use the\r\n* clear understanding of what a policy should achieve, \r\n* steps and actions necessary to implement the policy\r\n*strategy that aligns with\u00a0the cloud Mission and values of our customers and becomes the roadmap for cloud services", "fixVersions": [], "issuetype": "Epic", "key": "CLS-34", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud Broker - Cloud Policy / Strategy", "updated": "2019-05-23T11:13:38+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud Policy / Strategy", "diff_to_upstream": []}, "CLS-33": {"assignee": "ganalc1", "created": "2018-05-04T15:18:41+10:00", "creator": "singhh10", "description": "Currently policy dictates each cloud use case obtains cloud approval from the Group Executive Technology.\r\nWe need to change the process to accelerate the simple and safe use cases, which will enable our development teams to test & learn and be ready to deliver value to our customers as soon as cloud approval is given for production workload. \r\nwe have succeeded when we have \r\nthe ability to approve \r\n \r\n\u2022 different cloud services (IaaS/PaaS on ANZ managed cloud providers and SaaS) \r\n\u2022 workload profiles (innovation, non-production, production) and \r\n\u2022 reduced cloud approval time to days not weeks", "fixVersions": [], "issuetype": "Epic", "key": "CLS-33", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES- Cloud Approval ", "updated": "2019-05-23T11:03:16+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud Approval ", "diff_to_upstream": []}, "CLS-31": {"assignee": "ganalc1", "created": "2018-05-04T09:35:02+10:00", "creator": "ganalc1", "description": "Apply Soe hardening to Windows SOE - initially for the Azure CI/CD pipeline\r\nHardening code to be developed and transferable ", "fixVersions": [], "issuetype": "Epic", "key": "CLS-31", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CCS - Windows SOE Hardening ", "updated": "2018-11-12T14:53:17+11:00", "estimate": null, "epic_ref": null, "epic_name": "CCS - Windows SOE Hardening ", "diff_to_upstream": []}, "CLS-30": {"assignee": "praveenp", "created": "2018-05-02T12:01:48+10:00", "creator": "willingc", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-30", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "willingc", "status": "Epic Done", "summary": "Assess solution for Bank Anywhere", "updated": "2018-10-08T10:22:04+11:00", "estimate": null, "epic_ref": null, "epic_name": "Assess solution for Bank Anywhere", "diff_to_upstream": []}, "CLS-29": {"assignee": "ganalc1", "created": "2018-05-02T09:31:31+10:00", "creator": "singhh10", "description": "\"As a product owner I want a comprehensive  baseline of \"\"cloud\"\" specific controls which aligns to ANZ ADF process \r\n so that we can provide a consistent approach to cloud services to ensure external services are properly controlled and managed in accordance with our regulators requirements and ANZ policy\r\n---Acceptance Criteria----\r\nAligned  with Security control framework\r\nreview and approve by TAL's for their control area\r\n---Dependencies----\r\nISO\r\nalignment with Zambani objectives\r\nTAL's\r\nProvide review and feedback on controls for their areas\"\r\n\r\n\r\n\r\n* \r\n* \r\n* \r\n* * Review existing controls and standards\r\n * Develop or uplift control standards\r\n * Deliver a technical risk assessment and cloud controls catalogue\r\n\r\n\u00a0\r\n\r\n*Existing controls review - control areas.*\r\n\r\n\u00a0\r\n * We have a good grasp of the existing control domains as outlined in the GCC. (12 control disciplines)\u00a0\r\n * The ADF process also outlines (very high level) mandatory delivery controls based on GCC and other risk and governance controls\r\n * We know the existing security controls (+900) and the controls we have been asked to implement for Azure and \u00a0GCP\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nMy approach will be to focus on and address the delivery controls outlined in the new ADF process, this coupled with a review of the security controls, in particular the controls we have been asked to implement as part of Azure, AWS and GCP.\r\n\r\n\u00a0\r\n\r\nThe rational for this is we will have a framework that adheres to the enterprise delivery framework and will align to what our customers will be asking for when they start their ADF projects.", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-29", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Cloud Controls review and recommendation ", "updated": "2019-05-24T14:53:52+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Cloud Controls review and recommendation ", "diff_to_upstream": []}, "CLS-28": {"assignee": "ganalc1", "created": "2018-05-01T09:38:08+10:00", "creator": "singhh10", "description": "As a customer I want to be able to understand the cost of the services I consume in the Cloud so that I am able to make financial decisions on the use and optimisation of cloud services\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-28", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - common billing (Aptio)", "updated": "2019-05-23T11:10:35+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Apptio billing", "diff_to_upstream": []}, "CLS-26": {"assignee": "praveenp", "created": "2018-04-30T17:55:24+10:00", "creator": "praveenp", "description": "Feature: Refine Azure Public Cloud Service for higher customer satisfaction\r\n\r\nEpic: All activities to enable financial management for customers using Azure services, such as chargeback process, and providing transparency of charges.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-26", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Finance management and charge-back ", "updated": "2019-02-25T10:17:53+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Finance management and chargeback for Azure consumption", "diff_to_upstream": []}, "CLS-25": {"assignee": "praveenp", "created": "2018-04-30T17:19:34+10:00", "creator": "praveenp", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-25", "labels": [], "lastViewed": null, "priority": "Medium", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Set up non-prod CRE (Risk app) environment", "updated": "2019-06-21T10:23:05+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Set up non-prod CRE (Risk app) environment", "diff_to_upstream": []}, "CLS-23": {"assignee": "praveenp", "created": "2018-04-30T16:31:02+10:00", "creator": "praveenp", "description": "Feature: Use Azure services to run a NWOW HR Chatbot to operate as first level support for questions on NWOW", "fixVersions": [], "issuetype": "Epic", "key": "CLS-23", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Assess solution design of NWOW HR Chatbot", "updated": "2018-10-08T16:47:21+11:00", "estimate": null, "epic_ref": null, "epic_name": "Assess solution design of NWOW HR Chatbot", "diff_to_upstream": []}, "CLS-22": {"assignee": "ganalc1", "created": "2018-04-30T16:30:37+10:00", "creator": "ganalc1", "description": "\u2022\tVulnerability scanning of cloud SOE as part of the CICD pipeline for SOE creation \r\n\u2022\tIaaS only\r\n\r\n**MVP\r\n*  VM vulnerability scanning as part of SOE CI/CD process ", "fixVersions": [], "issuetype": "Epic", "key": "CLS-22", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CCS - Vulnerability scanning for Cloud SOE", "updated": "2018-11-15T12:49:58+11:00", "estimate": null, "epic_ref": null, "epic_name": "CCS - Vulnerability scanning for Cloud SOE", "diff_to_upstream": []}, "CLS-21": {"assignee": "ganalc1", "created": "2018-04-30T16:27:37+10:00", "creator": "ganalc1", "description": "\u2022\tMcAfee antivirus scanning available on cloud SOE\r\n\u2022\tIaaS only\r\n\u2022\tCloud Services will be a consumer of the AV service\r\n\r\n\r\n**MVP\r\n\u2022\tAzure Windows SOE with McAfee agent\r\n\u2022\tMcAfee Agent installed / deployed as part of SOE build process\r\n", "fixVersions": [], "issuetype": "Epic", "key": "CLS-21", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CCS - Antivirus Scanning for Cloud SOE", "updated": "2018-11-15T12:54:11+11:00", "estimate": null, "epic_ref": null, "epic_name": "CCS - Antivirus Scanning for Cloud SOE", "diff_to_upstream": []}, "CLS-20": {"assignee": "ganalc1", "created": "2018-04-30T12:08:27+10:00", "creator": "singhh10", "description": "\"As a product owner I want documented methodology and criteria that drives optimal placement of business workloads and hosting services with specific Cloud providers so that compliance with ANZ's Could Strategy, guiderails and tolerances, including concentration/aggregation.\r\n---Acceptance Criteria----\r\n\u2022  define strategic intent for how workloads are placed \r\n\u2022 define placement criteria for Azure, AWS, GCP, Internal Cloud, Container platform, ..\r\n\u2022 Documented, published and approved placement methodology\r\n---Dependencies----\r\nTAA\r\n\u2022 define and document the strategic intent for how workloads are placed\r\n\u2022 identify placement criteria for Azure, AWS, GCP, Internal Cloud, Container platform\"\r\n", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-20", "labels": ["CS_PI3_18"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Workload placement", "updated": "2019-05-23T10:47:36+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Workload placement Assessment", "diff_to_upstream": []}, "CLS-19": {"assignee": "ganalc1", "created": "2018-04-30T11:38:54+10:00", "creator": "singhh10", "description": "\u00a0\r\n\r\nAs a customer I should be able to align the Cloud services to ANZ service management standards\r\n\r\n---------\r\n\r\nAcceptance criteria:\r\n\r\nCloud Broker to be defined in SNOW as an enterprise service. (this process will need to be replicated for each cloud\u00a0service)\r\n\r\nCreate appropriate groups and integrations in SNOW to allow:\r\n\r\nService management\r\n\r\nIncident management\r\n\r\nAsset management\r\n\r\nChange management\u00a0\r\n\r\nOn boarding /engagement\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-19", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Service Management Service NOW", "updated": "2019-05-09T14:27:49+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Service Management Service NOW", "diff_to_upstream": []}, "CLS-18": {"assignee": "ganalc1", "created": "2018-04-30T11:37:52+10:00", "creator": "singhh10", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-18", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Audit Risk paper approval", "updated": "2019-05-24T15:07:09+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Audit Risk paper approval", "diff_to_upstream": []}, "CLS-17": {"assignee": "praveenp", "created": "2018-04-29T20:05:39+10:00", "creator": "praveenp", "description": "Feature: TBD\r\n\r\nEpic: Deploy security processes and handover to the appropriate team for monitoring all Azure activity in non-production", "fixVersions": [], "issuetype": "Epic", "key": "CLS-17", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Secure the Azure Authentication Processes for workloads to re-platform workloads onto Azure", "updated": "2018-11-15T12:51:31+11:00", "estimate": null, "epic_ref": null, "epic_name": "Secure the Azure Authentication Processes for workloads to re-platform workloads onto Azure", "diff_to_upstream": []}, "CLS-16": {"assignee": "praveenp", "created": "2018-04-29T20:00:42+10:00", "creator": "praveenp", "description": "Feature: Azure Self-service Non-prod Cloud Environment\r\n\r\nEpic: set up Azure policies to restrict actions based on security requirements - enhances security of the ANZ Azure platform.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-16", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Secure workloads by applying resource group level policies", "updated": "2019-03-29T11:16:25+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Secure workloads by applying resource group level policies", "diff_to_upstream": []}, "CLS-15": {"assignee": "praveenp", "created": "2018-04-29T19:56:44+10:00", "creator": "praveenp", "description": "Feature: Azure Production Service\r\n\r\nEpic: Complete production transition activities to get approval for deploying an Azure Production service\r\n\r\nDefinition of done: TBD", "fixVersions": [], "issuetype": "Epic", "key": "CLS-15", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Production Transition \u2013 ADF", "updated": "2018-10-08T16:50:40+11:00", "estimate": null, "epic_ref": null, "epic_name": "Production Transition \u2013 ADF", "diff_to_upstream": []}, "CLS-14": {"assignee": "praveenp", "created": "2018-04-29T19:55:14+10:00", "creator": "praveenp", "description": "Feature: TBD\r\n\r\nEpic: Monitoring solution for customers to self-service as well as work with security to determine\u00a0if solution is required for\u00a0 monitoring vulnerabilities and security events\r\n\r\nDefinition of Done: TBD", "fixVersions": [], "issuetype": "Epic", "key": "CLS-14", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Monitoring Solution for Innovation Environment ", "updated": "2019-04-17T16:08:17+10:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Monitoring Solution for Innovation Environment ", "diff_to_upstream": []}, "CLS-13": {"assignee": "praveenp", "created": "2018-04-29T19:47:55+10:00", "creator": "praveenp", "description": "Feature: TBD\r\n\r\nEpic: Set up ANZ Azure tenants and subscriptions with enough licenses and enable access to Azure resources in the required Australian regions.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-13", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Set up ANZ Azure tenants and subscriptions for efficient ANZ consumption", "updated": "2018-10-08T16:49:34+11:00", "estimate": null, "epic_ref": null, "epic_name": "Set up ANZ Azure tenants and subscriptions for efficient ANZ consumption", "diff_to_upstream": []}, "CLS-11": {"assignee": "praveenp", "created": "2018-04-29T19:10:06+10:00", "creator": "praveenp", "description": "Feature:\u00a0INFAAS-82 Azure Self Service Non-Prod Cloud Environment\r\n\r\nEpic: Design and develop standardised patterns which customers will use as basic infrastructure to develop application specific code. Incorporate patterns into a catalogue made available for customers to leverage in their road to develop Cloud friendly workloads.\r\n\r\nDefinition of done: TBD", "fixVersions": [], "issuetype": "Epic", "key": "CLS-11", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Deployment Patterns for workloads", "updated": "2019-03-05T15:17:56+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Deployment Patterns for workloads", "diff_to_upstream": []}, "CLS-9": {"assignee": "praveenp", "created": "2018-04-29T18:52:34+10:00", "creator": "praveenp", "description": "Feature: Azure Self Service Non-Prod\u00a0Cloud Environment\r\n\r\nEpic: establish the flows and connectivity from the\u00a0on-premise Non-prod to Azure Non-Prod environment\r\n\r\nDefinition of done: TBD", "fixVersions": [], "issuetype": "Epic", "key": "CLS-9", "labels": [], "lastViewed": null, "priority": "High", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Establish Network Connectivity", "updated": "2019-02-25T09:48:45+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Establish Network Connectivity", "diff_to_upstream": []}, "CLS-8": {"assignee": "praveenp", "created": "2018-04-29T18:50:28+10:00", "creator": "praveenp", "description": "Feature: Enable customer Retail Risk to use the Azure environment for machine learning use case\r\n\r\nEpic: Set up a method for the Retail Risk team to upload large datasets from ANZ non-production systems into Azure, for use in their machine learning workload.\r\n\r\nDefinition of done: TBD", "fixVersions": [], "issuetype": "Epic", "key": "CLS-8", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Large Data Upload from ANZ to Azure", "updated": "2018-10-08T16:55:36+11:00", "estimate": null, "epic_ref": null, "epic_name": "Large Data Upload from ANZ to Azure", "diff_to_upstream": []}, "CLS-6": {"assignee": "praveenp", "created": "2018-04-27T11:01:50+10:00", "creator": "praveenp", "description": "Feature:\u00a0INFAAS-81 Azure Self Service Innovation Cloud Environment\r\n\r\nEpic: Design, build, test and implement an onboarding solution for customers to self-service requests for the Azure environment.", "fixVersions": [], "issuetype": "Epic", "key": "CLS-6", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Onboarding users onto Azure", "updated": "2019-03-29T11:13:59+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Onboarding users onto Azure", "diff_to_upstream": []}, "CLS-4": {"assignee": "praveenp", "created": "2018-04-18T10:20:00+10:00", "creator": "praveenp", "description": "Feature: INFAAS-81 Azure Self Service Innovation Cloud Environment\r\n\r\nThis epic is to design, build, test and implement a secure and easy to use Remote Desktop Protocol solution for access into Azure VMs.\r\n Customers need this to use Azure IaaS services", "fixVersions": [], "issuetype": "Epic", "key": "CLS-4", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "praveenp", "status": "Epic Done", "summary": "Azure - Establish RDP Solution for Azure", "updated": "2019-02-25T09:27:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "Azure - Establish RDP Solution", "diff_to_upstream": []}, "CLS-3": {"assignee": "ganalc1", "created": "2018-04-13T07:49:49+10:00", "creator": "willingc", "description": "\"As a product owner I want a well-defined and articulated operating model that is the bridge between strategy and day-to-day operations  so that cloud services members have guidance, context, clarity and alignment\r\n---Acceptance Criteria----\r\n\u2022 Peer reviewed by Cloud services LT\r\n\u2022 Approved by TAL\r\n\u2022 Socialised the Cloud Services Operating model to other domains \r\n---Dependencies----\r\nCloud services LT to provide review and input\"\r\n\r\n\r\n\r\nOp model is the conduit between strategy and operations. \r\n we have succeeded when we have a\r\n well-defined and articulated operating model that is the bridge between strategy and day-to-day operations.\r\n\r\n\r\nGuides the team, to provide the context, and enables the behaviors that will realize the strategy", "fixVersions": ["Cloud Services PI 3"], "issuetype": "Epic", "key": "CLS-3", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Operating Model", "updated": "2019-05-23T10:36:43+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Operating Model", "diff_to_upstream": []}, "CLS-2": {"assignee": "ganalc1", "created": "2018-04-13T07:46:39+10:00", "creator": "willingc", "description": null, "fixVersions": [], "issuetype": "Epic", "key": "CLS-2", "labels": [], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "willingc", "status": "Epic Done", "summary": "Organisational Change Management", "updated": "2018-11-13T14:29:33+11:00", "estimate": null, "epic_ref": null, "epic_name": "Cloud Broker - Organisational Change Management", "diff_to_upstream": []}, "CLS-1": {"assignee": "ganalc1", "created": "2018-04-06T10:12:21+10:00", "creator": "willingc", "description": "As a Customer I should be able to engage cloud services in a simple and efficient manner\r\n\r\n\u00a0\r\n\r\n---\r\n\r\n\u00a0\r\n\r\nThe Cloud services customer engagement model will\u00a0 empower the\u00a0 businesses with the right tools that drive increase in the Customer use of cloud service within the bank.\r\n\r\n* Should not be series of one off processes\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0", "fixVersions": [], "issuetype": "Epic", "key": "CLS-1", "labels": ["CS_PI3_11"], "lastViewed": null, "priority": "Major", "project": "CLS", "reporter": "ganalc1", "status": "Epic Done", "summary": "CES - Customer Engagement Model", "updated": "2019-05-31T11:33:11+10:00", "estimate": null, "epic_ref": null, "epic_name": "CES - Customer Engagement Model", "diff_to_upstream": []}}